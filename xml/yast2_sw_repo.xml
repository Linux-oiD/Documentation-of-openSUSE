<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<sect1 id="sec.y2.sw.instsource">
 <title>Managing Software Repositories and Services</title>

 <para>
  If you want to install third-party software, add additional software
  repositories to your system. By default, the product repositories such as
  &productname;-DVD &productnumber; and a matching update repository are
  automatically configured <phrase os="osuse">during the
  installation</phrase><phrase os="sles;sled;">once you have registered your
  system. For more information about registration, see
  <xref
    linkend="sec.i.yast2.conf.manual.cc"/></phrase>. Depending on
  the initially selected product, a separate language add-on repository with
  translations, dictionaries, etc. might also be configured.
 </para>

 <para>
  To manage repositories, start &yast; and select <menuchoice>
  <guimenu>Software</guimenu> <guimenu>Software Repositories</guimenu>
  </menuchoice>. The <guimenu>Configured Software Repositories</guimenu>
  dialog opens. Here, you can also manage subscriptions to so-called
  <guimenu>Services</guimenu> by changing the <guimenu>View</guimenu> at the
  right corner of the dialog to <guimenu>All Services</guimenu>. A Service
  in this context is a <guimenu>Repository Index Service</guimenu> (RIS)
  that can offer one or more software repositories. Such a Service can be
  changed dynamically by its administrator or vendor.
 </para>

 <para>
  Each repository provides files describing content of the repository
  (package names, versions, etc.). These repository description files are
  downloaded to a local cache that is used by &yast;. To ensure their
  integrity, software repositories can be signed with the GPG Key of the
  repository maintainer. Whenever you add a new repository, &yast; offers
  the ability to import its key.
 </para>

 <warning>
  <title>Trusting External Software Sources</title>
  <para>
   Before adding external software repositories to your list of
   repositories, make sure this repository can be trusted. &productname; is
   not responsible for any potential problems arising from software
   installed from third-party software repositories.
  </para>
 </warning>

 <sect2 id="sec.y2.sw.instsource.add">
  <title>Adding Software Repositories</title>
  <para>
   You can either add repositories from a local harddisk, from a removable
   medium (like a CD, DVD or a USB mass storage) or from a network.
  </para>
  <para>
   To add repositories from the <guimenu>Configured Software
   Repositories</guimenu> dialog in &yast; proceed as follows:
  </para>
  <procedure>
   <step>
    <para>
     Click <guimenu>Add</guimenu>.
    </para>
   </step>
   <step>
    <para>
     From the list of available <guimenu>Media Types</guimenu> specify the
     type matching your repository:
    </para>
    <para>
     For network sources, it is usually sufficient to use the default
     option, <guimenu>Specify URL</guimenu>.
    </para>
    <para>
     To add a repository from a removable medium or a local harddisk, choose
     the relevant option and insert the medium or connect the USB device to
     the machine, respectively.
    </para>
   </step>
   <step>
    <para>
     You can choose to <guimenu>Download Repository Description
     Files</guimenu> now. If the option is unchecked, &yast; will
     automatically download the files later, if needed. Click
     <guimenu>Next</guimenu> to proceed.
    </para>
   </step>
   <step>
    <para>
     When adding a repository from the network, enter the data you are
     prompted for. Continue with <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Depending on the repository you have added, you might be asked if you
     want to import the GPG key with which is signed or asked to agree to a
     license.
    </para>
    <para>
     After confirming these messages, &yast; will download and parse the
     metadata and add the repository to the list of <guimenu>Configured
     Repositories.</guimenu>.
    </para>
   </step>
   <step>
    <para>
     If needed, adjust the repository <guimenu>Properties</guimenu> as
     described in <xref linkend="sec.y2.sw.instsource.manage"/> or confirm
     your changes with <guimenu>OK</guimenu> to close the configuration
     dialog.
    </para>
   </step>
  </procedure>
  <para>
   Now you can install software from this repository as described in
   <xref
    linkend="sec.y2.sw.qt"/><phrase os="sled;osuse"> or in
   <xref
    linkend="sec.y2.sw.gtk"/></phrase>.
  </para>
  <para os="osuse">
   &yast; also offers a list of predefined popular repositories available
   under <guimenu>Community Repositories</guimenu>. Among others, it
   includes driver repositories for nVidia and ATI graphics cards, and
   popular projects from the &opensuse;&reg; Build Service, such as the
   Mozilla repository (containing packages with the most recent versions of
   Firefox and Thunderbird).
  </para>
  <procedure os="osuse">
   <title>Configuring Community Repositories</title>
   <step>
    <para>
     Start &yast; and select <menuchoice> <guimenu>Software</guimenu>
     <guimenu>Software Repositories</guimenu> </menuchoice>.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Choose <guimenu>Community Repositories</guimenu> and proceed with
     <guimenu>Next</guimenu>.
    </para>
   </step>
   <step>
    <para>
     From the preconfigured list of repositories choose the ones you want to
     add by ticking the respective check boxes. The Mozilla repository, for
     example, is listed as <guimenu>&opensuse; BuildService -
     Mozilla</guimenu>.
    </para>
    <para>
     Confirm with <guimenu>OK</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Accept to <guimenu>Import</guimenu> the GnuPG key. You need to import a
     key for each repository you have chosen.
    </para>
   </step>
   <step>
    <para>
     The new software repositories are now listed in the <guimenu>Configured
     Software Repositories</guimenu> overview. Click <guimenu>OK</guimenu>
     to leave the software repositories configuration.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 id="sec.y2.sw.instsource.manage">
  <title>Managing Repository Properties</title>
  <para>
   The <guimenu>Configured Software Repositories</guimenu> overview of the
   <guimenu>Software Repositories</guimenu> lets you change the following
   repository properties:
  </para>
  <variablelist>
   <varlistentry>
    <term>Status</term>
    <listitem>
     <para>
      The repository status can either be <guimenu>Enabled</guimenu> or
      <guimenu>Disabled</guimenu>. You can only install packages from
      repositories that are enabled. To turn a repository off temporarily
      click <guimenu>Disable</guimenu>. You can also double-click on a
      repository name to toggle its status. If you want to remove a
      repository completely, click <guimenu>Delete</guimenu>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Refresh</term>
    <listitem>
     <para>
      When refreshing a repository, its content description (package names,
      versions, etc.) is downloaded to a local cache that is used by &yast;.
      It is sufficient to do this once for static repositories such as CDs
      or DVDs, whereas repositories whose content changes often should be
      refreshed frequently. Enable The easiest way to keep a repository's
      cache up-to-date is to choose <guimenu>Automatically
      Refresh</guimenu>. To do a manual refresh click
      <guimenu>Refresh</guimenu> and select one of the options.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Keep Downloaded Packages</guimenu>
    </term>
    <listitem>
     <para>
      Packages from remote repositories are downloaded before being
      installed. By default, they are deleted upon a successful
      installation. Activating <guimenu>Keep Downloaded Packages</guimenu>
      prevents the deletion of downloaded packages. The download location is
      configured in <filename>/etc/zypp/zypp.conf</filename>, by default it
      is <filename>/var/cache/zypp/packages</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Priority</guimenu>
    </term>
    <listitem>
     <para>
      The <guimenu>Priority</guimenu> of a repository is a value between
      <literal>1</literal> and <literal>200</literal>, with
      <literal>1</literal> being the highest priority and
      <literal>200</literal> the lowest priority. Any new repositories that
      are added with &yast; get a priority of <literal>99</literal> by
      default. If you do not care about a priority value for a certain
      repository, you can also set the value to <literal>0</literal> to
      apply the default priority to that repository (<literal>99</literal>).
      If a package is available in more than one repository, then the
      repository with the highest priority takes precedence. This is useful
      if you want to avoid downloading packages unnecessarily from the
      Internet by giving a local repository (for example, a DVD) a higher
      priority.
     </para>
     <important>
      <title>Priority vs. Version</title>
      <para>
       The repository with the highest priority takes precedence in any
       case. Therefore, make sure that the update repository always has the
       highest priority (20 by default), otherwise you might install an
       outdated version that will not be updated until the next online
       update.
      </para>
      <para os="osuse">
       If you add repositories providing new versions for programs shipped
       with &productname; (for example a repository with the latest KDE or
       GNOME version), make sure they have a higher priority than the
       standard repositories, otherwise packages from these repositories
       will not be installed by default.
      </para>
     </important>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Name and URL</term>
    <listitem>
     <para>
      To change a repository name or its URL, select it from the list with a
      single-click and then click <guimenu>Edit</guimenu>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 id="sec.y2.sw.repo.gpg-keys">
  <title>Managing Repository Keys</title>
  <para>
   To ensure their integrity, software repositories can be signed with the
   GPG Key of the repository maintainer. Whenever you add a new repository,
   &yast; offers to import its key. Verify it as you would do with any other
   GPG key and make sure it does not change. If you detect a key change,
   something might be wrong with the repository. Disable the repository as
   an installation source until you know the cause of the key change.
  </para>
  <para>
   To manage all imported keys, click <guimenu>GPG Keys...</guimenu> in the
   <guimenu>Configured Software Repositories</guimenu> dialog. Select an
   entry with the mouse to show the key properties at the bottom of the
   window. <guimenu>Add</guimenu>, <guimenu>Edit</guimenu> or
   <guimenu>Delete</guimenu> keys with a click on the respective buttons.
  </para>
 </sect2>
</sect1>
