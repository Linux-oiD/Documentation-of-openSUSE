<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.qemu.overview">
 <title>Overview</title>
 <para>
  &qemu; is a fast, cross-platform Open Source machine emulator which can
  emulate a huge number of hardware architectures for you. &qemu; supports
  two basic operation modes: with a <emphasis>full system
  virtualization</emphasis> you can run a complete unmodified operating
  system (&vmguest;) on top of your existing system (&vmhost;), while
  <emphasis>user mode emulation</emphasis> lets you run a single Linux
  process compiled for a certain CPU on another CPU.
 </para>
 <para>
  You can also use &qemu; for debugging purposes - you can easily stop your
  running virtual machine, inspect its state and save and restore it later.
 </para>
 <para>
  &qemu; consists of the following parts:
 </para>
 <itemizedlist>
  <listitem>
   <para>
    processor emulator (x86, PowerPC, Sparc ...)
   </para>
  </listitem>
  <listitem>
   <para>
    emulated devices (graphic card, network card, hard drives, mice ...)
   </para>
  </listitem>
  <listitem>
   <para>
    generic devices used to connect the emulated devices to the related host
    devices
   </para>
  </listitem>
  <listitem>
   <para>
    descriptions of the emulated machines (PC, Power Mac ...)
   </para>
  </listitem>
  <listitem>
   <para>
    debugger
   </para>
  </listitem>
  <listitem>
   <para>
    user interface used to interact with the emulator
   </para>
  </listitem>
 </itemizedlist>
 <para>
  As a virtualization solution, &qemu; can be run together with the &kvm;
  kernel module. If the &vmguest; hardware architecture is the same as the
  architecture of &vmhost;, &qemu; can take advantage of the &kvm;
  acceleration.
 </para>
</chapter>
