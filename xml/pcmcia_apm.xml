<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.pmanage">
 <title>Power Management</title><indexterm id="idx.power_management"
  class="startofrange">
 <primary>power management</primary></indexterm><indexterm id="idx.laptops_power_management"
  class="startofrange">
 <primary>laptops</primary>
 <secondary>power management</secondary></indexterm><indexterm>
 <primary>power management</primary>
 <secondary>ACPI</secondary></indexterm>
 <para arch="zseries" os="sles">
  The features and hardware described in this chapter do not exist on IBM
  &zseries;, making this chapter irrelevant for these platforms.
 </para>
 <para>
  Power management is especially important on laptop computers, but is also
  useful on other systems. ACPI (Advanced Configuration and Power Interface)
  is available on all modern computers (laptops, desktops, and servers).
  Power management technologies require suitable hardware and BIOS routines.
  Most laptops and many modern desktops and servers meet these requirements.
  It is also possible to control CPU frequency scaling to save power or
  decrease noise.
 </para>
 <sect1 id="sec.pmanage.save">
  <title>Power Saving Functions</title>

  <para>
   Power saving functions are not only significant for the mobile use of
   laptops, but also for desktop systems. The main functions and their use
   in ACPI are:
  </para>

  <variablelist>
   <varlistentry>
    <term>Standby<indexterm>
     <primary>power management</primary>
     <secondary>standby</secondary></indexterm>
    </term>
    <listitem>
     <para>
      not supported.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Suspend (to memory)<indexterm>
     <primary>power management</primary>
     <secondary>suspend</secondary></indexterm>
    </term>
    <listitem>
     <para>
      This mode writes the entire system state to the RAM. Subsequently, the
      entire system except the RAM is put to sleep. In this state, the
      computer consumes very little power. The advantage of this state is
      the possibility of resuming work at the same point within a few
      seconds without having to boot and restart applications. This function
      corresponds to the ACPI state <literal>S3</literal>. The support of
      this state is still under development and therefore largely depends on
      the hardware.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Hibernation (suspend to disk)<indexterm>
     <primary>power management</primary>
     <secondary>hibernation</secondary></indexterm>
    </term>
    <listitem>
     <para>
      In this operating mode, the entire system state is written to the hard
      disk and the system is powered off. There must be a swap partition at
      least as big as the RAM to write all the active data. Reactivation
      from this state takes about 30 to 90 seconds. The state prior to the
      suspend is restored. Some manufacturers offer useful hybrid variants
      of this mode, such as RediSafe in IBM Thinkpads. The corresponding
      ACPI state is <literal>S4</literal>. In Linux, suspend to disk is
      performed by kernel routines that are independent from ACPI.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Battery Monitor<indexterm>
     <primary>power management</primary>
     <secondary>battery monitor</secondary></indexterm>
    </term>
    <listitem>
     <para>
      ACPI checks the battery charge status and provides information about
      it. Additionally, it coordinates actions to perform when a critical
      charge status is reached.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Automatic Power-Off</term>
    <listitem>
     <para>
      Following a shutdown, the computer is powered off. This is especially
      important when an automatic shutdown is performed shortly before the
      battery is empty.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Processor Speed Control</term>
    <listitem>
     <para>
      In connection with the CPU, energy can be saved in three different
      ways: frequency and voltage scaling (also known as
      <productname>PowerNow!</productname> or
      <productname>Speedstep</productname>), throttling and putting the
      processor to sleep (C-states). Depending on the operating mode of the
      computer, these methods can also be combined.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.pmanage.acpi">
  <title>Advanced Configuration and Power Interface (ACPI)</title><indexterm id="idx.power_management_ACPI" class="startofrange">

  <primary>power management</primary>

  <secondary>ACPI</secondary></indexterm>

  <para>
   ACPI was designed to enable the operating system to set up and control
   the individual hardware components. ACPI supersedes both Power Management
   Plug and Play (PnP) and Advanced Power Management (APM). It delivers
   information about the battery, AC adapter, temperature, fan and system
   events, like <quote>close lid</quote> or <quote>battery low.</quote>
  </para>

  <para>
   The BIOS provides tables containing information about the individual
   components and hardware access methods. The operating system uses this
   information for tasks like assigning interrupts or activating and
   deactivating components. Because the operating system executes commands
   stored in the BIOS, the functionality depends on the BIOS implementation.
   The tables ACPI can detect and load are reported in
   <filename>/var/log/boot.msg</filename>. See
   <xref
    linkend="sec.pmanage.probs"/> for more information about
   troubleshooting ACPI problems.
  </para><indexterm>

  <primary>log files</primary>

  <secondary>boot.msg</secondary></indexterm>

  <sect2 id="sec.pmanage.powernow">
   <title>Controlling the CPU Performance</title>
   <para>
    The CPU can save energy in three ways:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <xref linkend="sec.pmanage.powernow.scale" xrefstyle="select:title"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <xref linkend="sec.pmanage.powernow.throttle" xrefstyle="select:title"/>
     </para>
    </listitem>
    <listitem>
     <para>
      <xref linkend="sec.pmanage.powernow.sleep" xrefstyle="select:title"/>
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Depending on the operating mode of the computer, these methods can be
    combined. Saving energy also means that the system heats up less and the
    fans are activated less frequently.
   </para>
   <para>
    Frequency scaling and throttling are only relevant if the processor is
    busy, because the most economic C-state is applied anyway when the
    processor is idle. If the CPU is busy, frequency scaling is the
    recommended power saving method. Often the processor only works with a
    partial load. In this case, it can be run with a lower frequency.
    Usually, dynamic frequency scaling controlled by the kernel on-demand
    governor is the best approach.
   </para>
   <para>
    Throttling should be used as the last resort, for example, to extend the
    battery operation time despite a high system load. However, some systems
    do not run smoothly when they are throttled too much. Moreover, CPU
    throttling does not make sense if the CPU has little to do.
   </para>
   <sect3 id="sec.pmanage.powernow.scale">
    <title>Frequency and Voltage Scaling</title>
    <para>
     <productname>PowerNow!</productname> and
     <productname>Speedstep</productname> are the designations AMD and Intel
     use for this technology. However, this technology is also applied in
     processors of other manufacturers. The clock frequency of the CPU and
     its core voltage are reduced at the same time, resulting in more than
     linear energy savings. This means that when the frequency is halved
     (half performance), far less than half of the energy is consumed. This
     technology is independent from ACPI.
    </para>
    <para>
     There are two main approaches to performing CPU frequency
     scaling&mdash;by the kernel itself (&cpufreq; infrastructure with
     in-kernel governors) or by a userspace application. The in-kernel
     governors are policy governors that can change the CPU frequency based
     on different criteria (a sort of pre-configured power schemes for the
     CPU). The following governors are available with the &cpufreq;
     subsystem:
    </para>
    <variablelist>
     <varlistentry>
      <term>Performance Governor</term>
      <listitem>
       <para>
        The CPU frequency is statically set to the highest possible for
        maximum performance. Consequently, saving power is not the focus of
        this governor.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Powersave Governor</term>
      <listitem>
       <para>
        The CPU frequency is statically set to the lowest possible. This can
        have severe impact on the performance, as the system will never rise
        above this frequency no matter how busy the processors are.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>On-demand Governor</term>
      <listitem>
       <para>
        The kernel implementation of a dynamic CPU frequency policy: The
        governor monitors the processor utilization. As soon as it exceeds a
        certain threshold, the governor will set the frequency to the
        highest available. If the utilization is less than the threshold,
        the next lowest frequency is used. If the system continues to be
        underutilized, the frequency is again reduced until the lowest
        available frequency is set.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Conservative Governor</term>
      <listitem>
       <para>
        Similar to the on-demand implementation, this governor also
        dynamically adjusts frequencies based on processor utilization,
        except that it allows for a more gradual increase in power. If
        processor utilization exceeds a certain threshold, the governor does
        not immediately switch to the highest available frequency (as the
        on-demand governor does), but only to next higher frequency
        available.
       </para>
      </listitem>
     </varlistentry>
<!--taroth 2010-08-03: userspace governor is no longer supported by us, according to
       trenn and hmacht-->
<!--<varlistentry>
      <term>userspace governor</term>
      <listitem>
       <para> If the userspace governor is set, the kernel gives the control of
        CPU frequency scaling to a userspace application, usually a daemon. In
        &productname; distributions, this daemon is the
        <command>powersaved</command> package. When this implementation is used,
        the CPU frequency is adjusted in regard to the current system load. By
        default, one of the kernel implementations is used. However, on some
        hardware or in regard to specific processors or drivers, the userspace
        implementation is still the only working solution. </para>
      </listitem>
     </varlistentry>-->
    </variablelist>
    <para>
     The relevant files for the kernel governors are located at
     <filename>/sys/devices/system/cpu/cpu*/cpufreq/</filename>. If your
     machine has more than one CPU,
     <filename>/sys/devices/system/cpu/</filename> will hold a subdirectory
     for each processor: <filename>cpu0</filename>,
     <filename>cpu1</filename>, etc. If your system currently uses the
     on-demand or conservative governor, you will see a separate
     subdirectory for those governors in <filename>cpufreq</filename>,
     containing the parameters for the governors.
    </para>
   </sect3>
   <sect3 id="sec.pmanage.powernow.throttle">
    <title>Throttling the Clock Frequency (T-states)</title>
    <para>
     This technology omits a certain percentage of the clock signal impulses
     for the CPU. At 25% throttling, every fourth impulse is omitted. At
     87.5%, only every eighth impulse reaches the processor. However, the
     energy savings are a little less than linear. Normally, throttling is
     only used if frequency scaling is not available or to maximize power
     savings. This technology must be controlled by a special process, as
     well. The system interface for Processor Throttling States (T-states)
     is <filename>/proc/acpi/processor/*/throttling</filename>.
    </para>
   </sect3>
   <sect3 id="sec.pmanage.powernow.sleep">
    <title>Putting the Processor to Sleep (C-states)</title>
    <para>
     Modern processors have several power saving modes called
     <literal>C-states</literal>. They reflect the capability of an idle
     processor to turn off unused components in order to save power. The
     operating system puts the processor to sleep whenever there is no
     activity. In this case, the operating system sends the CPU a
     <command>halt</command> command. There are three idle states:
     <literal>C1</literal>, <literal>C2</literal>, and
     <literal>C3</literal>. In the most economic state,
     <literal>C3</literal>, even the synchronization of the processor cache
     with the main memory is halted. Therefore, this state can only be
     applied if no other device modifies the contents of the main memory via
     bus master activity. Some drivers prevent the use of
     <literal>C3</literal>. The current state is displayed in
     <filename>/proc/acpi/processor/*/power</filename>.
    </para>
    <para os="sles;sled">
     For more information, refer to
     <xref
      linkend="sec.tuning.power.cpu.cstates"/>.
    </para>
   </sect3>
  </sect2>

  <sect2 id="sec.pmanage.tools">
   <title>Tools</title>
   <para>
    To view or adjust the current settings of the &cpufreq; subsystem use
    the tools provided by
    <systemitem class="resource"
     >cpufrequtils</systemitem> for that.
    After you have installed the
    <systemitem class="resource">cpufrequtils</systemitem> package, use the
    <command>cpufreq-info</command> to retrieve &cpufreq; kernel
    information. The <command>cpufreq-set</command> command can be used to
    modify &cpufreq; settings. For example, run the following command as
    &rootuser; to activate the on-demand governor at runtime:
   </para>
<screen>cpufreq-set -g ondemand</screen>
   <para>
    For more details and the available options, refer to the
    <command>cpufreq-info</command> and the <command>cpufreq-set</command>
    man pages or run
    <command>cpufreq-info&nbsp;<option>--help</option></command> or
    <command>cpufreq-set&nbsp;<option>--help</option></command>,
    respectively.
   </para>
   <para>
    A useful tool for monitoring system power consumption is &powertop;,
    available after installation of the
    <systemitem
     class="resource">powertop</systemitem> package. It
    helps you to identify the reasons for unnecessary high power consumption
    (for example, processes that are mainly responsible for waking up a
    processor from its idle state) and to optimize your system settings to
    avoid these. It supports both Intel and AMD processors. For detailed
    information, refer to the &powertop; project page at
    <ulink url="http://www.lesswatts.org/projects/powertop/"
    />.
   </para>
   <para>
    Apart from the tools above, the following ACPI utilities is available:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      To merely display information, like the battery charge level and the
      temperature, you can use the <command>acpi</command> command. For a
      list of available options, run <command>acpi --help</command>.
     </para>
    </listitem>
    <listitem>
     <para>
      For editing the ACPI tables in the BIOS, install the
      <systemitem
       class="resource">acpica</systemitem> package.
     </para>
    </listitem>
   </itemizedlist>
  </sect2>

  <sect2 id="sec.pmanage.probs">
   <title>Troubleshooting</title>
   <para>
    There are two different types of problems. On one hand, the ACPI code of
    the kernel may contain bugs that were not detected in time. In this
    case, a solution will be made available for download. More often, the
    problems are caused by the BIOS. Sometimes, deviations from the ACPI
    specification are purposely integrated in the BIOS to circumvent errors
    in the ACPI implementation of other widespread operating systems.
    Hardware components that have serious errors in the ACPI implementation
    are recorded in a blacklist that prevents the Linux kernel from using
    ACPI for these components.
   </para>
   <para>
    The first thing to do when problems are encountered is to update the
    BIOS. If the computer does not boot at all, one of the following boot
    parameters may be helpful:
   </para>
   <variablelist>
    <varlistentry>
     <term>pci=noacpi</term>
     <listitem>
      <para>
       Do not use ACPI for configuring the PCI devices.
      </para>
     </listitem>
    </varlistentry>
<!--taroth 070222: replacing oldboot with ht acc. to seife - both boot
 parameters do the same thing but oldboot will be removed in the future-->
    <varlistentry>
     <term>acpi=ht</term>
     <listitem>
      <para>
       Only perform a simple resource configuration. Do not use ACPI for
       other purposes.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>acpi=off</term>
     <listitem>
      <para>
       Disable ACPI.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <warning>
    <title>Problems Booting without ACPI</title>
    <para>
     Some newer machines (especially SMP systems and AMD64 systems) need
     ACPI for configuring the hardware correctly. On these machines,
     disabling ACPI can cause problems.
    </para>
   </warning>
   <para>
    Sometimes, the machine is confused by hardware that is attached over USB
    or FireWire. If a machine refuses to boot, unplug all unneeded hardware
    and try again.
   </para>
   <para>
    Monitor the boot messages of the system with the command <command>dmesg
    <option>| grep -2i acpi</option></command> (or all messages, because the
    problem may not be caused by ACPI) after booting. If an error occurs
    while parsing an ACPI table, the most important table&mdash;the DSDT
    (<emphasis>Differentiated System Description Table</emphasis>)&mdash;can
    be replaced with an improved version. In this case, the faulty DSDT of
    the BIOS is ignored. The procedure is described in
    <xref linkend="sec.powersave.trouble.acpi"/>.
   </para>
   <para>
    In the kernel configuration, there is a switch for activating ACPI debug
    messages. If a kernel with ACPI debugging is compiled and installed,
    experts searching for an error can be supported with detailed
    information.
   </para>
   <para>
    If you experience BIOS or hardware problems, it is always advisable to
    contact the manufacturers. Especially if they do not always provide
    assistance for Linux, they should be confronted with the problems.
    Manufacturers will only take the issue seriously if they realize that an
    adequate number of their customers use Linux.
   </para>
   <sect3 id="sec.pmanage.info">
    <title>For More Information</title>
<!--<para>Additional documentation and help on ACPI:</para>-->
    <itemizedlist>
     <listitem>
      <para>
       <ulink url="http://tldp.org/HOWTO/ACPI-HOWTO/"/> (detailed ACPI
       HOWTO, contains DSDT patches)
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="http://www.acpi.info"/> (Advanced Configuration &amp;
       Power Interface Specification)
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="http://www.lesswatts.org/projects/acpi/"/> (the
       ACPI4Linux project at Sourceforge)
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="http://acpi.sourceforge.net/dsdt/index.php"/> (DSDT
       patches by Bruno Ducrot)
      </para>
     </listitem>
    </itemizedlist><indexterm class="endofrange" startref="idx.power_management_ACPI"/>
   </sect3>
  </sect2>
 </sect1>
 <sect1 id="sec.pmanage.silenthd">
  <title>Rest for the Hard Disk</title>

  <para>
   In Linux, the hard disk can be put to sleep entirely if it is not needed
   or it can be run in a more economic or quieter mode. On modern laptops,
   you do not need to switch off the hard disks manually, because they
   automatically enter an economic operating mode whenever they are not
   needed. However, if you want to maximize power savings, test some of the
   following methods, using the <command>hdparm</command> command.
  </para>

  <para>
   It can be used to modify various hard disk settings. The option
   <option>-y</option> instantly switches the hard disk to the standby mode.
   <option>-Y</option> puts it to sleep. <command>hdparm <option>-S
   x</option></command> causes the hard disk to be spun down after a certain
   period of inactivity. Replace <replaceable>x</replaceable> as follows:
   <literal>0</literal> disables this mechanism, causing the hard disk to
   run continuously. Values from <literal>1</literal> to
   <literal>240</literal> are multiplied by 5 seconds. Values from
   <literal>241</literal> to <literal>251</literal> correspond to 1 to 11
   times 30 minutes.
  </para>

  <para>
   Internal power saving options of the hard disk can be controlled with the
   option <literal>-B</literal>. Select a value from <literal>0</literal> to
   <literal>255</literal> for maximum saving to maximum throughput. The
   result depends on the hard disk used and is difficult to assess. To make
   a hard disk quieter, use the option <literal>-M</literal>. Select a value
   from <literal>128</literal> to <literal>254</literal> for quiet to fast.
  </para>

<!-- bg: pdflush is explained at
  http://www.westnet.com/~gsmith/content/linux-pdflush.htm -->

  <para>
   Often, it is not so easy to put the hard disk to sleep. In Linux,
   numerous processes write to the hard disk, waking it up repeatedly.
   Therefore, it is important to understand how Linux handles data that
   needs to be written to the hard disk. First, all data is buffered in the
   RAM. This buffer is monitored by the
   <systemitem class="daemon">pdflush</systemitem> daemon. When the data
   reaches a certain age limit or when the buffer is filled to a certain
   degree, the buffer content is flushed to the hard disk. The buffer size
   is dynamic and depends on the size of the memory and the system load. By
   default, pdflush is set to short intervals to achieve maximum data
   integrity. It checks the buffer every 5 seconds and writes the data to
   the hard disk. The following variables are interesting:
  </para>

  <variablelist>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_writeback_centisecs</filename>
    </term>
    <listitem>
     <para>
      Contains the delay until a pdflush thread wakes up (in hundredths of a
      second).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_expire_centisecs</filename>
    </term>
    <listitem>
     <para>
      Defines after which timeframe a dirty page should be written out
      latest. Default is <literal>3000</literal>, which means 30 seconds.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_background_ratio</filename>
    </term>
    <listitem>
     <para>
      Maximum percentage of dirty pages until pdflush begins to write them.
      Default is <literal>5</literal>%.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/proc/sys/vm/dirty_ratio</filename>
    </term>
    <listitem>
     <para>
      When the dirty page exceeds this percentage of the total memory,
      processes are forced to write dirty buffers during their time slice
      instead of continuing to write.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <warning>
   <title>Impairment of the Data Integrity</title>
   <para>
    Changes to the pdflush daemon settings endanger the data integrity.
   </para>
  </warning>

<!-- bg: laptop-mode: http://www.samwel.tk/laptop_mode/ -->

  <para>
   Apart from these processes, journaling file systems, like
   <systemitem
    class="filesystem">ReiserFS</systemitem>,
   <systemitem class="filesystem"
    >Ext3</systemitem>,
   <systemitem class="filesystem">Ext4</systemitem> and others write their
   metadata independently from pdflush, which also prevents the hard disk
   from spinning down. To avoid this, a special kernel extension has been
   developed for mobile devices. To make use of the extension, install the
   <systemitem class="resource">laptop-mode-tools</systemitem> package and
   see
   <filename>/usr/src/linux/Documentation/laptops/laptop-mode.txt</filename>
   for details.
  </para>

  <para>
   Another important factor is the way active programs behave. For example,
   good editors regularly write hidden backups of the currently modified
   file to the hard disk, causing the disk to wake up. Features like this
   can be disabled at the expense of data integrity.
  </para>

  <para>
   In this connection, the mail daemon postfix makes use of the variable
   <systemitem>POSTFIX_LAPTOP</systemitem>. If this variable is set to
   <literal>yes</literal>, postfix accesses the hard disk far less
   frequently.
  </para>

  <para os="sled">
<!-- does not seem to exist on SLES -->
   In &productname; these technologies are controlled by
   <systemitem>laptop-mode-tools</systemitem>.
  </para><indexterm class="endofrange" startref="idx.power_management"/><indexterm
   class="endofrange" startref="idx.laptops_power_management"/>
 </sect1>
 <sect1 id="sec.powersave.trouble">
  <title>Troubleshooting</title>

  <para>
   All error messages and alerts are logged in the file
   <filename>/var/log/messages</filename>. The following sections cover the
   most common problems.
  </para>

  <sect2 id="sec.powersave.trouble.acpi">
   <title>ACPI Activated with Hardware Support but Functions Do Not Work</title>
   <para>
    If you experience problems with ACPI, search the output of
    <command>dmesg</command> for ACPI-specific messages by using the command
    <command>dmesg|grep <option>-i acpi</option></command>.
   </para>
   <para>
    A BIOS update may be required to resolve the problem. Go to the home
    page of your laptop manufacturer, look for an updated BIOS version, and
    install it. Ask the manufacturer to comply with the latest ACPI
    specification. If the errors persist after the BIOS update, proceed as
    follows to replace the faulty DSDT table in your BIOS with an updated
    DSDT:
   </para>
   <procedure>
    <title>Updating the DSDT Table in the BIOS</title>
    <para>
     For the procedure below, make sure the following packages are
     installed: <systemitem class="resource">kernel-source</systemitem>,
     <systemitem class="resource">acpica</systemitem>, and
     <systemitem
      class="resource">mkinitrd</systemitem>.
    </para>
    <step>
     <para>
      Download the DSDT for your system from
      <ulink
       url="http://acpi.sourceforge.net/dsdt/index.php"/>.
      Check if the file is decompressed and compiled as shown by the file
      extension <literal>.aml</literal> (ACPI machine language). If this is
      the case, continue with step&nbsp;3.
     </para>
    </step>
    <step>
     <para>
      If the file extension of the downloaded table is
      <literal>.asl</literal> (ACPI source language) instead, compile it by
      executing the following command:
     </para>
<screen>iasl <option>-sa file.asl</option></screen>
    </step>
    <step>
     <para>
      Copy the (resulting) file <filename>DSDT.aml</filename> to any
      location (<filename>/etc/DSDT.aml</filename> is recommended).
     </para>
    </step>
    <step>
     <para>
      Edit <filename>/etc/sysconfig/kernel</filename> and adapt the path to
      the DSDT file accordingly.
     </para>
    </step>
    <step>
     <para>
      Start <command>mkinitrd</command>. Whenever you install the kernel and
      use <command>mkinitrd</command> to create an
      <filename>initrd</filename> file, the modified DSDT is integrated and
      loaded when the system is booted.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.powersave.trouble.cpufreq">
   <title>CPU Frequency Does Not Work</title>
   <para>
    Refer to the kernel sources to see if your processor is supported. You
    may need a special kernel module or module option to activate CPU
    frequency control. If the
    <systemitem class="resource">kernel-source</systemitem> package is
    installed, this information is available in
    <filename>/usr/src/linux/Documentation/cpu-freq/*</filename>.
   </para>
  </sect2>

  <sect2 id="sec.powersave.trouble.suspend">
   <title>Suspend and Standby Do Not Work</title>
   <para>
    ACPI systems may have problems with suspend and standby due to a faulty
    DSDT implementation (BIOS). If this is the case, update the BIOS.
   </para>
   <para>
    When the system tries to unload faulty modules, the system is arrested
    or the suspend event is not triggered. The same can also happen if you
    do not unload modules or stop services that prevent a successful
    suspend. In both cases, try to identify the faulty module that prevented
    the sleep mode. The log file
    <filename>/var/log/pm-suspend.log</filename> contains detailed
    information about what is going on and where possible errors are. Modify
    the <systemitem>SUSPEND_MODULES</systemitem> variable in
    <filename>/usr/lib/pm-utils/defaults</filename> to unload problematic
    modules prior to a suspend or standby.
   </para>
<!--taroth 2010-08-02: updated until here-->
   <para>
    Refer to <ulink url="http://old-en.opensuse.org/Pm-utils"/> and
    <ulink
     url="http://en.opensuse.org//SDB:Suspend_to_RAM"/> to get
    more detailed information on how to modify the suspend and resume
    process.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.powersave.info">
  <title>For More Information</title>

  <itemizedlist>
   <listitem os="osuse">
    <para>
     <ulink url="http://www.acpi.info"/> (Advanced Configuration and Power
     Interface Specification)
    </para>
   </listitem>
   <listitem os="osuse">
    <para>
     <ulink url="http://www.lesswatts.org/projects/acpi/"/> (the ACPI4Linux
     project at Sourceforge)
    </para>
   </listitem>
   <listitem os="osuse">
    <para>
     <ulink url="http://acpi.sourceforge.net/dsdt/index.php"/> (DSDT patches
     by Bruno Ducrot)
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://wiki.opensuse.org/SDB:Suspend_to_RAM"/>&mdash;How to
     get Suspend to RAM working
    </para>
   </listitem>
   <listitem>
    <para>
     <ulink url="http://old-en.opensuse.org/Pm-utils"/>&mdash;How to modify
     the general suspend framework
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>
