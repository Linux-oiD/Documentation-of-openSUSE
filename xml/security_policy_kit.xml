<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter  PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- TODO (for 11.4 and later):
     - re-write or adjust for polkit-1
-->
<chapter id="cha.security.policykit">
 <title>&pk;</title>
 <abstract>
  <para>
   &pk; is an application framework that acts as a negotiator between the
   unprivileged user session and the privileged system context. Whenever a
   process from the user session tries to carry out an action in the system
   context, &pk; is queried. Based on its configuration&mdash;specified in a
   so-called <quote>policy</quote>&mdash;the answer could be
   <quote>yes</quote>, <quote>no</quote>, or <quote> authentication
   needed</quote>. Unlike classical privilege authorization programs such as
   sudo, &pk; does not grant &rootuser; permissions to an entire process,
   following the <quote>least privilege</quote> concept.
  </para>
 </abstract>
 <note>
  <title>Two <systemitem>PolicyKit</systemitem> Versions in Parallel</title>
  <para>
   At the moment, there are two &pk; versions available with &productname;
   in parallel: the <quote>old</quote> <systemitem>PolicyKit</systemitem>
   and the <quote>new</quote> <systemitem>polkit</systemitem> version
   (polkit-1), which is a re-write of the old
   <systemitem>PolicyKit</systemitem> version. The following sections are
   basically documentation on the <quote>old</quote>
   <systemitem>PolicyKit</systemitem> version.
  </para>
 </note>
 <sect1 id="sec.security.policykit.authorizations">
  <title>Available Policies and Supported Applications</title>

  <para>
   At the moment, not all applications requiring privileges make use of
   &pk;. In the following the most important policies available on
   &productnamereg; are listed.
  </para>

  <variablelist>
   <varlistentry>
    <term>PulseAudio</term>
    <listitem>
     <simplelist>
      <member>Set scheduling priorities for the PulseAudio daemon</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry os="sled;osuse">
<!-- also in osuse -->
    <term>smpppd</term>
    <listitem>
     <simplelist>
      <member>Controlling dial-up connections</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>CUPS</term>
    <listitem>
     <simplelist>
      <member>Add, remove, edit, enable or disable printers</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry os="sled;osuse">
<!-- also in osuse -->
    <term>Backup Manager</term>
    <listitem>
     <simplelist>
      <member>Modify schedule</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>GNOME</term>
    <listitem>
     <simplelist>
      <member>Modify system and mandatory values with GConf</member>
      <member>Change the system time</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry os="sles;osuse">
<!-- also in osuse -->
    <term>libvirt</term>
    <listitem>
     <simplelist>
      <member>Manage and modify local virtualized systems</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry os="sled;osuse">
    <term>&nm;</term>
    <listitem>
     <simplelist>
<!-- was:       <member>Modify System Connections</member> -->
      <member>Apply and modify connections</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&pk;</term>
    <listitem>
     <simplelist>
      <member>Read and change privileges for other users</member>
      <member>Modify defaults</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry os="sled;osuse">
    <term>PackageKit</term>
    <listitem>
     <simplelist>
      <member>Update and remove packages</member>
      <member>Refresh repositories</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>System</term>
    <listitem>
     <simplelist>
      <member>Wake on LAN</member>
      <member>Mount or unmount fixed, hotpluggable and encrypted
       devices</member>
      <member>Eject and decrypt removable media</member>
      <member>Enable or disable WLAN</member>
      <member>Enable or disable Bluetooth</member>
      <member>Device access</member>
      <member>Stop, suspend, hibernate and restart the system</member>
      <member>Undock a docking station</member>
     </simplelist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&yast;</term>
    <listitem>
     <simplelist>
      <member>Register product</member>
      <member>Change the system time and language</member>
     </simplelist>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.security.policykit.types">
  <title>Authorization Types</title>

  <para>
   Every time a &pk;-enabled process carries out a privileged operation,
   &pk; is asked whether this process is entitled to do so. The answer &pk;
   gives depends on the policy defined for this process. It can be
   <quote>yes</quote>, <quote>no</quote>, or <quote>authentication
   needed</quote>. By default, a policy contains <quote>implicit</quote>
   privileges, which automatically apply to all users. It is also possible
   to specify <quote>explicit</quote> privileges which apply to a specific
   user.
  </para>

  <sect2 id="sec.security.policykit.policies.implicit">
   <title>Implicit Privileges</title>
   <para>
    Implicit privileges can be defined for any, active, and inactive
    sessions. An active session is the one in which you are currently
    working. It becomes inactive when you switch to another console for
    example. When setting implicit privileges to <quote>no</quote>, no user
    is authorized, whereas <quote>yes</quote> authorizes all users. However,
    in most cases it is useful to demand authentication.
   </para>
   <para>
    A user can either authorize by authenticating as &rootuser; or by
    authenticating as self. Both authentication methods exist in four
    variants:
   </para>
   <variablelist>
    <varlistentry>
     <term>Authentication</term>
     <listitem>
      <para>
       The user always has to authenticate
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>One Shot Authentication</term>
     <listitem>
      <para>
       The authentication is bound to the instance of the program currently
       running. Once the program is restarted, the user is required to
       authenticate again.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Keep Session Authentication</term>
     <listitem>
      <para>
       The authentication dialog box offers a check button <guimenu>Remember
       authorization for this session</guimenu>. If checked, the
       authentication is valid until the user logs out.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Keep Indefinitely Authentication</term>
     <listitem>
      <para>
       The authentication dialog box offers a check button <guimenu>Remember
       authorization</guimenu>. If checked, the user has to authenticate
       only once.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="sec.security.policykit.policies.explicit">
   <title>Explicit Privileges</title>
   <para>
    Explicit privileges can be granted to specific users. They can either be
    granted without limitations, or, when using constraints, limited to an
    active session and/or a local console.
   </para>
   <para>
    It is not only possible to grant privileges to a user, a user can also
    be blocked. Blocked users will not be able to carry out an action
    requiring authorization, even though the default implicit policy allows
    authorization by authentication.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.security.policykit.change">
  <title>Modifying and Setting Privileges</title>

  <para>
   To modify implicit privileges or to set explicit ones, you can either use
   the graphical <guimenu>System Policies</guimenu> tool available in the
   Advanced tab of the KDE System Settings, use the command line tools
   shipped with &pk;, or modify the configuration files. While the GUI and
   the command line tools are a good solution for making temporary changes,
   editing the configuration files should be the preferred way to make
   permanent changes.
  </para>

  <note>
   <title>The graphical GNOME <guimenu>Authorizations</guimenu> tool</title>
   <para>
    The graphical <guimenu>Authorizations</guimenu> tool available with
    GNOME is for the old &pk;. Better use the above mentioned tools.
   </para>
  </note>

<!--
  <sect2 id="sec.security.policykit.change.kde.gui">
   <title>Using the Graphical KDE <guimenu>System Policies</guimenu> Tool</title>
   <para>
    The KDE version of the Authorisation tool can be started via
    <menuchoice>
     <guimenu>System Settings</guimenu>
     <guimenu>Advanced</guimenu>
     <guimenu>System Policies</guimenu>
    </menuchoice>.

    <!-\- "Apply" does not work for me ATM. -\->

   </para>
-->

<!-- ATM, there is no GNOME tool for polkit-1.  2010-09-15, ke -->

<!--
   <sect2 id="sec.security.policykit.change.gui">
   <title>Using the Graphical GNOME <guimenu>Authorizations</guimenu> Tool</title>

   <para>
    Start the Authorizations tool either via the GNOME main menu by
    selecting <menuchoice> <guimenu>More Applications</guimenu>
    <guimenu>Utilities</guimenu> <guimenu>Authorizations</guimenu>
    </menuchoice> or by pressing <keycombo>
    <keycap function="alt">Alt</keycap> <keycap>F2</keycap> </keycombo> and
    entering <command>polkit-gnome-authorization</command>.
   </para>
   <tip os="sled;sles">
    <!-/- FIXME: check profiling! -/->
    <title>Using the Authorizations tool in non-GNOME environments</title>
    <para>
     Authorizations is a GNOME tool and therefore not installed when the
     GNOME desktop environment is not installed. In this case you need to
     install the package <systemitem>PolicyKit-gnome</systemitem> in order
     to use the tool.
    </para>
   </tip>

   <figure id="fig.policykit.change.gui">
    <title>The Authorizations Tool</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata width="90%" fileref="polkit_auth_gnome.png" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="polkit_auth_gnome.png" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>
    The Authorizations window is divided into two parts. The left side shows
    all policies available in a tree view, while the right side displays
    details for the policy selected and offers means to change it.
   </para>
   <variablelist>
    <varlistentry>
     <term><guimenu>Action</guimenu>
     </term>
     <listitem>
      <para>
       Lists details of the chosen policy. The <guimenu>Identifier</guimenu>
       is the unique string used by &pk; to identify the policy.
       <guimenu>Description</guimenu> explains the purpose of the policy and
       <guimenu>Vendor</guimenu> displays a link to the organization that
       has issued this policy.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Implicit Authorizations</guimenu>
     </term>
     <listitem>
      <para>
       Change the privileges by clicking <guimenu>Edit</guimenu> and
       choosing an authorization type explained in
       <xref
	linkend="sec.security.policykit.policies.implicit"/>. Click
       <guimenu>Revert To Defaults</guimenu> to restore the system defaults.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Explicit Authorizations</guimenu>
     </term>
     <listitem>
      <para>
       In this section you can <guimenu>Grant</guimenu> privileges to
       existing users or <guimenu>Block</guimenu> users. In both cases,
       choose a user and a <guimenu>Constraint</guimenu>. Users with a UID
       of less than 1000 are only shown when <guimenu>Show System
       Users</guimenu> is checked. To delete an authorization, choose it
       from the list and click <guimenu>Revoke</guimenu>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <note>
    <title>Restrictions of the <guimenu>Revert to Defaults</guimenu> function on &productname;</title>
    <para>
     When using <guimenu>Revert to Defaults</guimenu>, the Authorization
     tool always operates on the upstream defaults, so it is not possible to
     list or restore the defaults shipped with &productname;. Refer to
     <xref
      linkend="sec.security.policykit.change.defaults"/> for
     further information.
    </para>
   </note>
  </sect2>
-->

  <sect2 id="sec.security.policykit.change.cmd_tools">
   <title>Using the Command Line Tools</title>
   <para>
    At the moment, there are two &pk; versions available in parallel with
    &productname;: the <quote>old</quote> <systemitem>PolicyKit</systemitem>
    and the <quote>new</quote> <systemitem>polkit</systemitem> version
    (polkit-1), which is a re-write of the old
    <systemitem>PolicyKit</systemitem> version.
   </para>
   <sect3 id="sec.security.policykit.change.cmd_tools.old">
    <title><systemitem>PolicyKit</systemitem></title>
    <para>
     &pk; (<systemitem>PolicyKit</systemitem>) comes with two command line
     tools for changing implicit privileges and for assigning explicit
     privileges. Each existing policy has got a speaking, unique name with
     which it can be identified and which is used with the command line
     tools. List all available policies with the command
     <command>polkit-action</command>.
    </para>
    <variablelist>
     <varlistentry>
      <term><command>polkit-action</command>
      </term>
      <listitem>
       <para>
        List and modify implicit privileges. Using this command you can also
        reset all policies to the default value. When invoked with no
        parameters, the command <command>polkit-action</command> shows a
        list of all policies. See <command>man 1 polkit-action</command> for
        more information.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><command>polkit-auth</command>
      </term>
      <listitem>
       <para>
        Inspect, grant, block and revoke explicit privileges. To print a
        list of explicit privileges for a specific user, use the command
        <command>polkit-auth --explicit-detail --user
        <replaceable>USER</replaceable></command> where
        <replaceable>USER</replaceable> has to be replaced by a valid
        username. If the <option>--user</option> option is left out,
        privileges for the user executing the command are shown. See
        <command>man 1 polkit-auth</command> for more information.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <note>
     <title>Restrictions of <command>polkit-action</command> on &productname;</title>
     <para>
      Using the option <option>--show-overrides</option>,
      <command>polkit-action</command> lists all policies that differ from
      the default values. With <option>--reset-defaults
      <replaceable>action</replaceable></option> one can reset the
      privileges for a given action to the defaults. However,
      <command>polkit-action</command> always operates on the upstream
      defaults, so it is not possible to list or restore the defaults
      shipped with &productname;. Refer to
      <xref
      linkend="sec.security.policykit.change.defaults"/> for
      further information.
     </para>
    </note>
    <para>
     <xref linkend="sec.security.policykit.change.modify_config"/> and
     <xref linkend="sec.security.policykit.change.defaults"/> apply for the
     <quote>old</quote> <systemitem>PolicyKit</systemitem> only.
    </para>
   </sect3>
<!-- ============================================================ -->
   <sect3 id="sec.security.policykit.change.cmd_tools.polkit">
    <title><systemitem>polkit</systemitem></title>
<!--
    polkit — Authorization Framework
    polkitd — PolicyKit daemon
    pkcheck — Check whether a process is authorized
    pkaction — Get details about a registered action
    pkexec — Execute a command as another user
    pklocalauthority — PolicyKit Local Authority
    -->
    <para>
     For more information about <systemitem>polkit</systemitem>, see
     <ulink url="http://hal.freedesktop.org/docs/polkit/"/>.
    </para>
   </sect3>
  </sect2>

  <sect2 id="sec.security.policykit.change.modify_config">
   <title>Modifying Configuration Files</title>
   <para>
    Adjusting privileges by modifying configuration files is useful when you
    want to deploy the same set of policies to different machines, for
    example to the computers of a specific team. It is possible to change
    implicit as well as explicit privileges by modifying configuration
    files.
   </para>
   <sect3 id="sec.security.policykit.change.modify_config.implicit">
    <title>Modifying Configuration Files for Implicit Privileges</title>
    <para>
     &productname; ships with two sets of default authorizations located in
     <filename>/etc/polkit-default-privs.standard</filename> and
     <filename>/etc/polkit-default-privs.restrictive</filename>. The
     <filename>.standard</filename> file defines privileges suitable for
     most desktop systems.<phrase os="sled;osuse"> It is active by
     default.</phrase> The <filename>.restrictive</filename> set of
     privileges is designed for machines administrated
     centrally.<phrase os="sles"> It is active by default.</phrase> Activate
     it by setting <literal>POLKIT_DEFAULT_PRIVS</literal> to
     <literal>restrictive</literal> in
     <filename>/etc/sysconfig/security</filename> and run
     <command>set_polkit_default_privs</command> as &rootuser; afterwards.
     Do not modify these two files.
    </para>
    <para>
     In order to define your custom set of privileges, use
     <filename>/etc/polkit-default-privs.local</filename>. Privileges
     defined here will always take precedence over the ones defined in the
     other configuration files. To define a privilege, add a line for each
     policy with the following format:
    </para>
<screen><replaceable>privilege_name</replaceable> <replaceable>any_session</replaceable>:<replaceable>inactive_session</replaceable>:<replaceable>active_session</replaceable></screen>
    <para>
     For a list of all privilege names available, run the command
     <command>polkit-action</command>. The following values are valid for
     the session parameters:
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>yes</literal>
      </term>
      <listitem>
       <para>
        grant privilege
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>no</literal>
      </term>
      <listitem>
       <para>
        block
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_self</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with own password every time the
        privilege is requested
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_self_keep_session</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with own password once per session,
        privilege is granted for the whole session
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_self_keep_always</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with own password once, privilege is
        granted for the current and for future sessions
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_admin</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with &rootuser; password every time the
        privilege is requested
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_admin_keep_session</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with &rootuser; password once per
        session, privilege is granted for the whole session
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>auth_admin_keep_always</literal>
      </term>
      <listitem>
       <para>
        user needs to authenticate with &rootuser; password once, privilege
        is granted for the current and for future sessions
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <para>
     Run <command>set_polkit_default_privs</command> to activate your
     settings.
    </para>
   </sect3>
   <sect3 id="sec.security.policykit.change.modify_config.explicit">
    <title>Modifying Configuration Files for Explicit Privileges</title>
    <para>
     Explicit privileges can be set in
     <filename>/etc/PolicyKit/PolicyKit.conf</filename>. This configuration
     file is written in XML using the &pk; DTD. The file that is shipped
     with &productname; already contains the necessary headers and the root
     element <literal>&lt;config&gt;</literal>. Place your edits inside the
     <literal>&lt;config&gt;</literal> tags.
    </para>
    <variablelist>
     <varlistentry>
      <term><literal>match</literal>
      </term>
      <listitem>
       <para>
        Specify an action or a user. <literal>match</literal> knows two
        attributes, <literal>user</literal> and <literal>action</literal>,
        but only a single attribute is allowed. Use nested
        <literal>match</literal> statements to combine attributes. POSIX
        Extended Regular Expressions are allowed as attribute values.
       </para>
       <variablelist>
        <varlistentry>
         <term><literal>user=<replaceable>USER</replaceable></literal>
         </term>
         <listitem>
          <para>
           Specify one or more login names. Separate multiple names by the
           <quote>|</quote> symbol.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><literal>action=<replaceable>policy</replaceable></literal>
         </term>
         <listitem>
          <para>
           Specify a policy by it's unique identifier. To get a list of all
           available policy identifiers use the command
           <command>polkit-action</command>.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>return</literal>
      </term>
      <listitem>
       <para>
        Specify the answer &pk; will return. Takes a single attribute,
        <literal>result=<replaceable>value</replaceable></literal> with one
        of the values listed under
        <xref
	 linkend="sec.security.policykit.change.modify_config.implicit"/>.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><literal>define_admin_auth</literal>
      </term>
      <listitem>
       <para>
        Specify users or groups allowed to authorize with their own password
        where normally the &rootuser; password would be required. Takes the
        attributes <literal>user=<replaceable>USER</replaceable></literal>
        or <literal>group=<replaceable>GROUP</replaceable></literal>, but
        only one may be used at a time. Multiple attribute values must be
        separated by <quote>|</quote>, Extended POSIX Regular Expressions
        are not supported. Applies to all policies when used at the top
        level, or to specific policies when used within
        <literal>&lt;match&gt;</literal> statements.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
    <example id="ex.policykit.change.modify_config.explicit">
     <title>An example <filename>/etc/PolicyKit/PolicyKit.conf</filename> file</title>
<screen>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE pkconfig PUBLIC "-//freedesktop//DTD PolicyKit Configuration 1.0//EN"
"http://hal.freedesktop.org/releases/PolicyKit/1.0/config.dtd"&gt;<co id="polkit_conf.header"/>
&lt;config version="0.1"&gt;<co id="polkit_conf.config"/>
  &lt;match action="org.freedesktop.packagekit.system-update"&gt;<co id="polkit_conf.ex1"/>
    &lt;match user="&exampleuser;"&gt;
      &lt;return result="yes"/&gt;
    &lt;/match&gt;
  &lt;/match&gt;
  &lt;match action="org.freedesktop.policykit.*"&gt;<co id="polkit_conf.ex2"/>
    &lt;match user="&exampleuser;|&exampleuserII;"&gt;
      &lt;return result="no"/&gt;
    &lt;/match&gt;
  &lt;/match&gt;
  &lt;define_admin_auth group="administrators"/&gt;<co id="polkit_conf.admin_auth_group"/>
&lt;/config&gt;</screen>
     <calloutlist>
      <callout arearefs="polkit_conf.header">
       <para>
        The first three lines of the config file are the XML header. These
        lines are already present in the template file, leave them
        untouched.
       </para>
      </callout>
      <callout arearefs="polkit_conf.config">
       <para>
        The XML root element must always be present. The attribute
        <literal>version</literal> is mandatory, currently the only valid
        value is <literal>0.1</literal>. Already present in the template
        file.
       </para>
      </callout>
      <callout arearefs="polkit_conf.ex1">
       <para>
        A statement granting the user &exampleuser; the privilege to update
        packages via PackageKit without having to authorize.
       </para>
      </callout>
      <callout arearefs="polkit_conf.ex2">
       <para>
        Withdraw privileges for all &pk; related policies from the users
        &exampleuser; and &exampleuserII;.
       </para>
      </callout>
      <callout arearefs="polkit_conf.admin_auth_group">
       <para>
        This statement allows all members of the group
        <systemitem>administrators</systemitem> to authenticate with their
        own password whenever authentication with the &rootuser; password
        would be required. Since this statement is not nested within
        constraining match statements, it applies to all policies.
       </para>
      </callout>
     </calloutlist>
    </example>
   </sect3>
  </sect2>

  <sect2 id="sec.security.policykit.change.defaults">
   <title>Restoring the Default Privileges</title>
   <para>
    Each application supporting &pk; comes with a default set of implicit
    policies defined by the application's developers, the so-called
    <quote>upstream defaults</quote>. The privileges defined by the upstream
    defaults are not necessarily the ones that are activated by default on
    &productname;. &productname; comes with a predefined set of privileges
    (see
    <xref
      linkend="sec.security.policykit.change.modify_config.implicit"/>
    for more information) that is activated by default, overriding the
    upstream defaults.
   </para>
   <para>
    Since the Authorization tool and the &pk; command line utilities always
    operate on the upstream defaults, &productname; comes with the
    command-line tool <command>set_polkit_default_privs</command> that
    resets privileges to the values defined in
    <filename>/etc/polkit-default-privs.*</filename>. However,
    <command>set_polkit_default_privs</command> will only reset policies
    that are set to the upstream defaults. To reset all policies to the
    upstream defaults first and then apply the &productname; defaults, run
    the following command:
   </para>
<screen>rm -f /var/lib/PolicyKit-public/* &amp;&amp; set_polkit_default_privs</screen>
   <important>
    <title><filename>/etc/polkit-default-privs.local</filename></title>
    <para>
     In order to apply the &productname; defaults, make sure
     <filename>/etc/polkit-default-privs.local</filename> does not contain
     any overrides, otherwise these will be applied on top of the defaults
     when running <command>set_polkit_default_privs</command>.
    </para>
   </important>
  </sect2>
 </sect1>
 <sect1>
  <title>For more information</title>

  <simplelist>
   <member><systemitem>PolicyKit</systemitem>: <ulink url="http://hal.freedesktop.org/docs/PolicyKit/"/>
   </member>
   <member><systemitem>polkit</systemitem>: <ulink url="http://hal.freedesktop.org/docs/polkit/"/>
   </member>
  </simplelist>
 </sect1>
</chapter>
