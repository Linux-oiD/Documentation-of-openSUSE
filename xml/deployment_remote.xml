<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter role="General" id="cha.deployment.remoteinst">
 <title>Remote Installation</title>
 <para>
  &productnamereg; can be installed in different ways. As well as the usual
  media installation covered in <xref linkend="cha.inst"/>, you can choose
  from various network-based approaches or even take a completely hands-off
  approach to the installation of &productname;.
 </para>
 <para>
  Each method is introduced by means of two short check lists: one listing
  the prerequisites for this method and the other illustrating the basic
  procedure. More detail is then provided for all the techniques used in
  these installation scenarios.
 </para>
 <note>
  <para>
   In the following sections, the system to hold your new &productname;
   installation is referred to as <emphasis>target system</emphasis> or
   <emphasis>installation target</emphasis>. The term
   <emphasis>repository</emphasis> (previously called <quote>installation
   source</quote>) is used for all sources of installation data. This
   includes physical media, such as CD and DVD, and network servers
   distributing the installation data in your network.
  </para>
 </note>
 <sect1 id="sec.deployment.remoteinst.scenario">
  <title>Installation Scenarios for Remote Installation</title>

  <para>
   This section introduces the most common installation scenarios for remote
   installations. For each scenario, carefully check the list of
   prerequisites and follow the procedure outlined for this scenario. If in
   need of detailed instructions for a particular step, follow the links
   provided for each one of them.
  </para>

<!-- FIXME: check this - ke -->

<!-- X server come with built-in configuration which is said to be good
       enough; do we have to mention the desktop tools here? -ke- 2009-09-30
   -->

<!--
  <important>
   <para>
    The configuration of the X Window System is not part of any remote
    installation process. After the installation has finished, log in to the
    target system as &rootuser;, enter <command>telinit 3</command>, and
    start &sax; to configure the graphics hardware<!-\-<phrase
     os="osuse">
    as described in <xref linkend="cha.y2.hw.graph"/></phrase>-\->.
   </para>
  </important>
  -->

  <sect2 id="sec.deployment.remoteinst.scenario.vncstat">
   <title>Simple Remote Installation via VNC&mdash;Static Network Configuration</title>
   <para>
    This type of installation still requires some degree of physical access
    to the target system to boot for installation. The installation itself
    is entirely controlled by a remote workstation using VNC to connect to
    the installation program. User interaction is required as with the
    manual installation in <xref linkend="cha.inst"/>.
   </para>
   <para>
    For this type of installation, make sure that the following requirements
    are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system with working network connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and VNC viewer
      software or Java-enabled browser (Firefox, Konqueror, Internet
      Explorer, Opera, etc.).
     </para>
    </listitem>
    <listitem>
     <para>
      Physical boot medium (CD, DVD, or USB flash drive) for booting the
      target system.
     </para>
    </listitem>
    <listitem>
     <para>
      Valid static IP addresses already assigned to the repository and the
      controlling system.
     </para>
    </listitem>
    <listitem>
     <para>
      Valid static IP address to assign to the target system.
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.vncstat">
    <para>
     To perform this kind of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server. For an SMB repository, refer to
      <xref linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </step>
    <step>
     <para>
      When the boot screen of the target system appears, use the boot
      options prompt to set the appropriate VNC options and the address of
      the repository. This is described in detail in
      <xref linkend="sec.deployment.remoteinst.bootinst"/>.
     </para>
     <para>
      The target system boots to a text-based environment, giving the
      network address and display number under which the graphical
      installation environment can be addressed by any VNC viewer
      application or browser. VNC installations announce themselves over
      OpenSLP and if the firewall settings permit, they can be found using
      Konqueror in <literal>service:/</literal> or <literal>slp:/</literal>
      mode.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, open a VNC viewing application or Web
      browser and connect to the target system as described in
      <xref
       linkend="sec.deployment.remoteinst.monitor.vnc"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.scenario.vncdyn">
   <title>Simple Remote Installation via VNC&mdash;Dynamic Network Configuration</title>
   <para>
    This type of installation still requires some degree of physical access
    to the target system to boot for installation. The network configuration
    is made with DHCP. The installation itself is entirely controlled from a
    remote workstation using VNC to connect to the installer, but still
    requires user interaction for the actual configuration efforts.
   </para>
   <para>
    For this type of installation, make sure that the following requirements
    are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system with working network connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and VNC viewer
      software or Java-enabled browser (Firefox, Konqueror, Internet
      Explorer, or Opera).
     </para>
    </listitem>
    <listitem>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </listitem>
    <listitem>
     <para>
      Running DHCP server providing IP addresses.
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.vncdyn">
    <para>
     To perform this kind of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server. For an SMB repository, refer to
      <xref linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </step>
    <step>
     <para>
      When the boot screen of the target system appears, use the boot
      options prompt to set the appropriate VNC options and the address of
      the repository. This is described in detail in
      <xref linkend="sec.deployment.remoteinst.bootinst"/>.
     </para>
     <para>
      The target system boots to a text-based environment, giving the
      network address and display number under which the graphical
      installation environment can be addressed by any VNC viewer
      application or browser. VNC installations announce themselves over
      OpenSLP and if the firewall settings permit, they can be found using
      Konqueror in <literal>service:/</literal> or <literal>slp:/</literal>
      mode.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, open a VNC viewing application or Web
      browser and connect to the target system as described in
      <xref
       linkend="sec.deployment.remoteinst.monitor.vnc"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.scenario.vncpxe">
   <title>Remote Installation via VNC&mdash;PXE Boot and Wake on LAN</title>
   <para>
    This type of installation is completely hands-off. The target machine is
    started and booted remotely. User interaction is only needed for the
    actual installation. This approach is suitable for cross-site
    deployments.
   </para>
   <para>
    To perform this type of installation, make sure that the following
    requirements are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      TFTP server.
     </para>
    </listitem>
    <listitem>
     <para>
      Running DHCP server for your network.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system capable of PXE boot, networking, and Wake on LAN,
      plugged in and connected to the network.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and VNC viewer
      software or Java-enabled browser (Firefox, Konqueror, Internet
      Explorer, or Opera).
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.vncpxe">
    <para>
     To perform this type of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server or configure an SMB repository as
      described in
      <xref
       linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para>
      Set up a TFTP server to hold a boot image that can be pulled by the
      target system. This is described in
      <xref linkend="sec.deployment.remoteinst.boot.tftp"/>.
     </para>
    </step>
    <step>
     <para>
      Set up a DHCP server to provide IP addresses to all machines and
      reveal the location of the TFTP server to the target system. This is
      described in
      <xref
       linkend="sec.deployment.remoteinst.boot.dhcp"/>.
     </para>
    </step>
    <step>
     <para>
      Prepare the target system for PXE boot. This is described in further
      detail in
      <xref
       linkend="sec.deployment.remoteinst.boot.pxeprep"/>.
     </para>
    </step>
    <step>
     <para>
      Initiate the boot process of the target system using Wake on LAN. This
      is described in <xref linkend="sec.deployment.remoteinst.boot.wol"/>.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, open a VNC viewing application or Web
      browser and connect to the target system as described in
      <xref
       linkend="sec.deployment.remoteinst.monitor.vnc"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.scenario.sshstat">
   <title>Simple Remote Installation via SSH&mdash;Static Network Configuration</title>
   <para>
    This type of installation still requires some degree of physical access
    to the target system to boot for installation and to determine the IP
    address of the installation target. The installation itself is entirely
    controlled from a remote workstation using SSH to connect to the
    installer. User interaction is required as with the regular installation
    described in <xref
     linkend="cha.inst"/>.
   </para>
   <para>
    For this type of installation, make sure that the following requirements
    are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system with working network connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and working SSH
      client software.
     </para>
    </listitem>
    <listitem>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </listitem>
    <listitem>
     <para>
      Valid static IP addresses already assigned to the repository and the
      controlling system.
     </para>
    </listitem>
    <listitem>
     <para>
      Valid static IP address to assign to the target system.
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.sshstat">
    <para>
     To perform this kind of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server. For an SMB repository, refer to
      <xref linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </step>
    <step>
     <para>
      When the boot screen of the target system appears, use the boot
      options prompt to set the appropriate parameters for network
      connection, address of the repository, and SSH enablement. This is
      described in detail in
      <xref
       linkend="sec.deployment.remoteinst.bootinst.custom"/>.
     </para>
     <para>
      The target system boots to a text-based environment, giving the
      network address under which the graphical installation environment can
      be addressed by any SSH client.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, open a terminal window and connect to
      the target system as described in
      <xref linkend="sec.deployment.remoteinst.monitor.ssh.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.scenario.sshdyn">
   <title>Simple Remote Installation via SSH&mdash;Dynamic Network Configuration</title>
   <para>
    This type of installation still requires some degree of physical access
    to the target system to boot for installation and determine the IP
    address of the installation target. The installation itself is entirely
    controlled from a remote workstation using VNC to connect to the
    installer, but still requires user interaction for the actual
    configuration efforts.
   </para>
<?dbfo-need height="5em"?>
   <para>
    For this type of installation, make sure that the following requirements
    are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system with working network connection.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and working SSH
      client software.
     </para>
    </listitem>
    <listitem>
     <para>
      Physical boot medium (CD, DVD, or USB flash drive) for booting the
      target system.
     </para>
    </listitem>
    <listitem>
     <para>
      Running DHCP server providing IP addresses.
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.sshdyn">
    <para>
     To perform this kind of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository source as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server. For an SMB repository, refer to
      <xref linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para os="osuse">
      Boot the target system using a boot medium (DVD, CD, or USB flash
      drive) of the &productname; media kit. For more information about the
      &productname; media kit, see <xref
    linkend="sec.i.yast2.media"/>.
     </para>
     <para os="sled;sles">
      Boot the target system using DVD1 of the &productname; media kit.
     </para>
    </step>
    <step>
     <para>
      When the boot screen of the target system appears, use the boot
      options prompt to pass the appropriate parameters for network
      connection, location of the installation source, and SSH enablement.
      See <xref linkend="sec.deployment.remoteinst.bootinst.custom"/> for
      detailed instructions on the use of these parameters.
     </para>
     <para>
      The target system boots to a text-based environment, giving you the
      network address under which the graphical installation environment can
      be addressed by any SSH client.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, open a terminal window and connect to
      the target system as described in
      <xref linkend="sec.deployment.remoteinst.monitor.ssh.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.scenario.sshpxe">
   <title>Remote Installation via SSH&mdash;PXE Boot and Wake on LAN</title>
   <para>
    This type of installation is completely hands-off. The target machine is
    started and booted remotely.
   </para>
   <para>
    To perform this type of installation, make sure that the following
    requirements are met:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Remote repository: NFS, HTTP, FTP, or SMB with working network
      connection.
     </para>
    </listitem>
    <listitem>
     <para>
      TFTP server.
     </para>
    </listitem>
    <listitem>
     <para>
      Running DHCP server for your network, providing a static IP to the
      host to install.
     </para>
    </listitem>
    <listitem>
     <para>
      Target system capable of PXE boot, networking, and Wake on LAN,
      plugged in and connected to the network.
     </para>
    </listitem>
    <listitem>
     <para>
      Controlling system with working network connection and SSH client
      software.
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="proc.deployment.remoteinst.scenario.sshpxe">
    <para>
     To perform this type of installation, proceed as follows:
    </para>
    <step>
     <para>
      Set up the repository as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver"/>. Choose
      an NFS, HTTP, or FTP network server. For the configuration of an SMB
      repository, refer to
      <xref
       linkend="sec.deployment.remoteinst.instserver.smb"/>.
     </para>
    </step>
    <step>
     <para>
      Set up a TFTP server to hold a boot image that can be pulled by the
      target system. This is described in
      <xref linkend="sec.deployment.remoteinst.boot.tftp"/>.
     </para>
    </step>
    <step>
     <para>
      Set up a DHCP server to provide IP addresses to all machines and
      reveal the location of the TFTP server to the target system. This is
      described in
      <xref
       linkend="sec.deployment.remoteinst.boot.dhcp"/>.
     </para>
    </step>
    <step>
     <para>
      Prepare the target system for PXE boot. This is described in further
      detail in
      <xref
       linkend="sec.deployment.remoteinst.boot.pxeprep"/>.
     </para>
    </step>
    <step>
     <para>
      Initiate the boot process of the target system using Wake on LAN. This
      is described in <xref linkend="sec.deployment.remoteinst.boot.wol"/>.
     </para>
    </step>
    <step>
     <para>
      On the controlling workstation, start an SSH client and connect to the
      target system as described in
      <xref linkend="sec.deployment.remoteinst.monitor.ssh"/>.
     </para>
    </step>
    <step>
     <para>
      Perform the installation as described in <xref linkend="cha.inst"/>.
      Reconnect to the target system after it reboots for the final part of
      the installation.
     </para>
    </step>
    <step>
     <para>
      Finish the installation.
     </para>
    </step>
   </procedure>
  </sect2>
 </sect1>
<!-- ================================================================ -->
 <sect1 id="sec.deployment.remoteinst.instserver">
  <title>Setting Up the Server Holding the Installation Sources</title>

<!-- FIXME: check SLS version number for SLE 12 -->

  <para>
   Depending on the operating system running on the machine to use as the
   network installation source for &productname;, there are several options
   for the server configuration. The easiest way to set up an installation
   server is to use &yast; on <phrase os="sled;sles">&sls; &productnumber;
   or </phrase>&opensuse; 11.1 and higher.
  </para>

  <tip>
   <para>
    You can even use a Microsoft Windows machine as the installation server
    for your Linux deployment. See
    <xref linkend="sec.deployment.remoteinst.instserver.smb"/> for details.
   </para>
  </tip>

  <sect2 id="sec.deployment.remoteinst.instserver.sles9">
   <title>Setting Up an Installation Server Using &yast;</title>
   <para>
    &yast; offers a graphical tool for creating network repositories. It
    supports HTTP, FTP, and NFS network installation servers.
   </para>
   <procedure id="proc.deployment.remoteinst.instserver.sles9">
    <step>
     <para>
      Log in as &rootuser; to the machine that should act as installation
      server.
     </para>
    </step>
    <step os="osuse">
     <para>
      Install the <systemitem class="resource">yast2-instserver</systemitem>
      package.
     </para>
    </step>
    <step>
     <para>
      Start <menuchoice> <guimenu>&yast;</guimenu>
      <guimenu>Miscellaneous</guimenu> <guimenu>Installation
      Server</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Select the repository type (HTTP, FTP, or NFS). The selected service
      is started automatically every time the system starts. If a service of
      the selected type is already running on your system and you want to
      configure it manually for the server, deactivate the automatic
      configuration of the server service with <guimenu>Do Not Configure Any
      Network Services</guimenu>. In both cases, define the directory in
      which the installation data should be made available on the server.
     </para>
    </step>
    <step>
     <para>
      Configure the required repository type. This step relates to the
      automatic configuration of server services. It is skipped when
      automatic configuration is deactivated.
     </para>
     <para>
<!--adjust to standard network example-->
      Define an alias for the root directory of the FTP or HTTP server on
      which the installation data should be found. The repository will later
      be located under
      <literal>ftp://<replaceable>Server-IP</replaceable>/<replaceable>Alias</replaceable>/<replaceable>Name</replaceable></literal>
      (FTP) or under
      <literal>http://<replaceable>Server-IP</replaceable>/<replaceable>Alias</replaceable>/<replaceable>Name</replaceable></literal>
      (HTTP). <replaceable>Name</replaceable> stands for the name of the
      repository, which is defined in the following step. If you selected
      NFS in the previous step, define wild cards and export options. The
      NFS server will be accessible under
      <literal>nfs://<replaceable>Server-IP</replaceable>/<replaceable>Name</replaceable></literal>.
      Details of NFS and exports can be found in <xref linkend="cha.nfs"/>.
     </para>
     <tip>
      <title>Firewall Settings</title>
      <para>
       Make sure that the firewall settings of your server system allow
       traffic on the ports for HTTP, NFS, and FTP. If they currently do
       not, enable <guimenu>Open Port in Firewall</guimenu> or check
       <guimenu>Firewall Details</guimenu> first.
      </para>
     </tip>
    </step>
    <step>
     <para>
      Configure the repository. Before the installation media are copied to
      their destination, define the name of the repository (ideally, an
      easily remembered abbreviation of the product and version). &yast;
      allows providing ISO images of the media instead of copies of the
      installation DVDs. If you want this, activate the relevant check box
      and specify the directory path under which the ISO files can be found
      locally. Depending on the product to distribute using this
      installation server, it might be that more add-on CDs or service pack
      CDs are required and should be added as extra repositories. To
      announce your installation server in the network via OpenSLP, activate
      the appropriate option.
     </para>
<!-- FIXME: Add details on setting up SLP. 2010-07-06, ke -->
     <tip>
      <para>
       Consider announcing your repository via OpenSLP if your network setup
       supports this option. This saves you from entering the network
       installation path on every target machine. The target systems are
       just booted using the SLP boot option and find the network repository
       without any further configuration. For details on this option, refer
       to <xref
        linkend="sec.deployment.remoteinst.bootinst"/>.
      </para>
     </tip>
    </step>
    <step>
     <para>
      Upload the installation data. The most lengthy step in configuring an
      installation server is copying the actual installation media. Insert
      the media in the sequence requested by &yast; and wait for the copying
      procedure to end. When the sources have been fully copied, return to
      the overview of existing repositories and close the configuration by
      selecting <guimenu>Finish</guimenu>.
     </para>
     <para>
      Your installation server is now fully configured and ready for
      service. It is automatically started every time the system is started.
      No further intervention is required. You only need to configure and
      start this service correctly by hand if you have deactivated the
      automatic configuration of the selected network service with &yast; as
      an initial step.
     </para>
    </step>
   </procedure>
   <para>
    To deactivate a repository, select the repository to remove then select
    <guimenu>Delete</guimenu>. The installation data are removed from the
    system. To deactivate the network service, use the respective &yast;
    module.
   </para>
   <para>
    If your installation server needs to provide the installation data for
    more than one product of the product version, start the &yast;
    installation server module and select <guimenu>Add</guimenu> in the
    overview of existing repositories to configure the new repository.
   </para>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.instserver.nfs">
   <title>Setting Up an NFS Repository Manually</title>
   <important os="sled">
    <para>
     This assumes that you are using some kind of &suselinux;-based
     operating system on the machine that will serve as installation server.
     If this is not the case, turn to the other vendor's documentation on
     NFS instead of following these instructions.
    </para>
   </important>
   <para>
    Setting up an NFS source for installation is basically done in two
    steps. In the first step, create the directory structure holding the
    installation data and copy the installation media over to this
    structure. Second, export the directory holding the installation data to
    the network.
   </para>
<?dbfo-need height="5em"?>
   <procedure id="proc.deployment.remoteinst.instserver.nfs.cdir">
    <para>
     To create a directory to hold the installation data, proceed as
     follows:
    </para>
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Create a directory that will later hold all installation data and
      change into this directory. For example:
     </para>
<screen>mkdir install/<replaceable>product</replaceable>/<replaceable>productversion</replaceable></screen>
<screen>cd install/<replaceable>product</replaceable>/<replaceable>productversion</replaceable></screen>
     <para>
      Replace <replaceable>product</replaceable> with an abbreviation of the
      product name and <replaceable>productversion</replaceable> with a
      string that contains the product name and version.
     </para>
    </step>
    <step>
     <para>
      For each DVD contained in the media kit execute the following
      commands:
     </para>
     <substeps>
      <step>
       <para>
        Copy the entire content of the installation DVD into the
        installation server directory:
       </para>
<screen>cp -a /media/<replaceable>path_to_your_DVD_drive .</replaceable></screen>
       <para>
        Replace <replaceable>path_to_your_DVD_drive</replaceable> with the
        actual path under which your DVD drive is addressed. Depending on
        the type of drive used in your system, this can be
        <filename>cdrom</filename>, <filename>cdrecorder</filename>,
        <filename>dvd</filename>, or <filename>dvdrecorder</filename>.
       </para>
      </step>
      <step>
       <para>
        Rename the directory to the DVD number:
       </para>
<screen>mv <replaceable>path_to_your_DVD_drive</replaceable> DVD<replaceable>x</replaceable></screen>
       <para>
        Replace <replaceable>x</replaceable> with the actual number of your
        DVD.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
   <procedure id="proc.deployment.remoteinst.instserver.nfs.export">
    <para>
     On &productname;, you can export the repository with NFS using &yast;.
     Proceed as follows:
    </para>
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
      Services</guimenu> <guimenu>NFS Server</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Start</guimenu> and <guimenu>Open Port in
      Firewall</guimenu> and click <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Add Directory</guimenu> and browse for the directory
      containing the installation sources, in this case,
      <filename><replaceable>productversion</replaceable></filename>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Add Host</guimenu> and enter the hostnames of the
      machines to which to export the installation data. Instead of
      specifying hostnames here, you could also use wild cards, ranges of
      network addresses, or just the domain name of your network. Enter the
      appropriate export options or leave the default, which works fine in
      most setups. For more information about the syntax used in exporting
      NFS shares, read the <systemitem>exports</systemitem> man page.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Finish</guimenu>. The NFS server holding the
      &productname; repository is automatically started and integrated into
      the boot process.
     </para>
    </step>
   </procedure>
   <procedure id="proc.deployment.remoteinst.instserver.nfs.exportman">
    <para>
     If you prefer manually exporting the repository via NFS instead of
     using the &yast; NFS Server module, proceed as follows:
    </para>
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Open the file <filename>/etc/exports</filename> and enter the
      following line:
     </para>
<screen>/<replaceable>productversion</replaceable> *(ro,root_squash,sync)</screen>
     <para>
      This exports the directory
      <filename>/<replaceable>productversion</replaceable></filename> to any
      host that is part of this network or to any host that can connect to
      this server. To limit the access to this server, use netmasks or
      domain names instead of the general wild card <literal>*</literal>.
      Refer to the <systemitem>export</systemitem> man page for details.
      Save and exit this configuration file.
     </para>
    </step>
    <step>
     <para>
      To add the NFS service to the list of servers started during system
      boot, execute the following commands:
     </para>
<screen>insserv /etc/init.d/nfsserver</screen>
    </step>
    <step>
     <para>
      Start the NFS server with <command>rcnfsserver start</command>. If you
      need to change the configuration of your NFS server later, modify the
      configuration file and restart the NFS daemon with
      <command>rcnfsserver restart</command>.
     </para>
    </step>
   </procedure>
   <procedure id="proc.deployment.remoteinst.instserver.nfs.slpann">
    <para>
     Announcing the NFS server via OpenSLP makes its address known to all
     clients in your network.
    </para>
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Create the <filename>/etc/slp.reg.d/install.suse.nfs.reg</filename>
      configuration file with the following lines:
     </para>
<screen><?dbsuse-fo font-size="7pt"?># Register the NFS Installation Server
service:install.suse:nfs://$HOSTNAME/<replaceable>path_to_repository</replaceable>/DVD1,en,65535 
description=NFS Repository</screen>
     <para>
      Replace <replaceable>path_to_repository</replaceable> with the actual
      path to the installation source on your server.
     </para>
    </step>
    <step>
     <para>
      Start the OpenSLP daemon with <command>rcslpd start</command>.
     </para>
    </step>
   </procedure>
   <para>
    For more information about OpenSLP, refer to the package documentation
    located under <filename>/usr/share/doc/packages/openslp/</filename> or
    refer to <xref linkend="cha.slp"/>. More Information about NFS, refer to
    <xref linkend="cha.nfs"/>.
   </para>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.instserver.ftp">
   <title>Setting Up an FTP Repository Manually</title>
   <para>
    Creating an FTP repository is very similar to creating an NFS
    repository. An FTP repository can be announced over the network using
    OpenSLP as well.
   </para>
   <procedure id="proc.deployment.remoteinst.instserver.ftp">
    <step>
     <para>
      Create a directory holding the installation sources as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver.nfs"/>.
     </para>
    </step>
    <step>
     <para>
      Configure the FTP server to distribute the contents of your
      installation directory:
     </para>
     <substeps>
      <step>
       <para>
        Log in as &rootuser; and install the package
        <systemitem>vsftpd</systemitem> using the &yast; software
        management.
       </para>
      </step>
      <step>
       <para>
        Enter the FTP server root directory:
       </para>
<screen>cd <option>/srv/ftp</option></screen>
      </step>
      <step>
       <para>
        Create a subdirectory holding the installation sources in the FTP
        root directory:
       </para>
<screen>mkdir <replaceable>repository</replaceable> </screen>
       <para>
        Replace <replaceable>repository</replaceable> with the product name.
       </para>
      </step>
      <step>
       <para>
        Mount the contents of the installation repository into the change
        root environment of the FTP server:
       </para>
<screen>mount --bind <replaceable>path_to_repository</replaceable> /srv/ftp/<replaceable>repository</replaceable></screen>
       <para>
        Replace <replaceable>path_to_repository</replaceable> and
        <replaceable>repository</replaceable> with values matching your
        setup. If you need to make this permanent, add it to
        <filename>/etc/fstab</filename>.
       </para>
      </step>
      <step>
       <para>
        Start vsftpd with <command>vsftpd</command>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Announce the repository via OpenSLP, if this is supported by your
      network setup:
     </para>
     <substeps>
      <step>
       <para>
        Create the <filename>/etc/slp.reg.d/install.suse.ftp.reg</filename>
        configuration file with the following lines:
       </para>
<screen><?dbsuse-fo font-size="7pt"?># Register the FTP Installation Server
service:install.suse:ftp://$HOSTNAME/<replaceable>repository</replaceable>/DVD1,en,65535 
description=FTP Repository</screen>
       <para>
        Replace <replaceable>repository</replaceable> with the actual name
        to the repository directory on your server. The
        <literal>service:</literal> line should be entered as one continuous
        line.
       </para>
      </step>
      <step>
       <para>
        Start the OpenSLP daemon with <command>rcslpd start</command>.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
   <tip os="sles;osuse">
    <title>Configuring an FTP Server with &yast;</title>
    <para>
     If you prefer using &yast; over manually configuring the FTP
     installation server, refer to <xref linkend="cha.ftp"/> for more
     information on how to use the &yast; FTP server module.
    </para>
   </tip>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.instserver.http">
   <title>Setting Up an HTTP Repository Manually</title>
   <para>
    Creating an HTTP repository is very similar to creating an NFS
    repository. An HTTP repository can be announced over the network using
    OpenSLP as well.
   </para>
   <procedure id="proc.deployment.remoteinst.instserver.http">
    <step>
     <para>
      Create a directory holding the installation sources as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver.nfs"/>.
     </para>
    </step>
    <step>
     <para>
      Configure the HTTP server to distribute the contents of your
      installation directory:
     </para>
     <substeps>
      <step>
       <para>
        <phrase os="sles;osuse">Install the Web server Apache as described
        in
        <xref
          linkend="sec.apache2.quickstart.installation"/></phrase><phrase os="sled">Install
        the Web server Apache</phrase>.
       </para>
      </step>
      <step>
       <para>
        Enter the root directory of the HTTP server
        (<filename>/srv/www/htdocs</filename>) and create the subdirectory
        that will hold the installation sources:
       </para>
<screen>mkdir <replaceable>repository</replaceable> 
       </screen>
       <para>
        Replace <replaceable>repository</replaceable> with the product name.
       </para>
      </step>
      <step>
       <para>
        Create a symbolic link from the location of the installation sources
        to the root directory of the Web server
        (<filename>/srv/www/htdocs</filename>):
       </para>
<screen>ln -s <replaceable>/path_to_repository </replaceable>/srv/www/htdocs/<replaceable>repository</replaceable></screen>
      </step>
      <step>
       <para>
        Modify the configuration file of the HTTP server
        (<filename>/etc/apache2/default-server.conf</filename>) to make it
        follow symbolic links. Replace the following line:
       </para>
<screen>Options None</screen>
       <para>
        with
       </para>
<screen>Options Indexes FollowSymLinks</screen>
      </step>
      <step>
       <para>
        Reload the HTTP server configuration using <command>rcapache2
        reload</command>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Announce the repository via OpenSLP, if this is supported by your
      network setup:
     </para>
     <substeps>
      <step>
       <para>
        Create the <filename>/etc/slp.reg.d/install.suse.http.reg</filename>
        configuration file with the following lines:
       </para>
<screen><?dbsuse-fo font-size="6.5pt"?># Register the HTTP Installation Server<!--adjust to standard network example-->
service:install.suse:http://$HOSTNAME/<replaceable>repository</replaceable>/DVD1/,en,65535 
description=HTTP Repository</screen>
       <para>
        Replace <replaceable>repository</replaceable> with the actual path
        to the repository on your server. The <literal>service:</literal>
        line should be entered as one continuous line.
       </para>
      </step>
      <step>
       <para>
        Start the OpenSLP daemon using <command>rcslpd restart</command>.
       </para>
      </step>
     </substeps>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.instserver.smb">
   <title>Managing an SMB Repository</title>
   <para>
    Using SMB, you can import the installation sources from a Microsoft
    Windows server and start your Linux deployment even with no Linux
    machine around.
   </para>
   <procedure id="proc.deployment.remoteinst.instserver.smb.export">
    <para>
     To set up an exported Windows Share holding your &productname;
     repository, proceed as follows:
    </para>
    <step>
     <para>
      Log in to your Windows machine.
     </para>
    </step>
    <step>
     <para>
      Create a new folder that will hold the entire installation tree and
      name it <filename>INSTALL</filename>, for example.
     </para>
    </step>
    <step>
     <para>
      Export this share according the procedure outlined in your Windows
      documentation.
     </para>
    </step>
    <step>
     <para>
      Enter this share and create a subfolder, called
      <filename><replaceable>product</replaceable></filename>. Replace
      <replaceable>product</replaceable> with the actual product name.
     </para>
    </step>
    <step>
     <para>
      Enter the
      <filename>INSTALL/<replaceable>product</replaceable></filename> folder
      and copy each DVD to a separate folder, such as
      <literal>DVD1</literal> and <literal>DVD2</literal>.
     </para>
    </step>
   </procedure>
   <para>
    To use a SMB mounted share as a repository, proceed as follows:
   </para>
   <procedure id="proc.deployment.remoteinst.instserver.smb.use">
    <step>
     <para>
      Boot the installation target.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Installation</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Press <keycap>F4</keycap> for a selection of the repository.
     </para>
    </step>
    <step>
     <para>
      Choose SMB and enter the Windows machine's name or IP address, the
      share name
      (<filename>INSTALL/<replaceable>product</replaceable>/DVD1</filename>,
      in this example), username, and password.
     </para>
     <para>
      After you hit <keycap function="enter">Enter</keycap>, &yast; starts
      and you can perform the installation.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.iso">
   <title>Using ISO Images of the Installation Media on the Server</title>
   <para>
    Instead of copying physical media into your server directory manually,
    you can also mount the ISO images of the installation media into your
    installation server and use them as a repository. To set up an HTTP, NFS
    or FTP server that uses ISO images instead of media copies, proceed as
    follows:
   </para>
   <procedure>
    <step>
     <para>
      Download the ISO images and save them to the machine to use as the
      installation server.
     </para>
    </step>
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Choose and create an appropriate location for the installation data,
      as described in
      <xref linkend="sec.deployment.remoteinst.instserver.nfs"/>,
      <xref
       linkend="sec.deployment.remoteinst.instserver.ftp"/>, or
      <xref
       linkend="sec.deployment.remoteinst.instserver.http"/>.
     </para>
    </step>
    <step>
     <para>
      Create subdirectories for each DVD.
     </para>
    </step>
    <step>
     <para>
      To mount and unpack each ISO image to the final location, issue the
      following command:
     </para>
<screen>mount -o loop <replaceable>path_to_iso</replaceable> <replaceable>path_to_repository</replaceable>/<replaceable>product</replaceable>/<replaceable>mediumx</replaceable></screen>
     <para>
      Replace <replaceable>path_to_iso</replaceable> with the path to your
      local copy of the ISO image,
      <replaceable>path_to_repository</replaceable> with the source
      directory of your server, <replaceable>product</replaceable> with the
      product name, and <replaceable>mediumx</replaceable> with the type (CD
      or DVD) and number of media you are using.
     </para>
    </step>
    <step>
     <para>
      Repeat the previous step to mount all ISO images needed for your
      product.
     </para>
    </step>
    <step>
     <para>
      Start your installation server as usual, as described in
      <xref
       linkend="sec.deployment.remoteinst.instserver.nfs"/>,
      <xref
       linkend="sec.deployment.remoteinst.instserver.ftp"/>, or
      <xref
       linkend="sec.deployment.remoteinst.instserver.http"/>.
     </para>
    </step>
   </procedure>
   <para>
    To automatically mount the ISO images at boot time, add the respective
    mount entries to <filename>/etc/fstab</filename>. An entry according to
    the previous example would look like the following:
   </para>
<screen><replaceable>path_to_iso</replaceable>&nbsp;<replaceable>path_to_repository</replaceable>/<replaceable>product</replaceable>
    <replaceable>medium</replaceable>&nbsp;auto&nbsp;loop</screen>
  </sect2>
 </sect1>
 <sect1 id="sec.deployment.remoteinst.boot">
  <title>Preparing the Boot of the Target System</title>

  <para>
   This section covers the configuration tasks needed in complex boot
   scenarios. It contains ready-to-apply configuration examples for DHCP,
   PXE boot, TFTP, and Wake on LAN.
  </para>

  <sect2 id="sec.deployment.remoteinst.boot.dhcp">
   <title>Setting Up a DHCP Server</title>
   <para>
    There are two ways to set up a DHCP server. For &productname;, &yast;
    provides a graphical interface to the process. Users can also manually
    edit the configuration files.<phrase
     os="osuse;sles"> For more
    information about DHCP servers, see also
    <xref linkend="cha.dhcp"
     />.</phrase>
   </para>
<!--   <important os="sled">
    <para>The following sections just cover the configuration changes
     needed to make your DHCP server ready for PXE boot. For more
     information about the configuration of DHCP, turn to the manuals of your
     operating system vendor.</para>
   </important> -->
   <sect3 id="sec.deployment.remoteinst.boot.dhcp.yast">
    <title>Setting Up a DHCP Server with &yast;</title>
    <para>
     To announce the TFTP server's location to the network clients and
     specify the boot image file the installation target should use, add two
     declarations to your DHCP server configuration.
    </para>
<?dbfo-need height="10em"?>
    <procedure id="proc.deployment.remoteinst.boot.dhcp.yast">
     <step>
      <para>
       Log in as &rootuser; to the machine hosting the DHCP server.
      </para>
     </step>
     <step os="osuse">
      <para>
       Install the
       <systemitem class="resource">yast2-dhcp-server</systemitem> package.
      </para>
     </step>
     <step>
      <para>
       Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
       Services</guimenu> <guimenu>DHCP Server</guimenu></menuchoice>.
      </para>
     </step>
     <step>
      <para>
       Complete the setup wizard for basic DHCP server setup.
      </para>
     </step>
     <step id="st.deployment.remoteinst.boot.dhcp.yast.expert">
      <para>
       Select <guimenu>Expert Settings</guimenu> and select
       <guimenu>Yes</guimenu> when warned about leaving the start-up dialog.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Configured Declarations</guimenu> dialog, select the
       subnet in which the new system should be located and click
       <guimenu>Edit</guimenu>.
      </para>
     </step>
     <step>
      <para>
       In the <guimenu>Subnet Configuration</guimenu> dialog select
       <guimenu>Add</guimenu> to add a new option to the subnet's
       configuration.
      </para>
     </step>
     <step>
      <para>
       Select <option>filename</option> and enter
       <literal>pxelinux.0</literal> as the value.
      </para>
     </step>
     <step>
      <para>
       Add another option (<option>next-server</option>) and set its value
       to the address of the TFTP server.
      </para>
     </step>
     <step>
      <para>
       Select <guimenu>OK</guimenu> and <guimenu>Finish</guimenu> to
       complete the DHCP server configuration.
      </para>
     </step>
    </procedure>
    <para>
     To configure DHCP to provide a static IP address to a specific host,
     enter the <guimenu>Expert Settings</guimenu> of the DHCP server
     configuration module
     (<xref
      linkend="st.deployment.remoteinst.boot.dhcp.yast.expert" xrefstyle="StepOnPage"/>)
     and add a new declaration of the host type. Add the options
     <option>hardware</option> and <option>fixed-address</option> to this
     host declaration and provide the appropriate values.
    </para>
   </sect3>
   <sect3 id="sec.deployment.remoteinst.boot.dhcp.man">
    <title>Setting Up a DHCP Server Manually</title>
    <para>
     All the DHCP server needs to do, apart from providing automatic address
     allocation to your network clients, is to announce the IP address of
     the TFTP server and the file that needs to be pulled in by the
     installation routines on the target machine.
    </para>
    <procedure id="proc.deployment.remoteinst.boot.dhcp.man">
     <step>
      <para>
       Log in as &rootuser; to the machine hosting the DHCP server.
      </para>
     </step>
     <step>
      <para>
       Append the following lines to a subnet configuration of your DHCP
       server's configuration file located under
       <filename>/etc/dhcpd.conf</filename>:
      </para>
<screen><!--adjust to standard network example-->subnet 192.168.1.0 netmask 255.255.255.0 { 
  range dynamic-bootp 192.168.1.200 192.168.1.228;
  # PXE related stuff 
  # 
  # "next-server" defines the tftp server that will be used 
  next-server <replaceable>ip_tftp_server</replaceable>: 
  #
  # "filename" specifies the pxelinux image on the tftp server
  # the server runs in chroot under /srv/tftpboot 
  filename  "pxelinux.0";
}</screen>
      <para>
       Replace
<!--adjust to standard network example-->
       <replaceable>ip_of_the_tftp_server</replaceable> with the actual IP
       address of the TFTP server. For more information about the options
       available in <filename>dhcpd.conf</filename>, refer to the
       <systemitem>dhcpd.conf</systemitem> manual page.
      </para>
     </step>
     <step>
      <para>
       Restart the DHCP server by executing <command>rcdhcpd
       restart</command>.
      </para>
     </step>
    </procedure>
    <para>
     If you plan on using SSH for the remote control of a PXE and Wake on
     LAN installation, explicitly specify the IP address DHCP should provide
     to the installation target. To achieve this, modify the above mentioned
     DHCP configuration according to the following example:
    </para>
<screen>group { 
  # PXE related stuff 
  # 
  # "next-server" defines the tftp server that will be used 
  next-server <replaceable>ip_tftp_server</replaceable>:
  # 
  # "filename" specifies the pxelinux image on the tftp server 
  # the server runs in chroot under /srv/tftpboot
  filename "pxelinux.0";
  host test {
    hardware ethernet <replaceable>mac_address</replaceable>; 
    fixed-address <replaceable>some_ip_address</replaceable>;
    }
}
</screen>
    <para>
     The host statement introduces the hostname of the installation target.
     To bind the hostname and IP address to a specific host, you must know
     and specify the system's hardware (MAC) address. Replace all the
     variables used in this example with the actual values that match your
     environment.
    </para>
    <para>
     After restarting the DHCP server, it provides a static IP to the host
     specified, enabling you to connect to the system via SSH.
    </para>
   </sect3>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.tftp">
   <title>Setting Up a TFTP Server</title>
   <para>
    Set up a TFTP server with &yast; <phrase os="sled;sles">on &sls; and
    &productname;</phrase> or set it up manually on any other Linux
    operating system that supports xinetd and TFTP. The TFTP server delivers
    the boot image to the target system once it boots and sends a request
    for it.
   </para>
   <sect3 id="sec.deployment.remoteinst.boot.tftp.yast">
    <title>Setting Up a TFTP Server Using &yast;</title>
    <procedure id="proc.deployment.remoteinst.boot.tftp.yast">
     <step>
      <para>
       Log in as &rootuser;.
      </para>
     </step>
     <step os="osuse">
      <para>
       Install the
       <systemitem class="resource">yast2-tftp-server</systemitem> package.
      </para>
     </step>
     <step>
      <para>
       Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
       Services</guimenu> <guimenu>TFTP Server</guimenu></menuchoice> and
       install the requested package.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Enable</guimenu> to make sure that the server is
       started and included in the boot routines. No further action from
       your side is required to secure this. xinetd starts tftpd at boot
       time.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Open Port in Firewall</guimenu> to open the
       appropriate port in the firewall running on your machine. If there is
       no firewall running on your server, this option is not available.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Browse</guimenu> to browse for the boot image
       directory. The default directory <filename>/tftpboot</filename> is
       created and selected automatically.
      </para>
     </step>
     <step>
      <para>
       Click <guimenu>Finish</guimenu> to apply your settings and start the
       server.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 id="sec.deployment.remoteinst.boot.tftp.man">
    <title>Setting Up a TFTP Server Manually</title>
    <procedure id="proc.deployment.remoteinst.boot.tftp.man">
     <step>
      <para>
       Log in as &rootuser; and install the packages
       <systemitem>tftp</systemitem> and <systemitem>xinetd</systemitem>.
      </para>
     </step>
     <step>
      <para>
       If unavailable, create <filename>/srv/tftpboot</filename> and
       <filename>/srv/tftpboot/pxelinux.cfg</filename> directories.
      </para>
     </step>
     <step>
      <para>
       Add the appropriate files needed for the boot image as described in
       <xref
        linkend="sec.deployment.remoteinst.boot.pxe"/>.
      </para>
     </step>
     <step>
      <para>
       Modify the configuration of xinetd located under
       <filename>/etc/xinetd.d</filename> to make sure that the TFTP server
       is started on boot:
      </para>
      <substeps>
       <step>
        <para>
         If it does not exist, create a file called
         <filename>tftp</filename> under this directory with <command>touch
         tftp</command>. Then run <command>chmod 755 tftp</command>.
        </para>
       </step>
       <step>
        <para>
         Open the file <filename>tftp</filename> and add the following
         lines:
        </para>
<screen>service tftp 
{ 
        socket_type            = dgram
        protocol               = udp 
        wait                   = yes 
        user                   = root 
        server                 = /usr/sbin/in.tftpd 
        server_args            = -s /srv/tftpboot 
        disable                = no 
}
</screen>
       </step>
       <step>
        <para>
         Save the file and restart xinetd with <command>rcxinetd
         restart</command>.
        </para>
       </step>
      </substeps>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.pxe">
   <title>Using PXE Boot</title>
   <para>
    Some technical background information as well as PXE's complete
    specifications are available in the Preboot Execution Environment (PXE)
    Specification
    (<ulink
     url="http://www.pix.net/software/pxeboot/archive/pxespec.pdf"/>).
   </para>
   <procedure id="proc.deployment.remoteinst.boot.pxe">
    <step>
     <para>
      Change to the directory
      <filename>boot/&lt;architecture&gt;/loader</filename> of your
      installation repository and copy the <filename>linux</filename>,
      <filename>initrd</filename>, <filename>message</filename>,
      <filename>biostest</filename>, and <filename>memtest</filename> files
      to the <filename>/srv/tftpboot</filename> directory by entering the
      following:
     </para>
<screen>cp -a linux initrd message biostest memtest /srv/tftpboot</screen>
    </step>
    <step>
     <para>
      Install the <systemitem>syslinux</systemitem> package directly from
      your installation DVDs with &yast;.
     </para>
    </step>
    <step>
     <para>
      Copy the <filename>/usr/share/syslinux/pxelinux.0</filename> file to
      the <filename>/srv/tftpboot</filename> directory by entering the
      following:
     </para>
<screen>cp -a /usr/share/syslinux/pxelinux.0 /srv/tftpboot
     </screen>
    </step>
    <step>
     <para>
      Change to the directory of your installation repository and copy the
      <filename>isolinux.cfg</filename> file to <filename>
      /srv/tftpboot/pxelinux.cfg/default</filename> by entering the
      following:
     </para>
<screen>cp -a boot/&lt;architecture&gt;/loader/isolinux.cfg /srv/tftpboot/pxelinux.cfg/default
     </screen>
    </step>
    <step>
     <para>
      Edit the <filename>/srv/tftpboot/pxelinux.cfg/default</filename> file
      and remove the lines beginning with <literal>gfxboot</literal>,
      <literal>readinfo</literal>, and <literal>framebuffer</literal>.
     </para>
    </step>
    <step>
     <para>
<!-- bg 2008-10-24: I guess this is not necessary anymore. -->
      Insert the following entries in the append lines of the default
      <option>failsafe</option> and <option>apic</option> labels:
     </para>
     <variablelist>
      <varlistentry>
       <term><option>insmod=<replaceable>kernel module</replaceable></option>
       </term>
       <listitem>
        <para>
         By means of this entry, enter the network Kernel module needed to
         support network installation on the PXE client. Replace
         <replaceable>kernel module</replaceable> with the appropriate
         module name for your network device.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><option>netdevice=<replaceable>interface</replaceable></option>
       </term>
       <listitem>
        <para>
         This entry defines the client's network interface that must be used
         for the network installation. It is only necessary if the client is
         equipped with several network cards and must be adapted
         accordingly. In case of a single network card, this entry can be
         omitted.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
<!--adjust to standard network example--><option>install=nfs://<replaceable>ip_instserver</replaceable>/<replaceable>path_to_repository</replaceable>/DVD1</option>
       </term>
       <listitem>
        <para>
         This entry defines the NFS server and the repository for the client
         installation. Replace
<!--adjust to standard network example-->
         <replaceable>ip_instserver</replaceable> with the actual IP address
         of your installation server.
         <replaceable>path_to_repository</replaceable> should be replaced
         with the actual path to the repository. HTTP, FTP, or SMB
         repositories are addressed in a similar manner, except for the
         protocol prefix, which should read <literal>http</literal>,
         <literal>ftp</literal>, or <literal>smb</literal>.
        </para>
        <important>
         <para>
          If you need to pass other boot options to the installation
          routines, such as SSH or VNC boot parameters, append them to the
          <option>install</option> entry. An overview of parameters and some
          examples are given in
          <xref
           linkend="sec.deployment.remoteinst.bootinst"/>.
         </para>
        </important>
       </listitem>
      </varlistentry>
     </variablelist>
     <tip>
      <title>Changing Kernel and initrd Filenames</title>
      <para>
       It is possible to use different filenames for Kernel and initrd
       images. This is useful if you want to provide different operating
       systems from the same boot server. However, you should be aware that
       only one dot is permitted in the filenames that are provided by TFTP
       for the PXE boot.
      </para>
     </tip>
     <para>
      An example <option>/srv/tftpboot/pxelinux.cfg/default</option> file
      follows. Adjust the protocol prefix for the repository to match your
      network setup and specify your preferred method of connecting to the
      installer by adding the <literal>vnc</literal> and
      <literal>vncpassword</literal> or the <literal>usessh</literal> and
      <literal>sshpassword</literal> options to the
      <literal>install</literal> entry. The lines separated by
      <literal>\</literal> must be entered as one continuous line without a
      line break and without the <literal>\</literal>.
     </para>
<screen os="sles;sled">default harddisk 
        
# default
label linux 
  kernel linux 
  append initrd=initrd ramdisk_size=65536 \
     install=nfs://<replaceable>ip_instserver</replaceable>/<replaceable>path_to_repository</replaceable>/<replaceable>product</replaceable>/DVD1 
	    
# repair
label repair
  kernel linux
  append initrd=initrd splash=silent repair=1 showopts

# rescue 
label rescue 
  kernel linux 
  append initrd=initrd ramdisk_size=65536 rescue=1 

# bios test
label firmware
  kernel linux
  append initrd=biostest,initrd splash=silent install=exec:/bin/run_biostest showopts

#  memory test 
label memtest 
  kernel memtest 

# hard disk 
label harddisk
  localboot 0

implicit     0 
display      message
prompt       1 
timeout      100
</screen>
<screen os="osuse">default harddisk 
        
# default
label linux 
  kernel linux 
  append initrd=initrd ramdisk_size=65536 \
     install=nfs://<replaceable>ip_instserver</replaceable>/<replaceable>path_to_repository</replaceable>/<replaceable>product</replaceable>/DVD1 
	    
# rescue 
label rescue 
  kernel linux 
  append initrd=initrd ramdisk_size=65536 rescue=1 

# bios test
label firmware
  kernel linux
  append initrd=biostest,initrd splash=silent install=exec:/bin/run_biostest showopts

#  memory test 
label memtest 
  kernel memtest 

# hard disk 
label harddisk
  localboot 0

implicit     0 
display      message
prompt       1 
timeout      100
</screen>
     <para>
      Replace
<!--adjust to standard network example-->
      <replaceable>ip_instserver</replaceable> and
      <replaceable>path_to_repository</replaceable> with the values used in
      your setup.
     </para>
     <para>
      The following section serves as a short reference to the PXELINUX
      options used in this setup. Find more information about the options
      available in the documentation of the
      <systemitem>syslinux</systemitem> package located under
      <filename>/usr/share/doc/packages/syslinux/</filename>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.pxeopts">
   <title>PXELINUX Configuration Options</title>
   <para>
    The options listed here are a subset of all the options available for
    the PXELINUX configuration file.
   </para>
   <variablelist>
    <varlistentry>
     <term><option>DEFAULT <replaceable>kernel options</replaceable>...</option>
     </term>
     <listitem>
      <para>
       Sets the default Kernel command line. If PXELINUX boots
       automatically, it acts as if the entries after DEFAULT had been typed
       in at the boot prompt, except the auto option is automatically added,
       indicating an automatic boot.
      </para>
      <para>
       If no configuration file is present or no DEFAULT entry is present in
       the configuration file, the default is the Kernel name
       <quote>linux</quote> with no options.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>APPEND <replaceable>options... </replaceable></option>
     </term>
     <listitem>
      <para>
       Add one or more options to the Kernel command line. These are added
       for both automatic and manual boots. The options are added at the
       very beginning of the Kernel command line, usually permitting
       explicitly entered Kernel options to override them.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>LABEL <replaceable>label</replaceable> KERNEL <replaceable>image</replaceable>
       APPEND <replaceable>options</replaceable>...</option>
     </term>
     <listitem>
      <para>
       Indicates that if <replaceable>label</replaceable> is entered as the
       Kernel to boot, PXELINUX should instead boot
       <replaceable>image</replaceable> and the specified
       <option>APPEND</option> options should be used instead of the ones
       specified in the global section of the file (before the first
       <option>LABEL</option> command). The default for
       <replaceable>image</replaceable> is the same as
       <replaceable>label</replaceable> and, if no <option>APPEND</option>
       is given, the default is to use the global entry (if any). Up to 128
       <option>LABEL</option> entries are permitted.
      </para>
      <para>
       Note that &grub; uses the following syntax:
      </para>
<screen>title mytitle 
  kernel <replaceable>my_kernel</replaceable> <replaceable>my_kernel_options</replaceable> 
  initrd <replaceable>myinitrd</replaceable>
</screen>
<?dbfo-need height="10em"?>
      <para>
       PXELINUX uses the following syntax:
      </para>
<screen>label <replaceable>mylabel</replaceable> 
  kernel <replaceable>mykernel</replaceable> 
  append <replaceable>myoptions</replaceable>
      </screen>
      <para>
       <remark role="trans">rwalter: mangling is a technical term here.</remark>
       Labels are mangled as if they were filenames and they must be unique
       after mangling. For example, the two labels <quote>v2.6.30</quote>
       and <quote>v2.6.31</quote> would not be distinguishable under
       PXELINUX because both mangle to the same DOS filename.
      </para>
      <para>
       The Kernel does not have to be a Linux Kernel; it can be a boot
       sector or a COMBOOT file.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>APPEND -</option>
     </term>
     <listitem>
      <para>
       Append nothing. <option>APPEND</option> with a single hyphen as
       argument in a <option>LABEL</option> section can be used to override
       a global <option>APPEND</option>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>LOCALBOOT <replaceable>type</replaceable></option>
     </term>
     <listitem>
      <para>
       On PXELINUX, specifying <option>LOCALBOOT 0</option> instead of a
       <option>KERNEL</option> option means invoking this particular label
       and causes a local disk boot instead of a Kernel boot.
      </para>
      <informaltable frame="topbot" rowsep="0">
       <tgroup cols="2">
<!--<colspec colnum="1" colname="1" colwidth="20"/>
	<colspec colnum="2" colname="2" colwidth="60"/>-->
        <thead>
         <row>
          <entry colname="1">
           <para>
            Argument
           </para>
          </entry>
          <entry colname="2">
           <para>
            Description
           </para>
          </entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry colname="1">
           <para>
            <literal>0</literal>
           </para>
          </entry>
          <entry colname="2">
           <para>
            Perform a normal boot
           </para>
          </entry>
         </row>
         <row>
          <entry colname="1">
           <para>
            <literal>4</literal>
           </para>
          </entry>
          <entry colname="2">
           <para>
            Perform a local boot with the Universal Network Driver Interface
            (UNDI) driver still resident in memory
           </para>
          </entry>
         </row>
         <row>
          <entry colname="1">
           <para>
            <literal>5</literal>
           </para>
          </entry>
          <entry colname="2">
           <para>
            Perform a local boot with the entire PXE stack, including the
            UNDI driver, still resident in memory
           </para>
          </entry>
         </row>
        </tbody>
       </tgroup>
      </informaltable>
      <para>
       All other values are undefined. If you do not know what the UNDI or
       PXE stacks are, specify <literal>0</literal>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>TIMEOUT <replaceable>time-out</replaceable></option>
     </term>
     <listitem>
      <para>
       Indicates how long to wait at the boot prompt until booting
       automatically, in units of 1/10 second. The time-out is canceled as
       soon as the user types anything on the keyboard, assuming the user
       will complete the command begun. A time-out of zero disables the
       time-out completely (this is also the default). The maximum possible
       time-out value is 35996 (just less than one hour).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><option>PROMPT<replaceable> flag_val</replaceable></option>
     </term>
     <listitem>
      <para>
       If <option>flag_val</option> is 0, displays the boot prompt only if
       <keycap
        function="shift">Shift</keycap> or
       <keycap function="alt">Alt</keycap> is pressed or <keycap>Caps
       Lock</keycap> or <keycap>Scroll Lock</keycap> is set (this is the
       default). If <option>flag_val</option> is 1, always displays the boot
       prompt.
      </para>
<screen>F2  <replaceable>filename</replaceable>
F1  <replaceable>filename</replaceable> 
..etc... 
F9  <replaceable>filename</replaceable>
F10 <replaceable>filename</replaceable></screen>
      <para>
       Displays the indicated file on the screen when a function key is
       pressed at the boot prompt. This can be used to implement preboot
       online help (presumably for the Kernel command line options). For
       backward compatibility with earlier releases, <keycap>F10</keycap>
       can be also entered as <keycap>F0</keycap>. Note that there is
       currently no way to bind filenames to <keycap>F11</keycap> and
       <keycap>F12</keycap>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.pxeprep">
   <title>Preparing the Target System for PXE Boot</title>
   <para>
    Prepare the system's BIOS for PXE boot by including the PXE option in
    the BIOS boot order.
   </para>
   <warning>
    <title>BIOS Boot Order</title>
    <para>
     Do not place the PXE option ahead of the hard disk boot option in the
     BIOS. Otherwise this system would try to reinstall itself every time
     you boot it.
    </para>
   </warning>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.wolprep">
   <title>Preparing the Target System for Wake on LAN</title>
   <para>
    Wake on LAN (WOL) requires the appropriate BIOS option to be enabled
    prior to the installation. Also, note down the MAC address of the target
    system. This data is needed to initiate Wake on LAN.
   </para>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.wol">
   <title>Wake on LAN</title>
   <para>
    Wake on LAN allows a machine to be turned on by a special network packet
    containing the machine's MAC address. Because every machine in the world
    has a unique MAC identifier, you do not need to worry about accidentally
    turning on the wrong machine.
   </para>
   <important>
    <title>Wake on LAN across Different Network Segments</title>
    <para>
     If the controlling machine is not located in the same network segment
     as the installation target that should be awakened, either configure
     the WOL requests to be sent as multicasts or remotely control a machine
     on that network segment to act as the sender of these requests.
    </para>
   </important>
   <para os="sled;sles">
    Users of &sls; can use a &yast; module called WOL to easily configure
    Wake on LAN. Users of other versions of &suselinux;-based operating
    systems can use a command line tool.
   </para>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.boot.wolyast" os="sled;sles">
   <title>Wake on LAN with &yast;</title>
   <procedure id="proc.deployment.remoteinst.boot.wolyast">
    <step>
     <para>
      Log in as &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Start <menuchoice> <guimenu>&yast;</guimenu> <guimenu>Network
      Services</guimenu> <guimenu>WOL</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Add</guimenu> and enter the hostname and MAC address of
      the target system.
     </para>
    </step>
    <step>
     <para>
      To turn on this machine, select the appropriate entry and click
      <guimenu>Wake up</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

<!-- 2008-10-09 bg: package netdiag is missing on distribution. 
  <?dbfo-need height="10em" ?>
  
  <sect2 id="sec.deployment.remoteinst.boot.wolman">
   <title>Manual Wake on LAN</title>
   <procedure id="proc.deployment.remoteinst.boot.wolman">
    <step>
     <para>Log in as &rootuser;.</para>
    </step>
    <step>
     <para>Start <menuchoice>
       <guimenu>&yast;</guimenu>
       <guimenu>Software Management</guimenu></menuchoice> and
      install the
      package <systemitem>netdiag</systemitem>.</para>
    </step>

    <step>
     <para>Open a terminal and enter the following command as &rootuser; to wake
      the target:</para>
     <screen>ether-wake <replaceable> mac_of_target</replaceable></screen>
     <para>Replace <replaceable>mac_of_target</replaceable>
      with the actual MAC address of the target.</para>
    </step>
   </procedure>
  </sect2> -->
 </sect1>
 <sect1 id="sec.deployment.remoteinst.bootinst">
  <title>Booting the Target System for Installation</title>

  <para>
   Basically, there are two different ways to customize the boot process for
   installation apart from those mentioned under
   <xref linkend="sec.deployment.remoteinst.boot.wol"/> and
   <xref
    linkend="sec.deployment.remoteinst.boot.pxe"/>. You can either
   use the default boot options and function keys or use the boot options
   prompt of the installation boot screen to pass any boot options that the
   installation Kernel might need on this particular hardware.
  </para>

  <sect2 id="sec.deployment.remoteinst.bootinst.opts">
   <title>Using the Default Boot Options</title>
   <para>
    The boot options are described in detail in <xref linkend="cha.inst"/>.
    Generally, just selecting <guimenu>Installation</guimenu> starts the
    installation boot process.
   </para>
   <para>
    If problems occur, use <guimenu>Installation&mdash;ACPI
    Disabled</guimenu> or <guimenu>Installation&mdash;Safe
    Settings</guimenu>. For more information about troubleshooting the
    installation process, refer to <xref linkend="sec.trouble.install"/>.
   </para>
   <para>
    The menu bar at the bottom screen offers some advanced functionality
    needed in some setups. Using the F keys, you can specify additional
    options to pass to the installation routines without having to know the
    detailed syntax of these parameters (see
    <xref
     linkend="sec.deployment.remoteinst.bootinst.custom"/>). A
    detailed description of the available function keys is available at
    <xref linkend="sec.i.yast2.bootscreen"/>.
   </para>
  </sect2>

<!-- bg: added reference to inst_yast2 instead. 
  <sect2 id="sec.deployment.remoteinst.bootinst.fkeys">
   <title>Using the F Keys </title>
   <para>The menu bar at the bottom screen offers some advanced
    functionality needed in some setups. Using the F keys, you can specify
    additional options to pass to the installation routines without
    having to know the detailed syntax of these parameters (see <xref
     linkend="sec.deployment.remoteinst.bootinst.custom"
     />).</para>
   <para>See the table below for a complete set of the options
    available.<phrase os="sled"> To
    access the complete set of F keys available, first press
    <keycap>F3</keycap>.</phrase></para>
   
   <table id="tab.deployment.remoteinst.bootinst.fkeys">
    <title>F Keys During Installation</title>
    <tgroup cols="4">
     <colspec colnum="1" colname="1" />
     <colspec colnum="2" colname="2" />
     <colspec colnum="3" colname="3" />
     <thead>
      <row>
       <entry colname="1">
	<para>Key</para>
       </entry>
       <entry colname="2">
	<para>Purpose</para>
       </entry>
       <entry colname="3">
	<para>Available Options</para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry colname="1">
	<para><keycap>F1</keycap></para>
       </entry>
       <entry colname="2">
	<para>Provide help</para>
       </entry>
       <entry colname="3">
	<para>None</para>
       </entry>
      </row>
      <row>
       <entry colname="1">
	<para><keycap>F2</keycap></para>
       </entry>
       <entry colname="2">
	<para>Select the installation language</para>
       </entry>
       <entry colname="3">
	<para>All supported languages</para>
       </entry>
      </row>
      <row>
       <entry colname="1">
	<para><keycap>F3</keycap></para>
       </entry>
       <entry colname="2">
	<para>Change screen resolution for installation</para>
       </entry>
       <entry colname="3">
	<itemizedlist>
	 <listitem>
	  <para>Text mode</para>
	 </listitem>
	 <listitem>
	  <para>VESA</para>
	 </listitem>
	 <listitem>
	  <para>resolution #1</para>
	 </listitem>
	 <listitem>
	  <para>resolution #2</para>
	 </listitem>
	 <listitem>
	  <para>...</para>
	 </listitem>
	</itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
	<para><keycap>F4</keycap></para>
       </entry>
       <entry colname="2">
	<para>Select the Repository</para>
       </entry>
       <entry colname="3">
	<itemizedlist>
	 <listitem>
	  <para>CD-ROM or DVD</para>
	 </listitem>
	 <listitem>
	  <para>SLP</para>
	 </listitem>
	 <listitem>
	  <para>FTP</para>
	 </listitem>
	 <listitem>
	  <para>HTTP</para>
	 </listitem>
	 <listitem>
	  <para>NFS</para>
	 </listitem>
	 <listitem>
	  <para>SMB</para>
	 </listitem>
	 <listitem>
	  <para>Hard Disk</para>
	 </listitem>
	</itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
	<para><keycap>F5</keycap></para>
       </entry>
       <entry colname="2">
	<para>Choose appropriate Kernel options</para>
       </entry>
       <entry colname="4">
	<itemizedlist>
	 <listitem>
	  <para>Default</para>
	 </listitem>
	 <listitem>
	  <para>No ACPI</para>
	 </listitem>
	 <listitem>
	  <para>No local APIC</para>
	 </listitem>
	 <listitem>
	  <para>Installation&mdash;ACPI Disabled</para>
	 </listitem>
	 <listitem>
	  <para>Installation&mdash;Safe Settings</para>
	 </listitem>
	</itemizedlist>
       </entry>
      </row>
      <row>
       <entry>
	<para><keycap>F6</keycap></para>
       </entry>
       <entry>
	<para>Apply driver update disk</para>
       </entry>
       <entry>
	<para>Driver</para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect2>
  -->

  <sect2 id="sec.deployment.remoteinst.bootinst.custom">
   <title>Using Custom Boot Options</title>
   <para>
    Using the appropriate set of boot options helps facilitate your
    installation procedure. Many parameters can also be configured later
    using the linuxrc routines, but using the boot options is easier. In
    some automated setups, the boot options can be provided with
    <filename>initrd</filename> or an <filename>info</filename> file.
   </para>
   <para>
    The following table lists all installation scenarios mentioned in this
    chapter with the required parameters for booting and the corresponding
    boot options. Just append all of them in the order they appear in this
    table to get one boot option string that is handed to the installation
    routines. For example (all in one line):
   </para>
<screen>install=<replaceable>xxx</replaceable> netdevice<replaceable>=xxx</replaceable> hostip=<replaceable>xxx</replaceable> netmask=<replaceable>xxx</replaceable> vnc=<replaceable>xxx</replaceable> vncpassword=<replaceable>xxx</replaceable>
   </screen>
<!-- from a mail of snwint to research (Boot liveCD ISO without burning a CD?):
I don't know if there's an official way but since it seems to use hwinfo for
finding the cd, you can trick it into using any device as cdrom by adding
'hwprobe=10602:*:*:/dev/foo' as boot option and dd(1) the iso to that
partition.
-->
   <para>
    Replace all the values <replaceable>xxx</replaceable> in this string
    with the values appropriate for your setup.
   </para>
   <table id="tab.deployment.remoteinst.bootinst.custom">
    <title>Installation (Boot) Scenarios Used in This Chapter</title>
    <tgroup cols="3">
<!--<colspec colnum="1" colname="1" colwidth="20"/>
     <colspec colnum="2" colname="2" colwidth="14"/>
     <colspec colnum="3" colname="3" colwidth="46"/>-->
     <thead>
      <row>
       <entry colname="1">
        <para>
         Installation Scenario
        </para>
       </entry>
       <entry colname="2">
        <para>
         Parameters Needed for Booting
        </para>
       </entry>
       <entry colname="3">
        <para>
         Boot Options
        </para>
       </entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="cha.inst"/>
        </para>
       </entry>
       <entry colname="2">
        <para>
         None: system boots automatically
        </para>
       </entry>
       <entry colname="3">
        <para>
         None needed
        </para>
       </entry>
      </row>
<!-- commented for SL10.0
      <row>
      <entry colname="1">
      <para>
      <remark role="generic"> 2005-07-29 - jjaeger: adjust content
      for SL10 </remark> <phrase os="sled"><xref
      linkend="sec.deployment.maninst.network"/></phrase>
     </para>
     </entry>
      <entry colname="2">
       <itemizedlist spacing="compact">
	<listitem>
	 <para>Location of the network installation server</para>
	</listitem>
	<listitem>
	 <para>Network setup if DHCP is not supported</para>
	</listitem>
       </itemizedlist>
      </entry>
      <entry colname="3">
       <itemizedlist spacing="compact">
	<listitem>
	 <para>
	  <filename>install=(nfs,http,&#x200b;ftp,smb)://<replaceable>path_to_instmedia</replaceable></filename>
	 </para>
	</listitem>
	<listitem>
	 <para>
	  <filename>hostip=<replaceable>some_ip</replaceable></filename>
      
	 </para>
	</listitem>
	<listitem>
	 <para>
	  <filename>netmask=<replaceable>some_netmask</replaceable> </filename>
	 </para>
	</listitem>
	<listitem>
	 <para>
	  <filename>gateway=<replaceable>ip_gateway</replaceable> </filename>
	 </para>
	</listitem>
       </itemizedlist>
      </entry>
     </row>
      -->
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.vncstat"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           Network device
          </para>
         </listitem>
         <listitem>
          <para>
           IP address
          </para>
         </listitem>
         <listitem>
          <para>
           Netmask
          </para>
         </listitem>
         <listitem>
          <para>
           Gateway
          </para>
         </listitem>
         <listitem>
          <para>
           VNC enablement
          </para>
         </listitem>
         <listitem>
          <para>
           VNC password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           <filename>install=(nfs,http,&#x200b;ftp,smb)://<replaceable>path_to_instmedia</replaceable></filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>netdevice=<replaceable>some_netdevice</replaceable></filename>
           (only needed if several network devices are available)
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>hostip=<replaceable>some_ip</replaceable> </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>netmask=<replaceable>some_netmask</replaceable>
           </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>gateway=<replaceable>ip_gateway</replaceable>
           </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>vnc=1</filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>vncpassword=<replaceable>some_password</replaceable>
           </filename>
          </para>
         </listitem>
        </itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.vncdyn"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           VNC enablement
          </para>
         </listitem>
         <listitem>
          <para>
           VNC password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           <filename>install=(nfs,http,&#x200b;ftp,smb)://<replaceable>path_to_instmedia</replaceable></filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <literal>vnc=1</literal>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>vncpassword=<replaceable>some_password</replaceable>
           </filename>
          </para>
         </listitem>
        </itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.vncpxe"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           Location of the TFTP server
          </para>
         </listitem>
         <listitem>
          <para>
           VNC enablement
          </para>
         </listitem>
         <listitem>
          <para>
           VNC password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <para>
         Not applicable; process managed through PXE and DHCP
        </para>
       </entry>
      </row>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.sshstat"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           Network device
          </para>
         </listitem>
         <listitem>
          <para>
           IP address
          </para>
         </listitem>
         <listitem>
          <para>
           Netmask
          </para>
         </listitem>
         <listitem>
          <para>
           Gateway
          </para>
         </listitem>
         <listitem>
          <para>
           SSH enablement
          </para>
         </listitem>
         <listitem>
          <para>
           SSH password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           <filename>install=(nfs,http,&#x200b;ftp,smb)://<replaceable>path_to_instmedia</replaceable></filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>netdevice=<replaceable>some_netdevice</replaceable></filename>
           (only needed if several network devices are available)
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>hostip=<replaceable>some_ip</replaceable> </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>netmask=<replaceable>some_netmask</replaceable>
           </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>gateway=<replaceable>ip_gateway</replaceable>
           </filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <literal>usessh=1</literal>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>sshpassword=<replaceable>some_password</replaceable>
           </filename>
          </para>
         </listitem>
        </itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.sshdyn"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           SSH enablement
          </para>
         </listitem>
         <listitem>
          <para>
           SSH password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           <filename>install=(nfs,http,&#x200b;ftp,smb)://<replaceable>path_to_instmedia</replaceable></filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>usessh=1</filename>
          </para>
         </listitem>
         <listitem>
          <para>
           <filename>sshpassword=<replaceable>some_password</replaceable>
           </filename>
          </para>
         </listitem>
        </itemizedlist>
       </entry>
      </row>
      <row>
       <entry colname="1">
        <para>
         <xref linkend="sec.deployment.remoteinst.scenario.sshpxe"/>
        </para>
       </entry>
       <entry colname="2">
        <itemizedlist spacing="compact">
         <listitem>
          <para>
           Location of the installation server
          </para>
         </listitem>
         <listitem>
          <para>
           Location of the TFTP server
          </para>
         </listitem>
         <listitem>
          <para>
           SSH enablement
          </para>
         </listitem>
         <listitem>
          <para>
           SSH password
          </para>
         </listitem>
        </itemizedlist>
       </entry>
       <entry colname="3">
        <para>
         Not applicable; process managed through PXE and DHCP
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <tip>
    <title>More Information about linuxrc Boot Options</title>
    <para>
     Find more information about the linuxrc boot options used for booting a
     Linux system at <ulink url="http://en.opensuse.org/SDB:Linuxrc"/>.
    </para>
   </tip>
  </sect2>
 </sect1>
 <sect1 id="sec.deployment.remoteinst.monitor">
  <title>Monitoring the Installation Process</title>

  <para>
   There are several options for remotely monitoring the installation
   process. If the proper boot options have been specified while booting for
   installation, either VNC or SSH can be used to control the installation
   and system configuration from a remote workstation.
  </para>

  <sect2 id="sec.deployment.remoteinst.monitor.vnc">
   <title>VNC Installation</title>
   <para>
    Using any VNC viewer software, you can remotely control the installation
    of &productname; from virtually any operating system. This section
    introduces the setup using a VNC viewer application or a Web browser.
   </para>
   <sect3 id="sec.deployment.remoteinst.monitor.vnc.prep">
    <title>Preparing for VNC Installation</title>
    <para>
     All you need to do on the installation target to prepare for a VNC
     installation is to provide the appropriate boot options at the initial
     boot for installation (see
     <xref
      linkend="sec.deployment.remoteinst.bootinst.custom"/>). The
     target system boots into a text-based environment and waits for a VNC
     client to connect to the installation program.
    </para>
    <para>
     The installation program announces the IP address and display number
     needed to connect for installation. If you have physical access to the
     target system, this information is provided right after the system
     booted for installation. Enter this data when your VNC client software
     prompts for it and provide your VNC password.
    </para>
    <para>
     Because the installation target announces itself via OpenSLP, you can
     retrieve the address information of the installation target via an SLP
     browser without the need for any physical contact to the installation
     itself, provided your network setup and all machines support OpenSLP:
    </para>
    <procedure id="proc.deployment.remoteinst.monitor.vnc.prep">
     <step>
      <para>
       Start the KDE file and Web browser Konqueror.
      </para>
     </step>
     <step>
      <para>
       Enter <literal>service://yast.installation.suse</literal> in the
       location bar. The target system then appears as an icon in the
       Konqueror screen. Clicking this icon launches the KDE VNC viewer in
       which to perform the installation. Alternatively, run your VNC viewer
       software with the IP address provided and add <literal>:1</literal>
       at the end of the IP address for the display the installation is
       running on.
      </para>
     </step>
    </procedure>
   </sect3>
   <sect3 id="sec.deployment.remoteinst.monitor.vnc.connect">
    <title>Connecting to the Installation Program</title>
    <para>
     Basically, there are two ways to connect to a VNC server (the
     installation target in this case). You can either start an independent
     VNC viewer application on any operating system or connect using a
     Java-enabled Web browser.
    </para>
    <para>
     Using VNC, you can control the installation of a Linux system from any
     other operating system, including other Linux flavors, Windows, or Mac
     OS.
    </para>
    <para>
     On a Linux machine, make sure that the package
     <systemitem>tightvnc</systemitem> is installed. On a Windows machine,
     install the Windows port of this application, which can be obtained at
     the TightVNC home page
     (<ulink url="http://www.tightvnc.com/download.html"/>).
    </para>
    <procedure id="proc.deployment.remoteinst.monitor.vnc.connect.app">
     <para>
      To connect to the installation program running on the target machine,
      proceed as follows:
     </para>
     <step>
      <para>
       Start the VNC viewer.
      </para>
     </step>
     <step>
      <para>
       Enter the IP address and display number of the installation target as
       provided by the SLP browser or the installation program itself:
<!--adjust to standard network example-->
      </para>
<screen><replaceable>ip_address</replaceable>:<replaceable>display_number</replaceable> </screen>
      <para>
       A window opens on your desktop displaying the &yast; screens as in a
       normal local installation.
      </para>
     </step>
    </procedure>
    <para>
     Using a Web browser to connect to the installation program makes you
     totally independent of any VNC software or the underlying operating
     system. As long as the browser application has Java support enabled,
     you can use any browser (Firefox, Internet Explorer, Konqueror, Opera,
     etc.) to perform the installation of your Linux system.
    </para>
    <para>
     To perform a VNC installation, proceed as follows:
    </para>
    <procedure id="proc.deployment.remoteinst.monitor.vnc.connect.brow">
     <step>
      <para>
       Launch your preferred Web browser.
      </para>
     </step>
     <step>
      <para>
       Enter the following at the address prompt:
<!--adjust to standard network example-->
      </para>
<screen>http://<replaceable>ip_address_of_target</replaceable>:5801</screen>
     </step>
     <step>
      <para>
       Enter your VNC password when prompted to do so. The browser window
       now displays the &yast; screens as in a normal local installation.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>

  <sect2 id="sec.deployment.remoteinst.monitor.ssh">
   <title>SSH Installation</title>
   <para>
    Using SSH, you can remotely control the installation of your Linux
    machine using any SSH client software.
   </para>
   <sect3 id="sec.deployment.remoteinst.monitor.ssh.prep">
    <title>Preparing for SSH Installation</title>
    <para>
     Apart from installing the appropriate software package (OpenSSH for
     Linux and PuTTY for Windows), you just need to pass the appropriate
     boot options to enable SSH for installation. See
     <xref linkend="sec.deployment.remoteinst.bootinst.custom"/> for
     details. OpenSSH is installed by default on any &suselinux;&ndash;based
     operating system.
    </para>
   </sect3>
   <sect3 id="sec.deployment.remoteinst.monitor.ssh.connect">
    <title>Connecting to the Installation Program</title>
    <procedure id="proc.deployment.remoteinst.monitor.ssh.connect">
     <step>
      <para>
       Retrieve the installation target's IP address. If you have physical
       access to the target machine, just take the IP address the
       installation routine provides at the console after the initial boot.
       Otherwise take the IP address that has been assigned to this
       particular host in the DHCP server configuration.
      </para>
     </step>
     <step>
      <para>
       At a command line, enter the following command:
      </para>
<screen>ssh -X root&commat;<replaceable><!--adjust to standard network example-->ip_address_of_target</replaceable>
</screen>
      <para>
       Replace <replaceable>ip_address_of_target</replaceable> with the
       actual IP address of the installation target.
      </para>
     </step>
     <step>
      <para>
       When prompted for a username, enter <literal>root</literal>.
      </para>
     </step>
     <step>
      <para>
       When prompted for the password, enter the password that has been set
       with the SSH boot option. After you have successfully authenticated,
       a command line prompt for the installation target appears.
      </para>
     </step>
     <step>
      <para>
       Enter <command>yast</command> to launch the installation program. A
       window opens showing the normal &yast; screens as described in
       <xref linkend="cha.inst"/>.
      </para>
     </step>
    </procedure>
   </sect3>
  </sect2>
 </sect1>
</chapter>
