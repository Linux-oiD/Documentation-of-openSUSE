<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.security">
 <title>Безопасность и конфиденциальность</title><indexterm class="startofrange" id="idx.security">
 <primary>security</primary></indexterm>
 <para>
  Одной из главных характеристик UNIX/Linux систем является возможность обслуживать
  несколько пользователей (многопользовательские системы), а так же предоставлять
  им возможность выполнять несколько задач одновременно (многозадачность).
  Более того, операционная система прозрачна для сети. Пользователи часто даже не
  знают находятся ли данные или программы, которые они используют,
  локально или доступны через сеть.
 </para>
 <para>
  Так как системы многопользовательские, данные разных пользователей должны
  храниться раздельно, а так же должна быть обеспечена их безопасность и приватность.
  Безопасность данных всегда была важной проблемой, и даже до того, как появилась
  возможность объединять компьютеры через сеть. На много большее беспокойство вызывает
  несанкционированный доступ к информации, нежели ее потеря или даже поломка
  носителя информации (например жесткого диска).
 </para>
 <para>
  Этот раздел фокусируется на проблемах конфиденциальности и на способах защиты
  личных пользовательских данных. Концепция безопасности включает в себя
  регулярно обновляемую, рабочую и проверяемую резервную копию, хранящуюся в безопасном
  месте. Без этих мер Вам придется потратить много времени, возвращая информацию&mdash;
  притом не только в случае поломки или дефекта носителя, но и в случае
  несанкционированного доступа.
 </para>
<?dbfo-need height="20em"?>
 <sect1 id="sec.security.general.overview">
  <title>Локальная и сетевая безопасность</title>

  <para>
   Возможны несколько способов доступа к данным:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     личное общение с людьми, имеющим нужную информацию или доступ к данным на компьютере
    </para>
   </listitem>
   <listitem>
    <para>
     напрямую, путем физического доступа к терминалу
    </para>
   </listitem>
   <listitem>
    <para>
     через последовательный интерфейс
    </para>
   </listitem>
   <listitem>
    <para>
     используя сетевое соединение
    </para>
   </listitem>
  </itemizedlist>

  <para>
   В каждом из этих способов пользователь должен пройти проверку подлинности 
   перед тем, как получит доступ к ресурсам или данным о которых идет речь.
   При этом веб сервер может накладывать меньше ограничений, но в любом случае
   Вы вряд ли захотите давать анонимному пользователю доступ к своим личным данным. 
  </para><indexterm>

  <primary>безопасность</primary>

  <secondary>инженерия</secondary></indexterm>

  <para>
   В приведенном выше списке самый первый способ использует наибольшее 
   количество межличностного взаимодействия (например, когда Вы связываетесь с
   сотрудником банка, Вам требуется подтвердить, что Вы являетесь владельцем счета).
   Для этого Вас просят предоставить подпись, ПИН-код или пароль, чтобы 
   удостовериться, что Вы тот, за кого себя выдаете. В некоторых случаях простого
   упоминания уже известных Вам фрагментов и кусочков информации достаточно, чтобы 
   расположить к себе осведомленного человека и выведать ее полностью.
   Ничего не подозревающую жертву можно подвести постепенному раскрытию все больших
   объемов информации. Среди хакеров это называется <emphasis>социальной инженерией</emphasis>.
   Единственной защитой от этого является подготовка людей и осознанное распределение 
   информации.
   Перед взломом компьютерной системы атакующие часто пытаются использовать секретарей,
   обслуживающий персонал компании или даже членов семей ее сотрудников.
   Во многих случаях о такой основанной на социальной инженерии атаке становится известно 
   гораздо позже.
  </para><indexterm>

  <primary>безопасность</primary>

  <secondary>загрузка</secondary></indexterm><indexterm>

  <primary>безопасность</primary>

  <secondary>устройства последовательного доступа</secondary></indexterm>

  <para>
   Человек, желающий получить несанкционированный доступ к Вашим данным, может 
   также попытаться использовать традиционный способ прямого доступа к Вашему 
   компьютеру. Из этого следует, что система должна быть защищена от любых манипуляций, 
   и никто не мог удалить, изменить или повредить ее компоненты. Это относится и к 
   резервным копиям, и даже к сетевым кабелям и кабелям питания. Также необходимо 
   обезопасить этап загрузки, поскольку существует несколько широко распространенных
   клавиатурных комбинаций, способных вызвать нестандарное поведение. Защитите себя от этого,
   установив пароли на BIOS и системный загрузчик.
   <indexterm>
   <primary>безопасность</primary>
   <secondary>загрузка</secondary>
   </indexterm>
  </para>

  <para>
   <indexterm>
   <primary>безопасность</primary>
   <secondary>устройства последовательного доступа</secondary>
   </indexterm> 
   Устройства, подключаемые к последовательным портам повсеместно используются 
   до сих пор. В отличие от сетевых интерфейсов, они не используют сетевых протоколов для 
   взаимодействия с системой, к которой подключены. Для обмена данными
   между устройствами используется обычный кабель или инфракрасный порт, по 
   которому в обе стороны передаются обычные символы. 
   Кабель является самым слабым звеном такой системы: передаваемые по нему данные
   могут быть перехвачены путем подключения к этому кабелю обычного старого принтера. 
   Кроме принтера для перехвата можно использовать все что угодно, в зависимости от
   технической оснащённости атакующего.
  </para>

  <para>
   Чтение локального файла требует дополнительных правил доступа в сравнении с 
   открытием сетевого подключения к другому компьютеру. Существует четкое разграничение
   между локальной и сетевой безопасностью и черта проходит там, где данные
   инкапсулируются в пакеты для отправки куда-либо.
  </para>

  <sect2 id="sec.security.general.overview.local">
   <title>Локальная безопасность</title><indexterm id="idx.security_local" class="startofrange">
   <primary>безопасность</primary>
   <secondary>локальная</secondary></indexterm>
   <para>
    Локальная безопасность начинается с физического окружения того места, где
    установлен Ваш компьютер. Устанавливайте свою машину в  месте, безопасность
    которого соответствует Вашим потребностям и ожиданиям. Главная задача локальной
    безопасности - разделение пользователей таким образом, чтобы ни один из них не 
    смог использовать привилегии или идентификационные данные другого. Это
    наиболее общее правило, которое необходимо соблюдать, и оно особенно 
    касается пользователя <systemitem class="username">root</systemitem>, 
    обладающего привилегиями системного администратора.
    <systemitem class="username">root</systemitem>  может работать от имени
    любого другого локального пользователя не вводя его пароля и читать любые локальные файлы.
   </para>
   <sect3 id="sec.security.general.overview.local.passwords">
    <title>Пароли</title><indexterm id="idx.security_passwords" class="startofrange">
    <primary>безопасность</primary>
    <secondary>пароли</secondary></indexterm>
    <para>
     Linux-система не хранит пароли в текстовом виде, используя для их валидации
     простое сравнение введенного текста с сохраненным образцом.
     Если бы это было так, то все аккаунты системы были бы под угрозой при получении
     кем-либо доступа к соответствующему файлу. Именно поэтому все сохраненные 
     пароли зашифрованы, перед сравнением введенный текст также шифруется, после 
     чего сравниваются две зашифрованных строки. Этот метод будет более безопасным
     только в том случае, если зашифрованный пароль не может быть восстановлен 
     в оригинальную текстовую строку.
    </para>
    <para>
     Это достигается при помощи алгоритма особого рода, так же называемого
     <emphasis>алгоритмом с потайным ходом</emphasis>, поскольку он работает 
     только в одном направлении. Злоумышленник, заполучив Ваш пароль в зашифрованном виде,
     не сможет восстановить его используя этот алгоритм повторно.
     Вместо этого ему придется перебирать все возможные комбинации символов до тех
     пор, пока он не получит комбинацию, которая после шифрования совпадет с 
     зашифрованным паролем. При длине пароля в восемь символов ему прийдется 
     перебрать значительное количество таких комбинаций.
    </para>
    <para>
     В семидесятых годах прошлого века утверждалось, что данный метод безопаснее
     других, поскольку алгоритм работал довольно медленно и на шифрование одного 
     пароля требовалось несколько секунд. Однако в настоящее время компьютеры стали
     достаточно мощными для шифрования сотен тысяч или даже миллионов паролей 
     в секунду. Поэтому даже зашифрованные пароли не должны быть доступны обычному
     пользователю (обычные пользователи не должны иметь доступа к файлу 
     <filename>/etc/shadow</filename>). Еще более важным является невозможность
     угадать пароль в случае, если файл паролей доступен по ошибке.
     Следовательно, <quote>перевод</quote> пароля вида <quote>tantalize</quote> в 
     <quote>t@nt@1lz3</quote> не повышает уровеня безопасности.
    </para>
    <para>
     Замены нескольких букв в слове похожими на них цифрами (наподобие
     записи <quote>tantalize</quote> как <quote>t@nt@1lz3</quote>) недостаточно.
     Программы, использующие словари для взлома паролей, также могут производить
     такие замены. Гораздо лучший способ - составить слово не имеющее смысла ни для кого,
     кроме Вас лично, например из первых букв предложения или названия книги.
     Возьмем к примеру фразу о книге <quote>Имя Розы</quote> Умберто Эко - 
     <quote>The Name of the Rose</quote> by Umberto Eco. В результате получится
     следующий безопасный пароль: <quote>TNotRbUE9</quote>. Напротив, 
     пароли наподобие <quote>beerbuddy</quote> или <quote>jasmine76</quote> 
     могут быть легко подобраны кем-либо, кто знает Вас хоть немного.
    </para><indexterm class="endofrange" startref="idx.security_passwords"/>
   </sect3>
   <sect3 id="sec.security.general.overview.local.boot">
    <title>Процесс загрузки</title><indexterm id="idx.security_booting" class="startofrange">
    <primary>безопасность</primary>
    <secondary>загрузка</secondary></indexterm>
    <para>
     Настройте свою систему так, чтобы ее нельзя было загрузить с 
     дискеты или компакт-диска - либо физически удалив эти устройства,
     либо разрешив в BIOS загрузку только с жесткого диска и установив пароль на BIOS.
     Linux-системы обычно запускаются при помощи системного загрузчика, позволяющего
     передать дополнительные параметры загружаемому ядру. Заблокируйте эту
     возможность для посторонних, установив дополнительный пароль в файле 
     <filename>/boot/grub/menu.lst</filename> (  <xref linkend="cha.grub"/>). 
     Это необходимо для безопасности вашей системы: поскольку ядро стартует с привилегиями 
     <systemitem class="username">root</systemitem>, существует возможность получить 
     привилегии <systemitem class="username">root</systemitem>  при старте системы.
    </para><indexterm class="endofrange" startref="idx.security_booting"/>
   </sect3>
   <sect3 id="sec.security.general.overview.local.permissions">
    <title>Права доступа к файлам</title><indexterm id="idx.security_permissions" class="startofrange">
    <primary>безопасность</primary>
    <secondary>права доступа</secondary></indexterm>
    <para>
     Основным правилом является установка максимально строгих привилегий достаточных для
     выполнения конкретной задачи. Например, нет никакой необходимости использовать
     пользователя <systemitem class="username">root</systemitem> для чтения и отправки
     электронной почты. Любой баг почтовой программы можно использовать для атаки, 
     которая будет произведена с правами доступа этой программы.
     Изложенное выше правило сводит к минимуму потенциальный урон, нанесенный системе
     подобной атакой.
    </para>
    <para>
     Права доступа ко всем файлам входящим в состав дистрибутива &productname; 
     были выбраны очень тщательно. При установке дополнительного программного обеспечения или 
     других файлов системный администратор должен быть очень внимателен, особенно 
     при установке битов доступа. Опытные системные администраторы уделяющие внимание
     безопасности системы, всегда используют опцию <option>-l</option> команды <command>ls</command>
     для получения дополнительной информации о файлах и обнаружении неверно 
     заданных привилегий. Неправильно установленные биты доступа не просто позволяют
     изменять или удалять файлы. Модифицированные файлы могут быть выполнены пользователем
     <systemitem class="username">root</systemitem> или,
     если это конфигурационные файлы, программа может использовать эти файлы с 
     привилегиями <systemitem class="username">root</systemitem>, что 
     значительно увеличивает уязвимость системы. Подобные атаки носят название "кукушкино яйцо",
     поскольку программа (яйцо) выполняется (появляется на свет из скорлупы) у другого пользователя
     (птицы), в точности как кукушка дурачит остальных птиц, подбрасывая им свои яйца.
    </para>
    <para>
     Система &productnamereg; включает в себя файлы
     <filename>permissions</filename>,
     <filename>permissions.easy</filename>,
     <filename>permissions.secure</filename> и
     <filename>permissions.paranoid</filename>, расположенные в директории
     <filename>/etc</filename>. Эти файлы нужны для задания особых привилегий, 
     таких как разрешение всем пользователям изменять директории и установка бита setuser ID 
     (программы с битом setuser ID запускаются не с привилегиями пользователя, а с привилегиями 
     владельца данной программы, в большинсте случаев им является <systemitem class="username">root</systemitem>).
     Администратор системы может использовать файл <filename>/etc/permissions.local</filename> для 
     установки собственных настроек.
    </para>
    <para>
     Чтобы задать какие из вышеперечисленных файлов используются программами конфигурации &productname;
     для установки битов доступа, выберите пункт <guimenu>Локальная безопасность</guimenu> в секции
     <guimenu>Безопасность и пользователи</guimenu> &yast;. Для получения дополнительной информации 
     обратитесь к комментариям <filename>/etc/permissions</filename> или справочному руководству по команде
     <command>chmod</command>
     (<command>man</command>&nbsp;<option>chmod</option>).
    </para><indexterm class="endofrange" startref="idx.security_permissions"/>
   </sect3>
   <sect3 id="sec.security.general.overview.local.bugs">
    <title>Баги переполнения буфера и строки формата</title><indexterm>
    <primary>безопасность</primary>
    <secondary>баги</secondary></indexterm>
    <para>
     Следует быть особенно осторожным в случае, если программе необходимо
     обрабатывать данные, доступные пользователю для изменения.
     Это правило адресовано в первую очередь разработчику программы, а
     не рядовым пользователям. Разработчик должен быть уверен, что его
     приложение корректно обрабатывает данные и не пытается их сохранить в участки
     памяти недостаточного размера. Помимо этого, приложение должно обрабатывать данные
     последовательным образом, используя определенные для этих целей интерфейсы.
    </para>
    <para>
     <emphasis>Переполнение буфера</emphasis> может произойти, если реальный размер буфера
     памяти не учитывается при записи в буфер. Возможна ситуация, когда эти данные
     (созданные пользователем) используют требуют больше памяти, чем ее доступно в
     буфере. В результате при некоторых обстоятельствах вместо обычной обработки 
     введенных пользователем данных их часть, записанная за пределы буфера,
     может быть выполнена. Это мжет быть использовано для выполнения кода заданного
     пользователем, а не программистом. Подобный баг может иметь очень серьезные последствия, 
     особенно при выполнении программ с особыми правами доступа (см
     <xref linkend="sec.security.general.overview.local.permissions"/>).
    </para>
    <para>
     <emphasis>Баги формата строки</emphasis> немного отличаются, но
     суть их по-прежнему в том, что ввод пользователя способен ввести программу в 
     заблуждение. В большинстве случаев эти ошибки могут быть использованы 
     для программ, обладающими особыми привилегиями &mdash;setuid и setgid
     &mdash; таким образом, для защиты системы и данных Вы можете отменить
     соответствующие привилегии для программ. Повторимся, политика предоставления
     наименьших возможных привилегий является наилучшей (см.
     <xref linkend="sec.security.general.overview.local.permissions"/>).
    </para>
    <para>
     Поскольку баги переполнения буфера и строки формата относятся к 
     обработке пользовательских данных, они могут быть использованы не только 
     пользователем, имеющим локальный доступ. Множество известных багов можно было
     воспроизвести как локально, так и по сети (например, используя особым образом 
     сформированную ссылку). Соответственно, баги строки формата и переполнения буфера
     следует классифицировать как относящиеся и к локальной и к сетевой безопасности.
    </para>
   </sect3>
   <sect3 id="sec.security.general.overview.local.virus">
    <title>Вирусы</title><indexterm>
    <primary>безопасность</primary>
    <secondary>вирусы</secondary></indexterm>
    <para>
     Вопреки распространенному мнению, существуют вирусы работающие под Linux.
     Однако, известные вирусы были написаны своими авторами в качестве
     <emphasis>доказательства концепции</emphasis>, что техника работает 
     по назначению. До настоящего времени ни один из этих вирусов не был обнаружен
     в <emphasis>дикой природе</emphasis>.
    </para>
    <para>
     Вирусы не могут существовать и распространяться без своего хозяина.
     Хозяином может быть программа или важное хранилище системы, такое как
     основная загрузочная запись, для записи в которую код вируса должен 
     иметь соответствующие привилегии. Благодаря своим многопользовательским 
     возможностям, Linux позволяет ограничить доступ на запись к пределенным файлам 
     (это особенно важно для файлов системы). таким образом, если Вы имеете привычку
     работать с привилегиями <systemitem class="username">root</systemitem>,
     вы увеличиваете шансы системы быть зараженной вирусом. И напротив, 
     следование упомянутому выше принципу наименьших возможных привилегий, 
     значительно снижает такую возможность.
    </para>
    <para>
     Кроме того, никогда не торопитесь запускать программу, скачанную с 
     первого попавшегося интернет сайта. RPM пакеты &productname;
     содержать криптографическую подпись, как знак того, что они были собраны с
     должным вниманием. Наличие вирусов является типичным признаком того,
     что администратор или пользователь не обладают достаточными знаниями о безопасности,
     поскольку им удалось подвергнуть риску систему, спроектированную с высоким 
     уровнем безопасности.
    </para>
    <para>
     Не следует путать вирусы с червями, принадлежащими исключительно к миру
     сетей. Отличие состоит в том, что червю не нужен хозяин для распространения.
    </para><indexterm class="endofrange" startref="idx.security_local"/>
   </sect3>
  </sect2>

  <sect2 id="sec.security.general.overview.network">
   <title>Сетевая безопасность</title><indexterm id="idx.security_network" class="startofrange">
   <primary>безопасность</primary>
   <secondary>сеть</secondary></indexterm>
   <para>
    Сетевая безопасность важна для защиты от атак, источник которых
    находится за пределами сети. Типичная процедура входа в систему, требующая 
    для авторизации имени пользователя и пароля, все так же является объектом
    локальной безопасности. В частном случае удаленного входа в систему
    следует отмечать два аспекта безопасности. Все, что происходит до входа в систему,
    относится к сетевой безопасности, а все, что происходит после - к локальной.
   </para>
   <sect3 id="sec.security.general.overview.network.x11">
    <title>Система X Window и авторизация в X</title><indexterm>
    <primary>безопасность</primary>
    <secondary>X</secondary></indexterm><indexterm>
    <primary>X</primary>
    <secondary>безопасность</secondary></indexterm>
    <para>
     Как упоминалось в самом начале, сетевая прозрачность - одна из центральных 
     характеристик систем семейства UNIX. X, оконная система UNIX систем,
     пользуется этой собенностью для достижения довольно внушительного эффекта.
     С помощью X абсолютно несложно подключиться к удаленному компьютеру и 
     запустить программу с графическим интерфейсом, которая затем будет отправлена
     по сети и отображена на Вашем компьютере.
    </para>
    <para>
     Когда клиент X требуется отобразить удаленно используя X сервер, 
     последний должен защищать свои ресурсы (экран) от несанкционированного
     доступа. Точнее,клиентская программа должна обладать строго заданными
     правами доступа. С помощью системы X Window это может быть реализовано 
     двумя способами: доступ, основанный на хосте или доступ, основанный на 
     cookie. Первый полагается на IP адрес хоста, где запущена клиентская программа.
     Для управления им используется программа xhost. xhost
     сохраняет IP адреса имеющих доступ клиентов,  в базу данных X сервера.
     Однако полагаться на IP адреса для авторизаации не слишком безопасно.
     К примеру, если на клиентском компьютере работает еще один пользователь,
     то он также получит доступ к X серверу &mdash; точно также, как любой, кто присвоит
     себе IP этого компьютера. Вследствие изложенных выше недостатков этот метод не
     будет детально описан в данном руководстве, однако Вы можете воспользоваться
     <command>man</command>&nbsp;<option>xhost</option> для получения более подробной 
     информации.
    </para>
    <para>
     В случае управления доступом при помощи cookie, генерируется строка символов, 
     известная только X серверу и авторизованному пользователю, подобно любой
     идентификационной карте. Эта cookie сохраняется после логина в файле
     <filename>.Xauthority</filename> в домашнем каталоге пользователя и 
     доступна любому X клиенту, желающему воспользоваться X сервером
     для отображения окна. Файл <filename>.Xauthority</filename> может быть
     исследован пользователем при помощи утилиты <command>xauth</command>. Если Вы
     переименуете <filename>.Xauthority</filename>, или удалите этот файл из Вашей
     домашней директории, то больше не сможете открыть новых окон или X клиентов.
    </para>
    <para>
     SSH (безопасная оболочка) может быть использована для полного шифрования 
     сетевого соединения и прозрачной переадресации его X серверу, 
     без вмешательства пользователя в механизм шифрования.
     Также это называется X forwarding. X forwarding достигается имитацией X сервера на 
     серверной стороне и установкой переменной DISPLAY для оболочки на удаленном компьютере.
     Больше информации о SSH можно найти в главе <xref linkend="cha.ssh"/>.
    </para>
    <warning>
     <para>
      Если Вы не считаете безопасным удаленный компьютер, к которому подключены,
      не используйте X forwarding. Будучи включенным, он позволяет авторизоваться 
      используя Ваше SSH соединения для проникновения на Ваш X сервер и 
      произвести различные манипуляции (чтение, сниффинг, например того, что Вы печатаете на 
      клавиатуре).
     </para>
    </warning>
   </sect3>
   <sect3 id="sec.security.general.overview.network.bugs">
    <title>Баги переполнения буфера и строки формата</title><indexterm>
    <primary>безопасность</primary>
    <secondary>баги</secondary></indexterm>
    <para>
     Как обсуждалось в 
     <xref linkend="sec.security.general.overview.local.bugs"/>, баги переполнения
     буфера и строки формата должны классифицироваться, как имеющие отношение 
     и к локальной, и к сетевой безопасности. Подобно локальному варианту,
     переполнение буфера в сетевых программах преимущественно может быть использовано
     злоумышленником для получения привилегий <systemitem class="username">root</systemitem>.
     Даже если эта попытка не будет успешна, атакующий может использовать баг
     для получения доступа к непривилегированному локальному аккаунту и дальнейшего
     поиска других уязвимостей, которые возможно присутствуют в системе.
    </para>
    <para>
     Использование багов переполнения буфера и строки формата по сети &mdash;
     наиболее часто встречающаяся разновидность удаленных атак. Эксплоиты &mdash;
     программы, использующие вновь найденные уязвимости &mdash; часто публикуются в
     почтовых рассылках посвященных безопасности. Они могут быть использованы 
     для попытки проникновения в систему без знания подробностей конкретной 
     уязвимости. Опыт многих лет доказал, что доступность кода эксплоитов
     помогла операционным системам стать более безопасными, очевидно благодаря
     тому, что именно они принуждают создателей операционных систем исправлять
     проблемы в своих программах. В свободном программном обеспечении каждый,
     кто имеет доступ к исходным кодам (&productname; поставляется со всеми
     доступными исходными кодами) и каждый, кто найдет уязвимость и код, ее 
     эксплуатирующий, могут предложить патчи для исправления соответствующего бага.
    </para>
   </sect3>
   <sect3 id="sec.security.general.overview.network.dos">
    <title>Отказ в обслуживании</title><indexterm id="idx.security_attacks" class="startofrange">
    <primary>безопасность</primary>
    <secondary>атаки</secondary></indexterm>
    <para>
     Целью атаки типа отказ в обслуживании (DoS) является блокирование
     программы-сервера или всей системы, что может быть достигнуто разными
     путями: повышенной нагрузкой на сервер, удержанием его в состоянии 
     занятости путем отправки пакетов с мусором или использованием переполнения
     его буфера. Чаще всего единственной целью DoS атаки является исчезновение 
     обслуживания сервером. Тем не менее, поскольку сервер становится недоступным, 
     появляется возможность также использовать другие виды атак: 
     <emphasis><quote>человек посередине</quote></emphasis>
     (прослушивание, перехват TCP соединения, спуфинг) и подмена DNS.
    </para>
   </sect3>
   <sect3 id="sec.security.general.overview.network.mitm">
    <title><quote>Человек посередине</quote></title>
    <para>
     Любая сетевая атака, при которой атакующий находится между взаимодействующими
     устройствами, называется атакой типа <emphasis><quote>человек посередине</quote></emphasis> 
     (a man-in-the-middle). Общим между ними является то, что жертва атаки обычно
     ничего не подозревает. Существует много вариантов - например, атакующий может
     принять запрос на соединение и затем перенаправить его адресату. В результате
     жертва непреднамеренно устанавливает соединение не с тем компьютером,
     поскольку другая сторона ведет себя как компьютер с которым изначально 
     предполагалось соединение.
    </para>
    <para>
     Простейшая форма атаки <quote>человек посередине</quote> называется  
     <emphasis>сниффер</emphasis> (атакующий <quote>просто</quote>
     прослушивает проходящий сетевой траффик). В качестве более сложного вида,
     атаки <quote>человек посередине</quote> может попробовать перехватить
     уже установленное соединение (это называется hijacking). Для этого
     атакующему необходимо некоторое время анализировать пакеты некоторое время,
     чтобы ему удалось предсказать последовательность чисел TCP
     принадлежащих соединению. Когда атакующий окончательно берет на себя роль 
     целевой машины, жертвы узнают это, поскольку они получают сообщение
     говорящее о прекращении соединения из-за ошибки. Факт существования 
     не защищенных от перехвата путем шифрования протоколов (производящих 
     только обычную процедуру авторизации при установлении соединения) только 
     упрощает задачу злоумышленника. 
    </para>
    <para>
     <emphasis>Спуфинг</emphasis> (spoofing) это атака при которой в пакетах 
     подменяются первоначальные данные, обычно IP адрес. Наиболее активные формы атаки полагаются на
     рассылку таких поддельных пакетов (на Linux-машине, это может быть сделано только
     суперпользователем (<systemitem class="username">root</systemitem>)).
    </para>
    <para>
     Многие из упомянутых атак используются в сочетании с DoS. Если атакующий видит
     возможность внезапно положить определенный хост, даже на короткий промежуток
     времени, это может помочь ему в проведении активной атаки, т.к. хост не 
     будет вмешиваться в трафик некоторое время.
    </para>
   </sect3>
   <sect3 id="sec.security.general.overview.network.dns">
    <title>Подмена DNS</title><indexterm>
    <primary>DNS</primary>
    <secondary>безопасность</secondary></indexterm><indexterm>
    <primary>безопасность</primary>
    <secondary>DNS</secondary></indexterm>
    <para>
     Подмена DNS (также называемая атакой Каминского) производится путем повреждения 
     целостности данных в кеше DNS сервера. Отвечая на запросы DNS сервера
     подмененными пакетами можно заставить его послать определенные данные жертве,
     которая запрашивает информацию с этого сервера. Многие из серверов 
     доверяют другим хостам, основываясь на именах или IP адресах. 
     Атакующему необходимы знания о структуре доверительных отношений 
     между хостами, для того, чтобы замаскироваться под авторитетный хост.
     Обычно для получения этой информации анализируются некоторые пакеты, полученные
     от сервера. Помимо этого, атакующему часто необходима хорошо спланированная по
     времени DoS атака на сервер имен. Для защиты используйте зашифрованные соединения
     с проверкой подлинности хоста, к которому происходит подключение.
    </para>
   </sect3>
   <sect3 id="sec.security.general.overview.network.worms">
    <title>Черви</title><indexterm>
    <primary>безопасность</primary>
    <secondary>черви</secondary></indexterm>
    <para>
     Несмотря на очевидную разницу, червей часто путают с вирусами. В отличие
     от вируса, червю для распространения не требуется заражение находящейся на хосте программы. Они специализируются
     на максимально быстром распространении в сетевых структурах. Черви прошлого, 
     такие как Ramen, Lion и Adore использовали известные дыры безопасности серверных
     программ, таких как bind8 и lprNG. Защититься от червей относительно легко.
     При условии что между обнаружением проблемы в безопасности и моментом,
     когда червь достигнет Вашего сервера, должно пройти некоторое время, шансы
     получить обновленную версию программы до этого момента весьма высоки. Поэтому важно 
     регулярно устанавливать обновления безопасности.
     <indexterm class="endofrange" startref="idx.security_attacks"/>
     <indexterm class="endofrange" startref="idx.security_network"/>
    </para>
   </sect3>
  </sect2>
 </sect1>
 <sect1 id="sec.security.general.tips">
  <title>Общие советы и хитрости безопасности</title><indexterm>

  <primary>безопасность</primary>

  <secondary>советы и хитрости</secondary></indexterm>

  <remark condition="clarity"> 2007-07-27 - jjaeger: please use profiling for mailinglists and
   websites if they change from SLE to opensuse, next time. </remark>

  <para>
   Для соблюдения безопасности важно придерживаться определенных правил.
   Следующий список правил может быть взят за основу:
  </para>
  <remark>2011-03-17 jw: Most users are surprised to find plain text copies of a password in their home.
  Should we explain when that happens, and how to avoid it? E.g. .netrc, .subversion/auth/*, .oscrc, et al.
  </remark>

  <itemizedlist>
   <listitem>
    <para>
     Принимайте и устанавливайте пакеты, содержащие обновления безопасности   
     максимально быстро.
    </para>
   </listitem>
   <listitem>
    <para>
     Следите за последними проблемами безопасности:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       <ulink url="opensuse-security-announce@opensuse.org"/> это почтовая
       рассылка &suse; посвященная новостям безопасности. Этот источник предлагает из первых рук
       информацию об обновлениях пакетов и новых участниках команды безопасности из
       числа активных контрибьюторов. На эту рассылку Вы можете подписаться на 
       странице <ulink
      url="http://en.opensuse.org/Communicate/Mailinglists"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       Бюллетень безопасности &suse; доступен в виде новостной ленты по адресу
       <ulink
        url="http://www.novell.com/linux/security/suse_security.xml"/>.
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="bugtraq@securityfocus.com"/> одна из самых известных
       рассылок посвященных безопасности. Рекомендуется следить за этой рассылкой, 
       в которую приходит от 15 до 20 сообщений в день. Подробнее о ней можно 
       узнать здесь <ulink url="http://www.securityfocus.com"/>.
      </para>
     </listitem>
    </itemizedlist>
   </listitem>
   <listitem>
    <para>
     Обсуждайте любые интересующие Вас проблемы безопасности в нашей
     рассылке <ulink url="opensuse-security@opensuse.org"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     Согласно правилу использования наименьших необходимых для работы прав 
     доступа, избегайте выполнения своих ежедневных задач от пользователя 
     <systemitem class="username">root</systemitem>. Это уменьшает риск
     получения <quote>кукушкиного яйца</quote> или вируса и защищает Вас от
     Ваших собственных ошибок.
    </para>
   </listitem>
   <listitem>
    <para>
     Если возможно, всегда используйте зашифрованное соединение для 
     работы на удаленной машине. Использование <command>ssh</command> 
     (secure shell) в качестве замены <command>telnet</command>, <command>ftp</command>,
     <command>rsh</command>, и <command>rlogin</command> должно стать
     повседневной практикой.
    </para>
   </listitem>
   <listitem>
    <para>
     Избегайте методов аутентификации основанных исключительно на IP адресах.
    </para>
   </listitem>
   <listitem>
    <para>
     Пытайтесь содержать в актуальном состоянии самые важные пакеты системы, 
     относящиеся к сети и подпишитесь на соответствующие рассылки безопасности,
     чтобы получать уведомления о новых версиях этих программ (bind, postfix, 
     ssh, etc.) Это же касается программ, относящихся к локальной безопасности.
    </para>
   </listitem>
   <listitem><indexterm>
    <primary>файлы конфигурации</primary>
    <secondary>права доступа</secondary></indexterm>
    <para>
     Измените файл <filename>/etc/permissions</filename>  для оптимизации
     прав доступа к существенным для безопасности Вашей системы файлам.
     Если Вы удалите у программы бит setuid вполне может оказаться, что она 
     не сможет работать так, как задумано. С другой стороны в большинстве случаев
     такая программа должна считаться потенциальной проблемой для безопасности. 
     Это правило также применимо к доступным для всех на запись директориям и файлам.
    </para>
   </listitem>
   <listitem>
    <para>
     Запретите абсолютно все сетевые сервисы, которые не являются необходимыми
     для работы Вашего сервера. Это сделает Вашу систему менее уязвимой.
     Открытые порты с сокетами в статусе LISTEN, можно обнаружить программой
     <literal>netstat</literal>. Что касается опций, рекомендуется использовать
     <command>netstat</command>&nbsp;<option>-ap</option> или
     <command>netstat</command>&nbsp;<option>-anp</option>. Опция
     <option>-p</option> позволяет узнать, какой процесс занимает порт под
     каким именем.
    </para>
    <para>
     Сравнивайте результаты <literal>netstat</literal> с результатами работы 
     внешнего сканера портов. Для этого прекрасно подойдет <literal>nmap</literal>,
     которая не только проверит порты Вашего компьютера, а также сделает 
     некоторые заключения о службах, которые их используют. Однако 
     сканирование портов может быть интерпретировано как акт агрессии, 
     поэтому не производите его без ведома администратора системы.
     И наконец помните, что важно сканировать не только 
     TCP порты, но и  UDP порты (опции <option>-sS</option> и <option>-sU</option>).
    </para>
   </listitem>
   <listitem>
    <para>
     Для надежного контроля целостности файлов Вашей системы используйте 
     программу <literal>AIDE</literal> (Advanced Intrusion Detection
     Environment), доступную в &productname;. Во избежание подделки 
     зашифруйте созданную AIDE базу данных. Более того, храните резервную
     копию этой базы данных подальше от своего компьютера, на внешнем недоступном 
     по сети носителе.
    </para>
   </listitem>
   <listitem>
    <para>
     Будьте внимательны при установке стороннего программного обеспечения,
     Известнен случай, когда хакер встроил троянского коня в архив пакета
     с программой, к счастью это быстро обнаружили. Устанавливайте бинарные
     пакеты только в случае если у Вас нет сомнений в сайте с которого Вы его 
     скачали.
    </para><indexterm>
    <primary>безопасность</primary>
    <secondary>подпись RPM</secondary></indexterm><indexterm>
    <primary>RPM</primary>
    <secondary>безопасность</secondary></indexterm>
    <para>
     RPM пакеты &suse; подписаны gpg. Ключ, использованный &suse; для 
     подписи:
    </para>
<screen>ID:9C800ACA 2000-10-19 SUSE Package Signing Key &lt;build@suse.de&gt;
     Key fingerprint = 79C1 79B2 E1C8 20C1 890F 9994 A84E DAE8 9C80 0ACA</screen>
    <para>
     Команда <command>rpm</command>&nbsp;<option>--checksig
     package.rpm</option> показывает верна ли контрольная сумма и подпись пакета, 
     который Вы собираетесь установить. Вы можете найти ключ на первом CD 
     дистрибутива и на большинстве серверов ключей по всему миру.
    </para>
   </listitem>
   <listitem>
    <para>
     Регулярно проверяйте бекапы пользовательских и системных файлов. Учтите, что 
     если Вы не проверите работоспособность произведенного бекапа, он может оказаться 
     бесполезным в критической ситуации.
    </para>
   </listitem>
   <listitem>
    <para>
     Проверяйте логи. При возможности напишите небольшой скрипт для поиска подозрительных
     записей. Возможно это не такая уж простая задача. В конце концов, только Вам
     известно, какие записи подозрительны, а какие - нет.
    </para>
   </listitem>
   <listitem>
    <para>
     Используйте <literal>tcp_wrapper</literal> для ограничения доступа к определенным службам
     Вашей машины и управления IP адресами, которым разрешено подключение к конкретным службам.
     Для подробной информации о <literal>tcp_wrapper</literal> обратитесь к справочному 
     руководству по tcpd и hosts_access (<command>man</command>&nbsp;<option>8
     tcpd</option>,
     <command>man</command>&nbsp;<option>hosts_access</option>).
    </para><indexterm>
    <primary>безопасность</primary>
    <secondary>tcpd</secondary></indexterm>
   </listitem>
   <listitem>
    <para>
     Используйте SuSEfirewall для усиления безопасности обеспечиваемой
     <literal>tcpd</literal> (<literal>tcp_wrapper</literal>).
    </para>
   </listitem>
   <listitem>
    <para>
     Создавайте свои меры безопасности так, чтобы они были избыточными:
     сообщение, выводимое дважды, лучше, чем отсутствие сообщения вообще.
    </para>
   </listitem>
   <listitem>
    <para>
     Если Вы используете гибернацию с сохранением на диск, рассмотрите возможность
     шифрования файла гибернации с помощью скрипта 
     <command>configure-suspend-encryption.sh</command>. Эта программа создает ключ, 
     копирует его в <filename>/etc/suspend.key</filename> и изменяет
     <filename>/etc/suspend.conf</filename> для шифрования файла гибернации.
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 id="sec.security.general.report">
  <title>Использование Центрального адреса для сообщений о безопасности</title><indexterm>

  <primary>безопасность</primary>

  <secondary>сообщение о проблемах</secondary></indexterm>

  <para>
   Если Вы обнаружите проблему связанную с безопасностью (пожалуйста, сначала
   проверьте наличие обновлений для соответствующего пакета), напишите имейл 
   <ulink url="security@suse.de"/>. Пожалуйста, включите подробное описание 
   проблемы и номер версии соответствующего пакета. &suse; пришлет Вам ответ
   настолько быстро, насколько это возможно. Мы рекомендуем шифровать 
   сообщения при помощи pgp. Pgp ключ &suse;:
  </para>

<screen>ID:3D25D3D9 1999-03-06 SUSE Security Team &lt;security@suse.de&gt;
Key fingerprint = 73 5F 2E 99 DF DB 94 C4 8F 5A A3 AE AF 22 F2 D5</screen>

  <para>
   Этот ключ также доступен для загрузки по адресу
   <ulink
    url="http://www.novell.com/linux/security/securitysupport.html"/>.
  </para><indexterm class="endofrange" startref="idx.security"/>
 </sect1>
</chapter>
