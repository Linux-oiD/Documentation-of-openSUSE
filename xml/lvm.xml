<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<sect1 id="sec.yast2.system.lvm">
 <title>LVM Configuration</title><indexterm>

 <primary>&yast;</primary>

 <secondary>LVM</secondary></indexterm><indexterm>

 <primary>LVM</primary>

 <secondary>&yast;</secondary></indexterm><indexterm>

 <primary>Logical Volume Manager</primary>

 <see>LVM</see></indexterm>

 <para>
  This section briefly describes the principles behind the Logical Volume
  Manager (LVM) and its multipurpose features. In
  <xref linkend="sec.yast2.system.lvm.yast"/>, learn how to set up LVM with
  &yast;.
 </para>

 <warning>
  <para>
   Using LVM is sometimes associated with increased risk such as data loss.
   Risks also include application crashes, power failures, and faulty
   commands. Save your data before implementing LVM or reconfiguring
   volumes. Never work without a backup.
  </para>
 </warning>

 <sect2 id="sec.yast2.system.lvm.explained">
  <title>The Logical Volume Manager</title>
  <para>
   The LVM enables flexible distribution of hard disk space over several
   file systems. It was developed because sometimes the need to change the
   segmenting of hard disk space arises just after the initial partitioning
   has been done. Because it is difficult to modify partitions on a running
   system, LVM provides a virtual pool (volume group, VG for short) of
   memory space from which logical volumes (LVs) can be created as needed.
   The operating system accesses these LVs instead of the physical
   partitions. Volume groups can occupy more than one disk, so that several
   disks or parts of them may constitute one single VG. This way, LVM
   provides a kind of abstraction from the physical disk space that allows
   its segmentation to be changed in a much easier and safer way than with
   physical repartitioning. Background information regarding physical
   partitioning can be found in <xref linkend="sec.IB.part.typen"/> and
   <xref linkend="sec.yast2.i_y2_part_expert"/>.
  </para>
  <figure id="fig.lvm.explained.schematic">
   <title>Physical Partitioning versus LVM</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="lvm.svg" width="75%" format="SVG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="lvm.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   <xref linkend="fig.lvm.explained.schematic"/> compares physical
   partitioning (left) with LVM segmentation (right). On the left side, one
   single disk has been divided into three physical partitions (PART), each
   with a mount point (MP) assigned so that the operating system can gain
   access. On the right side, two disks have been divided into two and three
   physical partitions each. Two LVM volume groups (VG&nbsp;1 and VG&nbsp;2)
   have been defined. VG&nbsp;1 contains two partitions from DISK&nbsp;1 and
   one from DISK&nbsp;2. VG&nbsp;2 contains the remaining two partitions
   from DISK&nbsp;2. In LVM, the physical disk partitions that are
   incorporated in a volume group are called physical volumes (PVs). Within
   the volume groups, four LVs (LV&nbsp;1 through LV&nbsp;4) have been
   defined. They can be used by the operating system via the associated
   mount points. The border between different LVs do not need to be aligned
   with any partition border. See the border between LV&nbsp;1 and LV&nbsp;2
   in this example.
  </para>
  <para>
   LVM features:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Several hard disks or partitions can be combined in a large logical
     volume.
    </para>
   </listitem>
   <listitem>
    <para>
     Provided the configuration is suitable, an LV (such as
     <filename>/usr</filename>) can be enlarged if free space is exhausted.
    </para>
   </listitem>
   <listitem>
    <para>
     With LVM, it is possible to add hard disks or LVs in a running system.
     However, this requires hot-swappable hardware.
    </para>
   </listitem>
   <listitem>
    <para>
     It is possible to activate a "striping mode" that distributes the data
     stream of a LV over several PVs. If these PVs reside on different
     disks, the read and write performance is enhanced, as with RAID&nbsp;0.
    </para>
   </listitem>
   <listitem>
    <para>
     The snapshot feature enables consistent backups (especially for
     servers) of the running system.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   With these features, LVM is ready for heavily used home PCs or small
   servers. LVM is well-suited for the user with a growing data stock (as in
   the case of databases, music archives, or user directories). This would
   allow file systems that are larger than the physical hard disk. Another
   advantage of LVM is that up to 256 LVs can be added. However, working
   with LVM is different from working with conventional partitions.
   Instructions and further information about configuring LVM is available
   in the official LVM HOWTO at
   <ulink url="http://tldp.org/HOWTO/LVM-HOWTO/"/>.
  </para>
  <para>
   Starting from Kernel version&nbsp;2.6, LVM version&nbsp;2 is available,
   which is backward-compatible with the previous LVM and enables the
   continued management of old volume groups. When creating new volume
   groups, decide whether to use the new format or the backward-compatible
   version. LVM&nbsp;2 does not require any kernel patches. It makes use of
   the device mapper integrated in kernel 2.6. This kernel only supports LVM
   version&nbsp;2. Therefore, when talking about LVM, this section always
   refers to LVM version&nbsp;2.
  </para>
<!-- 2008-09-30, bg: EVMS is dead.
  <para os="sles">
   Instead of LVM&nbsp;2, you can use EVMS (Enterprise Volume Management
   System), which offers a uniform interface for logical volumes and RAID
   volumes. Like LVM&nbsp;2, EVMS
   makes use of the device mapper in kernel 2.6.
  </para> -->
 </sect2>

 <sect2 id="sec.yast2.system.lvm.yast">
  <title>LVM Configuration with &yast;</title>
  <para>
   The &yast; LVM configuration can be reached from the &yast; Expert
   Partitioner (see <xref linkend="sec.yast2.i_y2_part_expert"/>) within the
   <guimenu>Volume Management</guimenu> item in the <guimenu>System
   View</guimenu> pane. The Expert Partitioner allows you to edit and delete
   existing partitions and also create new ones that need to be used with
   LVM. The first task is to create PVs that provide space to a volume
   group:
  </para>
  <procedure>
   <step>
    <para>
     Select a hard disk from <guimenu>Hard Disks</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Change to the <guimenu>Partitions</guimenu> tab.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Add</guimenu> and enter the desired size of the PV on
     this disk.
    </para>
   </step>
   <step>
    <para>
     Use <guimenu>Do not format partition</guimenu> and change the
     <guimenu>File System ID</guimenu> to <guimenu>0x8E Linux LVM</guimenu>.
     Do not mount this partition.
    </para>
   </step>
   <step>
    <para>
     Repeat this procedure until you have defined all the desired physical
     volumes on the available disks.
    </para>
   </step>
  </procedure>
  <sect3>
   <title>Creating Volume Groups</title>
   <para>
    If no volume group exists on your system, you must add one (see
    <xref linkend="fig.lvm.yast.volgrp"/>). It is possible to create
    additional groups by clicking on <guimenu>Volume Management</guimenu> in
    the <guimenu>System View</guimenu> pane, and then on <guimenu>Add Volume
    Group</guimenu>. One single volume group is usually sufficient.
   </para>
   <procedure>
    <step>
     <para>
      Enter a name for the VG, for example, <literal>system</literal>.
     </para>
    </step>
    <step>
     <para>
      Select the desired <guimenu>Physical Extend Size</guimenu>. This value
      defines the size of a physical block in the volume group. All the disk
      space in a volume group is handled in blocks of this size.
     </para>
     <tip>
      <title>Logical Volumes and Block Sizes</title>
      <para>
       The possible size of an LV depends on the block size used in the
       volume group. The default is 4&nbsp;MB and allows for a maximum size
       of 256 GB for physical and LVs. The physical size should be
       increased, for example, to 8, 16, or 32&nbsp;MB, if you need LVs
       larger than 256 GB.
      </para>
     </tip>
    </step>
    <step>
     <para>
      Add the prepared PVs to the VG by selecting the device and clicking on
      <guimenu>Add</guimenu>. Selecting several devices is possible by
      holding <keycap>Ctrl</keycap> while selecting the devices.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Finish</guimenu> to make the VG available to further
      configuration steps.
     </para>
    </step>
   </procedure>
   <figure id="fig.lvm.yast.volgrp">
    <title>Creating a Volume Group</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_lvm4.png" width="50%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_lvm4.png" width="50%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    If you have multiple volume groups defined and want to add or remove
    PVs, select the volume group in the <guimenu>Volume Management</guimenu>
    list. Then change to the <guimenu>Overview</guimenu> tab and select
    <guimenu>Resize</guimenu>. In the following window, you can add or
    remove PVs to the selected volume group.
   </para>
  </sect3>
  <sect3>
   <title>Configuring Logical Volumes</title>
   <para>
    After the volume group has been filled with PVs, define the LVs which
    the operating system should use in the next dialog. Choose the current
    volume group and change to the <guimenu>Logical Volumes</guimenu> tab.
    <guimenu>Add</guimenu>, <guimenu>Edit</guimenu>,
    <guimenu>Resize</guimenu>, and <guimenu>Delete</guimenu> LVs as needed
    until all space in the volume group has been occupied. Assign at least
    one LV to each volume group.
   </para>
   <figure id="fig.lvm.yast.mgmt">
    <title>Logical Volume Management</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_lvm6.png" width="75%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_lvm6.png" width="75%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    Click <guimenu>Add</guimenu> and go through the wizard-like pop-up that
    opens:
   </para>
   <orderedlist>
    <listitem>
     <para>
      Enter the name of the LV. For a partition that should be mounted to
      <filename>/home</filename>, a self-explanatory name like
      <literal>HOME</literal> could be used.
     </para>
    </listitem>
    <listitem>
     <para>
      Select the size and the number of stripes of the LV. If you have only
      one PV, selecting more than one stripe is not useful.
     </para>
    </listitem>
    <listitem>
     <para>
      Choose the filesystem to use on the LV as well as the mount point.
     </para>
    </listitem>
   </orderedlist>
   <para>
    By using stripes it is possible to distribute the data stream in the LV
    among several PVs (striping). However, striping a volume can only be
    done over different PVs, each providing at least the amount of space of
    the volume. The maximum number of stripes equals to the number of PVs,
    where Stripe "1" means "no striping". Striping only makes sense with PVs
    on different hard disks, otherwise performance will decrease.
   </para>
   <warning>
    <title>Striping</title>
    <para>
     &yast; cannot, at this point, verify the correctness of your entries
     concerning striping. Any mistake made here is apparent only later when
     the LVM is implemented on disk.
    </para>
   </warning>
   <para>
    If you have already configured LVM on your system, the existing logical
    volumes can also be used. Before continuing, assign appropriate mount
    points to these LVs. With <guimenu>Finish</guimenu>, return to the
    &yast; Expert Partitioner and finish your work there.
   </para>
  </sect3>
<!-- 2008-10-01, bg: could not find that module. It probably vanished. 
  <sect3>
   <title>Direct LVM Management</title>

   <para>
    If you already have configured LVM and only want to change something, there
    is an alternative way to do that. In the &yast; Control Center, select
    <menuchoice><guimenu>System</guimenu><guimenu>LVM</guimenu></menuchoice>.
    Basically this dialog allows the same actions as described above with the
    exception of physical partitioning. It shows the existing PVs
    and logical volumes in two lists and you can manage your LVM&nbsp;system
    using the methods already described.
   </para>
  </sect3> -->
 </sect2>

<!-- 2008-09-30, bg: evms iѕ dead. we go one step back to lvm2. The only thing that could
 matter for sles is, that we need compatibility links to /dev/evms/? 
 <sect2 os="sles">
  <title>Storage Management with EVMS</title>

  <para>
   The Enterprise Volume Management System 2 (EVMS2) is a rich, extensible
   volume manager with built-in cluster awareness. Its plug-in framework
   allows plug-ins to add functionality for support and knowledge of any
   partition type. Being cluster-aware, EVMS2 guarantees that managed
   devices are named identically on each node in the cluster for easier
   management.
  </para>
  <para>
   EVMS2 provides a unified interface (<command>evmsgui</command> and
   command line) for managing the following storage resources:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Physical disks and logical devices on local media and SAN-based media,
     including iSCSI
    </para>
   </listitem>
   <listitem>
    <para>
     Software RAIDs 0, 1, 4, and 5 for high availability
    </para>
   </listitem>
   <listitem>
    <para>
     Cluster-aware multipath I&sol;O for fault tolerance
    </para>
   </listitem>
   <listitem>
    <para>
     Cluster storage objects with the Cluster Segment Manager (CSM) plug-in
    </para>
   </listitem>
   <listitem>
    <para>
     Volumes for all file systems that have a file system interface module
     (FSIM) for EVMS2
    </para>
   </listitem>
   <listitem>
    <para>
     Snapshots of volumes
    </para>
   </listitem>
  </itemizedlist>
  <para>
   <remark>rwalter: shouldn't there be a macro here?</remark>
   <remark>bg: you are right of course...</remark>
   In &sls; 10, new features include the following:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     EVMS2 and CLVM2 (Cluster Linux Volume Manager 2) use the same
     multidisk (MD) drivers and device mapper (DM) drivers in the kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     File system plug-ins are available for Heartbeat 2 Cluster Manager and
     Oracle Cluster File System 2.
    </para>
   </listitem>
  </itemizedlist>

  <sect3>
  <title>EVMS Devices</title>
  <para>
    The EVMS Administration Utility distinguishes five different levels of
    devices:   
   </para>
   <variablelist>
    <varlistentry>
     <term>Disks</term>
     <listitem>
      <para>
       This is the lowest level of device. All devices that may be
       accessed as a physical disk are treated as disks.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Segments</term>
     <listitem>
      <para>
       Segments consist of partitions and other memory regions on a
       disk, such as the master boot record (MBR).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Containers</term>
    <listitem>
     <para>
      These are the counterparts of volume groups in LVM. 
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Regions</term>
    <listitem>
     <para>
      The available devices are grouped into LVM2 and RAID here.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Volumes</term>
    <listitem>
     <para>
       All devices, regardless of whether they are represented by a real
       partition, a logical volume, or a RAID device are available with
       their respective mount points.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   
   <para>
    If you choose to use EVMS, you must replace your device
    names with the EVMS device names. Simple partitions are found in
    <filename>/dev/evms/</filename>,
    logical volumes in <filename>/dev/evms/lvm/</filename>, and RAID
    devices in <filename>/dev/evms/md</filename>.
    To activate EVMS at boot time, add <filename>boot.evms</filename> to
    the boot scripts in the &yast; runlevel editor. See also <xref
     linkend="sec.boot.runlevel.edit"/>.
   </para>
  </sect3>
  <sect3 id = "b3xeudo">
   <title>For More Information</title>
   <para>
    For information about using EVMS to manage storage resources, see the
    <ulink
     url = "http://evms.sourceforge.net/users_guide/">EVMS User Guide</ulink>
    at the <ulink url = "http://evms.sourceforge.net/">EVMS project</ulink>,
    hosted on SourceForge&ast;.
   </para>
  </sect3>
 </sect2>
 -->
</sect1>
