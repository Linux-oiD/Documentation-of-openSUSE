<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.apparmor.support">
 <title>Support</title>
 <para>
  This chapter outlines maintenance-related tasks. Learn how to update
  &naareg; and get a list of available man pages providing basic help for
  using the command line tools provided by &naa;. Use the troubleshooting
  section to learn about some common problems encountered with &naa; and
  their solutions. Report defects or enhancement requests for &naa;
  following the instructions in this chapter.
 </para>
 <sect1 id="sec.apparmor.support.updating">
  <title>Updating &naa; Online</title>

  <para>
   Updates for &naa; packages are provided in the same way as any other
   update for
   <phrase
    os="sles;sled;osuse">&productname;</phrase><phrase os="slert">&slert;</phrase>.
   Retrieve and apply them exactly like for any other package that ships as
   part of
   <phrase os="sles;sled;osuse"
    >&productname;</phrase><phrase os="slert">&slert;</phrase>.
  </para>
 </sect1>
 <sect1 id="sec.apparmor.support.man">
  <title>Using the Man Pages</title>

  <para>
   There are man pages available for your use. In a terminal, enter
   <command>man apparmor</command> to open the apparmor man page. Man pages
   are distributed in sections numbered 1 through 8. Each section is
   specific to a category of documentation:
  </para>

  <table>
   <title>Man Pages: Sections and Categories</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       <para>
        Section
       </para>
      </entry>
      <entry>
       <para>
        Category
       </para>
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       <para>
        1
       </para>
      </entry>
      <entry>
       <para>
        User commands
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        2
       </para>
      </entry>
      <entry>
       <para>
        System calls
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        3
       </para>
      </entry>
      <entry>
       <para>
        Library functions
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        4
       </para>
      </entry>
      <entry>
       <para>
        Device driver information
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        5
       </para>
      </entry>
      <entry>
       <para>
        Configuration file formats
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        6
       </para>
      </entry>
      <entry>
       <para>
        Games
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        7
       </para>
      </entry>
      <entry>
       <para>
        High level concepts
       </para>
      </entry>
     </row>
     <row>
      <entry>
       <para>
        8
       </para>
      </entry>
      <entry>
       <para>
        Administrator commands
       </para>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   The section numbers are used to distinguish man pages from each other.
   For example, <systemitem>exit(2)</systemitem> describes the exit system
   call, while <systemitem>exit(3)</systemitem> describes the exit C library
   function.
  </para>

  <para>
   The &naa; man pages are:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <systemitem>unconfined(8)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>autodep(1)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>complain(1)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>enforce(1)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>genprof(1)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>logprof(1)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>change_hat(2)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>logprof.conf(5)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>apparmor.conf(5)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>apparmor.d(5)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>apparmor.vim(5)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>apparmor(7)</systemitem>
    </para>
   </listitem>
   <listitem>
    <para>
     <systemitem>apparmor_parser(8)</systemitem>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
 <sect1 id="sec.apparmor.support.info">
  <title>For More Information</title>

  <para>
   Find more information about the &aa; product on the &naa; product page at
   Novell:
   <ulink
    url="http://www.novell.com/linux/security/apparmor//"/>. Find
   the product documentation for &naa;, including this document, at
   <ulink url="http://www.novell.com/documentation/apparmor/"/> or in the
   installed system in <filename>/usr/share/doc/manual</filename>.
  </para>

  <para>
   There are specific mailing lists for &aa; that users can post to or join
   to communicate with developers.
  </para>

  <variablelist>
   <varlistentry>
    <term><ulink url="mailto:apparmor-general@forge.novell.com"
      >apparmor-general@forge.novell.com</ulink>
    </term>
    <listitem>
     <para>
      This is a mailing list for end users of &aa;. It is a good place for
      questions about how to use &aa; to protect your applications.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><ulink url="mailto:apparmor-dev@forge.novell.com">apparmor-dev@forge.novell.com</ulink>
    </term>
    <listitem>
     <para>
      This is a developer mailing list for &aa; developers and community
      members. This list is for questions about development of core &aa;
      features&mdash;the kernel module and the profiling tools. If you are
      interested in reviewing the code for &aa; and contributing reviews or
      patches, this would be the list for you.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><ulink url="mailto:apparmor-announce@forge.novell.com"
      >apparmor-announce@forge.novell.com</ulink>
    </term>
    <listitem>
     <para>
      This is a low traffic list announcing the availability of new releases
      or features.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.apparmor.support.trouble">
  <title>Troubleshooting</title>

  <para>
   This section lists the most common problems and error messages that may
   occur using &naa;.
  </para>

  <sect2 id="sec.apparmor.support.trouble.odd">
   <title>How to React to odd Application Behavior?</title>
   <para>
    If you notice odd application behavior or any other type of application
    problem, you should first check the reject messages in the log files to
    see if &aa; is too closely constricting your application. To check
    reject messages, start <menuchoice> <guimenu>&yast;</guimenu>
    <guimenu>&naa;</guimenu> </menuchoice> and go to <guimenu>&aa;
    Reports</guimenu>. Select <guimenu>View Archive</guimenu> and
    <guimenu>App Aud</guimenu> for the application audit report. You can
    filter dates and times to narrow down the specific periods when the
    unexpected application behavior occurred.
   </para>
   <para>
    If you detect reject messages that indicate that your application or
    service is too closely restricted by &aa;, update your profile to
    properly handle your use case of the application. Do this with the
    <guimenu>Update Profile Profile Wizard</guimenu> in &yast;, as described
    in <xref
     linkend="sec.apparmor.yast.update"/>.
   </para>
   <para>
    If you decide to run your application or service without &aa;
    protection, remove the application's profile from
    <filename>/etc/apparmor.d</filename> or move it to another location.
   </para>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.dirpath">
   <title>My Profiles do not Seem to Work Anymore &hellip;</title>
   <remark condition="clarity">
    2007-08-31 - jjaeger: 2.1 problem ... what else will cause troule apart
    from the directory path stuff?
    </remark>
   <para>
    If you have been using previous versions of &aa; and have updated your
    system (but kept your old set of profiles) you might notice some
    applications which seemed to work perfectly before you updated behaving
    strangely, or not working at all .
   </para>
   <para>
    This version of &aa; introduces a set of new features to the profile
    syntax and the &aa; tools that might cause trouble with older versions
    of the &aa; profiles. Those features are:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      File Locking
     </para>
    </listitem>
    <listitem>
     <para>
      Network Access Control
     </para>
    </listitem>
    <listitem>
     <para>
      The <literal>SYS_PTRACE</literal> Capability
     </para>
    </listitem>
    <listitem>
     <para>
      Directory Path Access
     </para>
    </listitem>
   </itemizedlist>
   <para>
    The current version of &aa; mediates file locking and introduces a new
    permission mode (<literal>k</literal>) for this. Applications requesting
    file locking permission might misbehave or fail altogether if confined
    by older profiles which do not explicitly contain permissions to lock
    files. If you suspect this being the case, check the log file under
    <filename>/var/log/audit/audit.log</filename> for entries like the
    following:
   </para>
<screen>type=APPARMOR_DENIED msg=audit(1188913493.299:9304): operation="file_lock" requested_mask="::k" denied_mask="::k" fsuid=1000 name="/home/tux/.qt/.qtrc.lock" pid=25736 profile="/usr/bin/opera"
</screen>
   <para>
    Update the profile using the &yast; Update Profile Wizard or the
    <command>aa-logprof</command> command as outlined below.
   </para>
   <para>
    The new network access control syntax based on the network family and
    type specification, described in
    <xref linkend="sec.apparmor.profiles.nac"/>, might cause application
    misbehavior or even stop applications from working. If you notice a
    network-related application behaving strangely, check the log file under
    <filename>/var/log/audit/audit.log</filename> for entries like the
    following:
   </para>
<screen>
type=APPARMOR_DENIED msg=audit(1188894313.206:9123): operation="socket_create" family="inet" sock_type="raw" protocol=1 pid=23810 profile="/bin/ping"
</screen>
   <para>
    This log entry means that our example application,
    <command>/bin/ping</command> in this case, failed to get &aa;'s
    permission to open a network connection. This permission has to be
    explicitly stated to make sure that an application has network access.
    To update the profile to the new syntax, use the &yast; Update Profile
    Wizard or the <command>aa-logprof</command> command as outlined below.
   </para>
   <para>
    The current kernel requires the <literal>SYS_PTRACE</literal>
    capability, if a process tries to access files in
    <filename>/proc/<replaceable>pid</replaceable>/fd/*</filename>. New
    profiles need an entry for the file and the capability, where old
    profiles only needed the file entry. For example:
   </para>
<screen>/proc/*/fd/**  rw,</screen>
   <para>
    in the old syntax would translate to the following rules in the new
    syntax:
   </para>
<screen>capability SYS_PTRACE,
/proc/*/fd/**  rw,</screen>
   <para>
    To update the profile to the new syntax, use the &yast; Update Profile
    Wizard or the <command>aa-logprof</command> command as outlined below.
   </para>
   <para>
    With this version of &aa;, a few changes have been made to the profile
    rule syntax to better distinguish directory from file access. Therefore,
    some rules matching both file and directory paths in the previous
    version might now just match a file path. This could lead to &aa; not
    being able to access a crucial directory at all, and thus trigger
    misbehavior of your application and various log messages. The following
    examples highlight the most important changes to the path syntax.
   </para>
   <para>
    Using the old syntax, the following rule would allow access to files and
    directories in <filename>/proc/net</filename>. It would allow directory
    access only to read the entries in the directory, but not give access to
    files or directories under the directory, e.g.
    <filename>/proc/net/dir/foo</filename> would be matched by the asterisk
    (*), but as <filename>foo</filename> is a file or directory under
    <filename>dir</filename>, it cannot be accessed.
   </para>
<screen>/proc/net/*  r, 
</screen>
   <para>
    To get the same behavior using the new syntax, you need two rules
    instead of one. The first allows access to the file under
    <filename>/proc/net</filename> and the second allows access to
    directories under <filename>/proc/net</filename>. Directory access can
    only be used for listing the contents, not actually accessing files or
    directories underneath the directory.
   </para>
<screen>/proc/net/*  r,  
/proc/net/*/  r,    
</screen>
   <para>
    The following rule works similarly both under the old and the new
    syntax, and allows access to both files and directories under
    <filename>/proc/net</filename>:
   </para>
<screen>
/proc/net/**  r,   
</screen>
   <para>
    To distinguish file access from directory access using the above
    expression in the new syntax, use the following two rules. The first one
    only allows to recursively access directories under
    <filename>/proc/net</filename> while the second one explicitly allows
    for recursive file access only.
   </para>
<screen>/proc/net/**/  r,  
/proc/net/**[^/]  r,</screen>
   <para>
    The following rule works similarly both under the old and the new syntax
    and allows access to both files and directories beginning with
    <literal>foo</literal> under <filename>/proc/net</filename>:
   </para>
<screen>/proc/net/foo**  r,</screen>
   <para>
    To distinguish file access from directory access in the new syntax and
    use the <literal>**</literal> globbing pattern, use the following two
    rules. The first one would have matched both files and directories in
    the old syntax, but only matches files in the new syntax due to the
    missing trailing slash. The second rule matched neither file nor
    directory in the old syntax, but matches directories only in the new
    syntax:
   </para>
<screen>/proc/net/**foo  r,
/proc/net/**foo/  r, 
</screen>
   <para>
    The following rules illustrate how the use of the <literal>?</literal>
    globbing pattern has changed. In the old syntax, the first rule would
    have matched both files and directories (four characters, last character
    could be any but a slash). In the new syntax, it matches only files
    (trailing slash is missing). The second rule would match nothing in the
    old profile syntax, but matches directories only in the new syntax. The
    last rule matches explicitly matches a file called
    <filename>bar</filename> under <filename>/proc/net/foo?</filename>.
    Using the old syntax, this rule would have applied to both files and
    directories:
   </para>
<screen>/proc/net/foo?  r,    
/proc/net/foo?/  r, 
/proc/net/foo?/bar  r,
</screen>
   <para>
    To find and resolve issues related to syntax changes, take some time
    after the update to check the profiles you want to keep and proceed as
    follows for each application you kept the profile for:
   </para>
   <procedure>
    <step>
     <para>
      Make sure that &aa; is running and that the application's profile is
      loaded.
     </para>
    </step>
    <step>
     <para>
      Start the &yast; &aa; Control Panel and put the application's profile
      into complain mode. Log entries are made for any actions violating the
      current profile, but the profile is not enforced and the application's
      behavior not restricted.
     </para>
    </step>
    <step>
     <para>
      Run the application covering all the tasks you need this application
      to be able to perform.
     </para>
    </step>
    <step>
     <para>
      Start the &yast; Update Profile Wizard to update the application's
      profile according to the log entries generated while running the
      application.
     </para>
    </step>
    <step>
     <para>
      Once the profile is updated, put it back into enforce mode via the
      &yast; &aa; Control Panel.
     </para>
    </step>
   </procedure>
   <para>
    Using the &aa; command line tools, you would proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Put the application's profile into complain mode:
     </para>
<screen><command>aa-complain <option><replaceable>/path/to/application</replaceable></option></command></screen>
    </step>
    <step>
     <para>
      Run the application.
     </para>
    </step>
    <step>
     <para>
      Update the profile according to the log entries made while running the
      application:
     </para>
<screen><command>aa-logprof <option><replaceable>/path/to/application</replaceable></option></command>
     </screen>
    </step>
    <step>
     <para>
      Put the resulting profile back into enforce mode:
     </para>
<screen><command>aa-enforce <option><replaceable>/path/to/application</replaceable></option></command></screen>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.kde">
   <title>How to Confine KDE Applications with &aa;?</title>
   <para>
    Currently, it is not possible to confine KDE applications to the same
    extent as any other application, due to the way KDE manages its
    processes.
   </para>
   <para>
    If you want to confine KDE applications, choose one of the following
    approaches, but note that none of them are really suited for a standard
    setup:
   </para>
   <variablelist>
    <varlistentry>
     <term>Create a Single Profile for the Entire KDE Desktop</term>
     <listitem>
      <para>
       As all KDE processes are children of one parent process and &aa;
       cannot distinguish an individual application's process from the rest,
       create one huge profile to confine the entire desktop all at once.
       This approach is only feasible if your setup is a very limited
       (kiosk-type) one. Maintaining such a profile for a standard KDE
       desktop (including all of its applications) would be close to
       impossible.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Modify KDE's process handling</term>
     <listitem>
      <para>
       Using <literal>KDE_EXEC_SLAVES=1</literal> and
       <literal>KDE_IS_PRELINKED=1</literal> variables force KDE to manage
       its processes in a way that allows &aa; to distinguish individual
       applications from each other and apply profiles to them. This
       approach might slow down your desktop considerably, as it turns off a
       crucial optimization for speed. Note that the above mentioned
       environment variables have to be set before KDM/XDM/GDM or startx are
       started. One way to achieve this would be to add them to
       <filename>/etc/security/pam_env.conf</filename>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.apache">
   <title>How to Resolve Issues with Apache?</title>
   <para>
    Apache is not starting properly or it is not serving Web pages and you
    just installed a new module or made a configuration change. When you
    install additional Apache modules (like
    <literal>apache2-mod_apparmor</literal>) or make configuration changes
    to Apache, you should profile Apache again to catch any additional rules
    that need to be added to the profile.
   </para>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.report">
   <title>Why are the Reports not Sent by E-Mail?</title>
   <para>
    When the reporting feature generates an HTML or CSV file that exceeds
    the default size, the file is not sent. Mail servers have a default hard
    limit for e-mail size. This limitation can impede &aa;'s ability to send
    e-mails that are generated for reporting purposes. If your mail is not
    arriving, this could be why. Consider the mail size limits and check the
    archives if e-mails have not been received.
   </para>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.ex">
   <title>How to Exclude Certain Profiles from the List of Profiles Used?</title>
   <para>
    &aa; always loads and applies all profiles that are available in its
    profile directory (<filename>/etc/apparmor.d/</filename>). If you decide
    not to apply a profile to a certain application, delete the appropriate
    profile or move it to another location where &aa; would not check for
    it.
   </para>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.remote">
   <title>Can I Manage Profiles for Applications not Installed on my System?</title>
   <para>
    Managing profiles with &aa; requires you to have access to the log of
    the system on which the application is running. So you do not need to
    run the application on your profile, build host as long as you have
    access to the machine that runs the application. You can run the
    application on one system, transfer the logs
    (<filename>/var/log/audit.log</filename> or, if
    <filename>audit</filename> is not installed,
    <filename>/var/log/messages</filename>) to your profile build host and
    run <command>aa-logprof -f
    <replaceable>path_to_logfile</replaceable></command>.
   </para>
  </sect2>

  <sect2 id="sec.apparmor.support.trouble.syntax">
   <title>How to Spot and fix &aa; Syntax Errors?</title>
   <para>
    Manually editing &naa; profiles can introduce syntax errors. If you
    attempt to start or restart &aa; with syntax errors in your profiles,
    error results are shown. This example shows the syntax of the entire
    parser error.
   </para>
<screen>
localhost:~ # rcapparmor start
Loading AppArmor profiles AppArmor parser error in /etc/apparmor.d/usr.sbin.squid at line 410: syntax error, unexpected TOK_ID, expecting TOK_MODE
 Profile /etc/apparmor.d/usr.sbin.squid failed to load
</screen>
   <para>
    Using the &aa; &yast; tools, a graphical error message indicates which
    profile contained the error and requests you to fix it.
   </para>
   <remark condition="clarity">
    2007-08-31 - jjaeger: new screenshot or bugreport against the package link
    which doesn't work anymore 
    </remark>
   <informalfigure>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="aa_syncheck.png" width="60%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="aa_syncheck.png" width="60%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </informalfigure>
   <para>
    To fix a syntax error, log in to a terminal window as &rootuser;, open
    the profile, and correct the syntax. Reload the profile set with
    <command>rcapparmor <option>reload</option></command>.
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.apparmor.support.bugs">
  <title>Reporting Bugs for &aa;</title>

  <para>
   The developers of &aa; are eager to deliver products of the highest
   quality. Your feedback and your bug reports help us keep the quality
   high. Whenever you encounter a bug in &aa;, file a bug report against
   this product:
  </para>

  <procedure>
   <step>
    <para>
     Use your Web browser to go to
     <ulink url="https://bugzilla.novell.com/index.cgi"/>.
    </para>
   </step>
   <step>
    <para>
     Enter the account data of your Novell account and click
     <guimenu>Login</guimenu>
    </para>
    <para>
     <emphasis>or</emphasis>
    </para>
    <para>
     Create a new Novell account as follows:
    </para>
    <substeps>
     <step>
      <para>
       Click <guimenu>Create New Account</guimenu> on the <guimenu>Login to
       Continue</guimenu> page.
      </para>
     </step>
     <step>
      <para>
       Provide a username and password and additional address data and click
       <guimenu>Create Login</guimenu> to immediately proceed with the login
       creation.
      </para>
      <para>
       <emphasis>or</emphasis>
      </para>
      <para>
       Provide data on which other Novell accounts you maintain to sync all
       these to one account.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Check whether a problem similar to yours has already been reported by
     clicking <guimenu>Search Reports</guimenu>. Use a quick search against
     a given product and keyword or use the <guimenu>Advanced
     Search</guimenu>.
    </para>
   </step>
   <step>
    <para>
     If your problem has already been reported, check this bug report and
     add extra information to it, if necessary.
    </para>
   </step>
   <step>
    <para>
     If your problem has not been reported yet, select
     <guimenu>New</guimenu> from the top navigation bar and proceed to the
     <guimenu>Enter Bug</guimenu> page.
    </para>
   </step>
   <step>
    <para>
     Select the product against which to file the bug. In your case, this
     would be your product's release. Click <guimenu>Submit</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Select the product version, component (&aa; in this case), hardware
     platform, and severity.
    </para>
   </step>
   <step>
    <para>
     Enter a brief headline describing your problem and add a more elaborate
     description including log files. You may create attachments to your bug
     report for screen shots, log files, or test cases.
    </para>
   </step>
   <step>
    <para>
     Click <guimenu>Submit</guimenu> after you have entered all the details
     to send your report to the developers.
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
