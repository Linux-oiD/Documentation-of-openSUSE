<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<sect2 id="sec.trouble.data.recover">
 <title>Recovering a Corrupted System</title><indexterm>
 <primary>recovering systems</primary></indexterm>
 <para>
  There are several reasons why a system could fail to come up and run
  properly. A corrupted file system following a system crash, corrupted
  configuration files, or a corrupted boot loader configuration are the most
  common ones.
 </para>
<!-- fs 2010-12-01: YaST repair dropped in openSUSE -->
 <para os="sles;sled">
  &productname; offers two different methods to resolve these situations.
  You can either use the &yast; System Repair functionality or boot the
  rescue system. The following sections cover both types of system repair
  methods.
 </para>
<!-- fs 2010-12-01: YaST repair dropped in openSUSE -->
 <sect3 id="sec.trouble.data.recover.yast" os="sles;sled">
  <title>Using &yast; System Repair</title><indexterm>
  <primary>&yast;</primary>
  <secondary>repairing systems</secondary></indexterm><indexterm>
  <primary>repairing systems</primary></indexterm>
  <note>
   <title>Keyboard and Language Settings</title>
   <para>
    If you change the language settings after booting, your keyboard is
    adapted as well.
   </para>
  </note>
  <para>
   Before launching the &yast; System Repair module, determine in which mode
   to run it to best fit your needs. Depending on the severity and cause of
   your system failure (and your expertise), there are three different modes
   to choose from:
  </para>
  <variablelist>
   <varlistentry>
    <term>Automatic Repair</term>
    <listitem>
     <para>
      If your system failed due to an unknown cause and you basically do not
      know which part of the system is to blame for the failure, use
      <guimenu>Automatic Repair</guimenu>. An extensive automated check will
      be performed on all components of your installed system. For a
      detailed description of this procedure, refer to
      <xref linkend="sec.trouble.data.recover.yast.auto"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Customized Repair</term>
    <listitem>
     <para>
      If your system failed and you already know which component is to
      blame, you can cut the lengthy system check with <guimenu>Automatic
      Repair</guimenu> short by limiting the scope of the system analysis to
      those components. For example, if the system messages prior to the
      failure seem to indicate an error with the package database, you can
      limit the analysis and repair procedure to checking and restoring this
      aspect of your system. For a detailed description of this procedure,
      refer to <xref linkend="sec.trouble.data.recover.yast.custom"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Expert Tools</term>
    <listitem>
     <para>
      If you already have a clear idea of what component failed and how this
      should be fixed, you can skip the analysis runs and directly apply the
      tools necessary for the repair of the relevant component. For details,
      refer to <xref linkend="sec.trouble.data.recover.yast.expert"/>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Choose one of the repair modes as described above and proceed with the
   system repair as outlined in the following sections.
  </para>
  <sect4 id="sec.trouble.data.recover.yast.auto">
   <title>Automatic Repair</title>
   <procedure>
    <para>
     To start the automatic repair mode of &yast; System Repair, proceed as
     follows:
    </para>
    <step>
     <para>
      Insert the installation medium of &productname; into your DVD drive.
     </para>
    </step>
    <step>
     <para>
      Reboot the system.
     </para>
    </step>
    <step>
     <para>
      On the boot screen, select <guimenu>Repair Installed System</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confirm the license agreement and click <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Automatic Repair</guimenu>.
     </para>
     <para>
      &yast; now launches an extensive analysis of the installed system. The
      progress of the procedure is displayed at the bottom of the screen
      with two progress bars. The upper bar shows the progress of the
      currently running test. The lower bar shows the overall progress of
      the analysis. The log window in the top section tracks the currently
      running test and its result. See
      <xref linkend="fig.trouble.data.recover.yast.auto"/>.
     </para>
     <figure id="fig.trouble.data.recover.yast.auto">
      <title>Automatic Repair Mode</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="i_y2_repair_auto.png" width="75%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="i_y2_repair_auto.png" width="75%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      The following main test runs are performed with every run. They
      contain, in turn, a number of individual subtests:
     </para>
     <variablelist>
      <varlistentry>
       <term>Check Partition Tables</term>
       <listitem>
        <para>
         Checks the validity and coherence of the partition tables of all
         detected hard disks.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Check Swap Areas</term>
       <listitem>
        <para>
         The swap partitions of the installed system are detected, tested,
         and offered for activation, where applicable. This offer should be
         accepted for the sake of a higher system repair speed.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Check File Systems</term>
       <listitem>
        <para>
         All detected file systems are subjected to a file
         system&ndash;specific check.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Check fstab Entries</term>
       <listitem>
        <para>
         The entries in the file are checked for completeness and
         consistency. All valid partitions are mounted.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Check Package Database</term>
       <listitem>
        <para>
         This checks whether all packages necessary for the operation of a
         minimal installation are present. While it is optionally possible
         to also analyze the base packages, this takes a long time because
         of their vast number.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Check Boot Loader Configuration</term>
       <listitem>
        <para>
         The boot loader configuration of the installed system (GRUB or
         LILO) is checked for completeness and coherence. Boot and root
         devices are examined and the availability of the initrd modules is
         checked.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step>
    <step>
     <para>
      Whenever an error is encountered, the procedure stops and a dialog
      opens outlining the details and possible solutions.
     </para>
     <para>
      Read the screen messages carefully before accepting the proposed fix.
      If you decide to decline a proposed solution, your system remains
      unchanged.
     </para>
    </step>
    <step>
     <para>
      After the repair process has been terminated successfully, click
      <guimenu>OK</guimenu> and <guimenu>Finish</guimenu> and remove the
      installation media. The system automatically reboots.
     </para>
    </step>
   </procedure>
  </sect4>
  <sect4 id="sec.trouble.data.recover.yast.custom">
   <title>Customized Repair</title>
   <procedure>
    <para>
     To launch the <guimenu>Customized Repair</guimenu> mode and selectively
     check certain components of your installed system, proceed as follows:
    </para>
    <step>
     <para>
      Insert the installation medium of &productname; into your DVD drive.
     </para>
    </step>
    <step>
     <para>
      Reboot the system.
     </para>
    </step>
    <step>
     <para>
      At the boot screen, select <guimenu>Repair Installed System</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confirm the license agreement and click <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Customized Repair</guimenu>.
     </para>
     <para>
      Choosing <guimenu>Customized Repair</guimenu> shows a list of test
      runs that are all marked for execution at first. The total range of
      tests matches that of automatic repair. If you already know where no
      damage is present, unmark the corresponding tests. Clicking
      <guimenu>Next</guimenu> starts a narrower test procedure that probably
      has a significantly shorter running time.
     </para>
     <para>
      Not all test groups can be applied individually. The analysis of the
      fstab entries is always bound to an examination of the file systems,
      including existing swap partitions. &yast; automatically resolves such
      dependencies by selecting the smallest number of necessary test runs.
      &yast; does not support encrypted partitions. If you have one, &yast;
      informs you about it.
     </para>
    </step>
    <step>
     <para>
      Whenever an error is encountered, the procedure stops and a dialog
      opens outlining the details and possible solutions.
     </para>
     <para>
      Read the screen messages carefully before accepting the proposed fix.
      If you decide to decline a proposed solution, your system remains
      unchanged.
     </para>
    </step>
    <step>
     <para>
      After the repair process has been terminated successfully, click
      <guimenu>OK</guimenu> and <guimenu>Finish</guimenu> and remove the
      installation media. The system automatically reboots.
     </para>
    </step>
   </procedure>
  </sect4>
  <sect4 id="sec.trouble.data.recover.yast.expert">
   <title>Expert Tools</title>
   <para>
    If you are knowledgeable with &productname; and already have a very
    clear idea of what needs to be repaired in your system, directly apply
    the tools, skipping the system analysis.
   </para>
   <para>
    To make use of the <guimenu>Expert Tools</guimenu> feature of the &yast;
    System Repair module, proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Insert the installation medium of &productname; into your DVD drive.
     </para>
    </step>
    <step>
     <para>
      Reboot the system.
     </para>
    </step>
    <step>
     <para>
      At the boot screen, select <guimenu>Repair Installed System</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Confirm the license agreement and click <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Select <guimenu>Expert Tools</guimenu> and choose a repair option.
     </para>
    </step>
    <step>
     <para>
      After the repair process has been terminated successfully, click
      <guimenu>OK</guimenu> and <guimenu>Finish</guimenu> and remove the
      installation media. The system automatically reboots.
     </para>
    </step>
   </procedure>
   <para>
    The <guimenu>Expert Tools</guimenu> provides the following options to
    repair your faulty system:
   </para>
   <variablelist>
    <varlistentry>
     <term><guimenu>Install New Boot Loader</guimenu>
     </term>
     <listitem>
      <para>
       This starts the &yast; boot loader configuration module. Find details
       in <xref linkend="sec.boot.yast2.config"/>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Boot Installed System</guimenu>
     </term>
     <listitem>
      <para>
       Try to boot an already-installed Linux system.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Start Partitioning Tool</guimenu>
     </term>
     <listitem>
      <para>
       This starts the expert partitioning tool in &yast;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Repair File System</guimenu>
     </term>
     <listitem>
      <para>
       This checks the file systems of your installed system. You are first
       offered a selection of all detected partitions and can then choose
       the ones to check.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Recover Lost Partitions</guimenu><indexterm>
      <primary>recovering partitions</primary></indexterm>
     </term>
     <listitem>
      <para>
       It is possible to attempt to reconstruct damaged partition tables. A
       list of detected hard disks is presented first for selection.
       Clicking <guimenu>OK</guimenu> starts the examination. This can take
       a while depending on the speed of your computer and the size and
       speed of the hard disk.
      </para>
      <important>
       <title><guimenu>Reconstructing a Partition Table</guimenu></title>
       <para>
        The reconstruction of a partition table is tricky. &yast; attempts
        to recognize lost partitions by analyzing the data sectors of the
        hard disk. The lost partitions are added to the rebuilt partition
        table when recognized. This is, however, not successful in all
        imaginable cases.
       </para>
      </important>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Save System Settings to Floppy</guimenu>
     </term>
     <listitem>
      <para>
       This option saves important system files to a floppy disk. If one of
       these files becomes damaged, it can be restored from disk.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Verify Installed Software</guimenu>
     </term>
     <listitem>
      <para>
       This checks the consistency of the package database and the
       availability of the most important packages. Any damaged installed
       packages can be reinstalled with this tool.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect4>
 </sect3>
 <sect3 id="sec.trouble.data.recover.rescue">
  <title>Using the Rescue System</title><indexterm>
  <primary>rescue system</primary></indexterm><indexterm>
  <primary>system</primary>
  <secondary>rescuing</secondary></indexterm>
  <para>
   &productname; contains a rescue system. The rescue system is a small
   Linux system that can be loaded into a RAM disk and mounted as root file
   system, allowing you to access your Linux partitions from the outside.
   Using the rescue system, you can recover or modify any important aspect
   of your system:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Manipulate any type of configuration file.
    </para>
   </listitem>
   <listitem>
    <para>
     Check the file system for defects and start automatic repair processes.
    </para>
   </listitem>
   <listitem>
    <para>
     Access the installed system in a <quote>change root</quote>
     environment.
    </para>
   </listitem>
   <listitem>
    <para>
     Check, modify, and reinstall the boot loader configuration.
    </para>
   </listitem>
   <listitem>
    <para>
     Recover from a badly installed device driver or unusable kernel.
    </para>
   </listitem>
   <listitem>
    <para>
     Resize partitions using the parted command. Find more information about
     this tool at the GNU Parted website
     <ulink url="http://www.gnu.org/software/parted/parted.html"/>.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   The rescue system can be loaded from various sources and locations. The
   simplest option is to boot the rescue system from the original
   installation medium:
  </para>
  <procedure><indexterm>
   <primary>rescue system</primary>
   <secondary>starting from medium</secondary></indexterm>
   <step>
    <para>
     Insert the installation medium into your DVD drive.
    </para>
   </step>
   <step>
    <para>
     Reboot the system.
    </para>
   </step>
   <step>
    <para>
     At the boot screen, press <keycap>F4</keycap> and choose
     <guimenu>DVD-ROM</guimenu>. Then choose <guimenu>Rescue
     System</guimenu> from the main menu.
    </para>
   </step>
   <step>
    <para>
     Enter <literal>root</literal> at the <literal>Rescue:</literal> prompt.
     A password is not required.
    </para>
   </step>
  </procedure>
  <procedure id="proc.trouble.data.recover.rescue.network"><indexterm>
   <primary>rescue system</primary>
   <secondary>starting from network source</secondary></indexterm>
   <para>
    If your hardware setup does not include a DVD drive, you can boot the
    rescue system from a network source<phrase os="osuse"> (including the
    &opensuse; FTP server)</phrase>. The following example applies to a
    remote boot scenario&mdash;if using another boot medium, such as a DVD,
    modify the <filename>info</filename> file accordingly and boot as you
    would for a normal installation.
   </para>
   <step>
    <para>
     Enter the configuration of your PXE boot setup and add the lines
     <literal>install=<replaceable>protocol</replaceable>://<replaceable>instsource</replaceable></literal>
     and <literal>rescue=1</literal>. If you need to start the repair
     system, use <literal>repair=1</literal> instead. As with a normal
     installation, <replaceable>protocol</replaceable> stands for any of the
     supported network protocols (NFS, HTTP, FTP, etc.) and
     <replaceable>instsource</replaceable> for the path to your network
     installation source.
    </para>
   </step>
   <step>
    <para>
     Boot the system using <quote>Wake on LAN</quote>, as described in
     <xref linkend="sec.deployment.remoteinst.boot.wol"/>.
    </para>
   </step>
   <step>
    <para>
     Enter <literal>root</literal> at the <literal>Rescue:</literal> prompt.
     A password is not required.
    </para>
   </step>
  </procedure>
  <para>
   Once you have entered the rescue system, you can make use of the virtual
   consoles that can be reached with
   <keycombo><keycap function="alt"/><keycap>F1</keycap></keycombo> to
   <keycombo><keycap function="alt"/><keycap>F6</keycap></keycombo>.
  </para>
  <para>
   A shell and many other useful utilities, such as the mount program, are
   available in the <filename>/bin</filename> directory. The
   <filename>sbin</filename> directory contains important file and network
   utilities for reviewing and repairing the file system. This directory
   also contains the most important binaries for system maintenance, such as
   fdisk, mkfs, mkswap, mount, mount, init, and shutdown, and ifconfig, ip,
   route, and netstat for maintaining the network. The directory
   <filename>/usr/bin</filename> contains the vi editor, find, less, and
   ssh.
  </para>
  <para>
   To see the system messages, either use the command
   <command>dmesg</command> or view the file
   <filename>/var/log/messages</filename>.
  </para>
  <sect4 id="sec.trouble.data.recover.rescue.file">
   <title>Checking and Manipulating Configuration Files</title>
   <para>
    As an example for a configuration that might be fixed using the rescue
    system, imagine you have a broken configuration file that prevents the
    system from booting properly. You can fix this using the rescue system.
   </para>
   <procedure>
    <para>
     To manipulate a configuration file, proceed as follows:
    </para>
    <step>
     <para>
      Start the rescue system using one of the methods described above.
     </para>
    </step>
    <step>
     <para>
      To mount a root file system located under
      <filename>/dev/sda6</filename> to the rescue system, use the following
      command:
     </para>
<screen>mount /dev/sda6 /mnt</screen>
     <para>
      All directories of the system are now located under
      <filename>/mnt</filename>
     </para>
    </step>
    <step>
     <para>
      Change the directory to the mounted root file system:
     </para>
<screen>cd /mnt</screen>
    </step>
    <step>
     <para>
      Open the problematic configuration file in the vi editor. Adjust and
      save the configuration.
     </para>
    </step>
    <step>
     <para>
      Unmount the root file system from the rescue system:
     </para>
<screen>umount /mnt</screen>
    </step>
    <step>
     <para>
      Reboot the machine.
     </para>
    </step>
   </procedure>
  </sect4>
  <sect4 id="sec.trouble.data.recover.rescue.filesystem">
   <title>Repairing and Checking File Systems</title><indexterm>
   <primary>file systems</primary>
   <secondary>repairing</secondary></indexterm>
   <para>
    Generally, file systems cannot be repaired on a running system. If you
    encounter serious problems, you may not even be able to mount your root
    file system and the system boot may end with a <quote>kernel
    panic</quote>. In this case, the only way is to repair the system from
    the outside. <phrase os="sles;sled">It is strongly recommended to use
    the &yast; System Repair for this task (see
    <xref
      linkend="sec.trouble.data.recover.yast"/> for details).
    However, if you need to do a manual file system check or repair, boot
    the rescue system.</phrase><phrase os="osuse">The rescue system provides
    all tools needed for a manual file system check or repair.</phrase> It
    contains the utilities to check and repair the <literal>btrfs</literal>,
    <literal>ext2</literal>, <literal>ext3</literal>,
    <literal>ext4</literal>, <literal>reiserfs</literal>,
    <literal>xfs</literal>, <literal>dosfs</literal>, and
    <literal>vfat</literal> file systems.
   </para>
  </sect4>
  <sect4 id="sec.trouble.data.recover.rescue.access">
   <title>Accessing the Installed System</title>
   <para>
    If you need to access the installed system from the rescue system, you
    need to do this in a <emphasis>change root</emphasis> environment. For
    example, to modify the boot loader configuration, or to execute a
    hardware configuration utility.
   </para>
   <para>
    To set up a change root environment based on the installed system,
    proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      First mount the root partition from the installed system and the
      device file system (change the device name to your current settings):
     </para>
<screen>mount /dev/sda6 /mnt
mount --bind /dev /mnt/dev</screen>
    </step>
    <step>
     <para>
      Now you can <quote>change root</quote> into the new environment:
     </para>
<screen>chroot /mnt</screen>
    </step>
    <step>
     <para>
      Then mount <filename>/proc</filename> and <filename>/sys</filename>:
     </para>
<screen>mount /proc
mount /sys</screen>
    </step>
    <step>
     <para>
      Finally, mount the remaining partitions from the installed system:
     </para>
<screen>mount -a</screen>
    </step>
    <step>
     <para>
      Now you have access to the installed system. Before rebooting the
      system, unmount the partitions with <command>umount
      <option>-a</option></command> and leave the <quote>change root</quote>
      environment with <command>exit</command>.
     </para>
    </step>
   </procedure>
   <warning>
    <title>Limitations</title>
    <para>
     Although you have full access to the files and applications of the
     installed system, there are some limitations. The kernel that is
     running is the one that was booted with the rescue system, not with the
     change root environment. It only supports essential hardware and it is
     not possible to add kernel modules from the installed system unless the
     kernel versions are exactly the same. Always check the version of the
     currently running (rescue) kernel with <command>uname -r</command> and
     then find out if a matching subdirectory exists in the
     <filename>/lib/modules</filename> directory in the change root
     environment. If yes, you can use the installed modules, otherwise you
     need to supply their correct versions on other media, such as a USB
     stick. Most often the rescue kernel version differs from the installed
     one &mdash; then you cannot simply access a sound card, for example. It
     is also not possible to start a graphical user interface.
    </para>
    <para>
     Also note that you leave the <quote>change root</quote> environment
     when you switch the console with
     <keycombo><keycap function="alt"/><keycap>F1</keycap></keycombo> to
     <keycombo><keycap function="alt"/><keycap>F6</keycap></keycombo>.
    </para>
   </warning>
  </sect4>
  <sect4 id="sec.trouble.data.recover.rescue.grub">
   <title>Modifying and Reinstalling the Boot Loader</title>
   <para>
    Sometimes a system cannot boot because the boot loader configuration is
    corrupted. The start-up routines cannot, for example, translate physical
    drives to the actual locations in the Linux file system without a
    working boot loader.
   </para>
   <para>
    To check the boot loader configuration and reinstall the boot loader,
    proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Perform the necessary steps to access the installed system as
      described in <xref linkend="sec.trouble.data.recover.rescue.access"/>.
     </para>
    </step>
    <step>
     <para>
      Check whether the following files are correctly configured according
      to the GRUB configuration principles outlined in
      <xref linkend="cha.grub"/> and apply fixes if necessary.
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <filename>/etc/grub.conf</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/boot/grub/device.map</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/boot/grub/menu.lst</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/etc/sysconfig/bootloader</filename>
       </para>
      </listitem>
     </itemizedlist>
    </step>
    <step>
     <para>
      Reinstall the boot loader using the following command sequence:
     </para>
<screen>grub --batch &lt; /etc/grub.conf</screen>
    </step>
    <step>
     <para>
      Unmount the partitions, log out from the <quote>change root</quote>
      environment, and reboot the system:
     </para>
<screen>umount -a
exit
reboot</screen>
    </step>
   </procedure>
  </sect4>
  <sect4 id="sec.trouble.data.recover.rescue.dud">
   <title>Fixing Kernel Installation</title>
   <para>
    A kernel update may introduce a new bug which can impact the operation
    of your system. For example a driver for a piece of hardware in your
    system may be faulty, which prevents you from accessing and using it. In
    this case, revert to the last working kernel (if available on the
    system) or install the original kernel from the installation media.
   </para>
   <tip>
    <title>How to Keep Last Kernels after Update</title>
    <para>
     To prevent failures to boot after a faulty kernel update, use the
     kernel multiversion feature and tell <systemitem>libzypp</systemitem>
     which kernels you want to keep after the update.
    </para>
    <para>
     For example to always keep the last two kernels and the currently
     running one, add
    </para>
<screen>multiversion.kernels = latest,latest-1,running</screen>
    <para>
     to the <filename>/etc/zypp/zypp.conf</filename> file.
    </para>
   </tip>
   <para>
    A similar case is when you need to reinstall or update a broken driver
    for a device not supported by &productname;. For example when a hardware
    vendor uses a specific device, such as a hardware RAID controller, which
    needs a binary driver to be recognized by the operating system. The
    vendor typically releases a Driver Update Disk with the fixed or updated
    version of the required driver.
   </para>
   <para>
    In both cases you need to access the installed system in the rescue mode
    and fix the kernel related problem, otherwise the system may fail to
    boot correctly:
   </para>
   <procedure>
    <step>
     <para>
      Boot from the &productname; installation media.
     </para>
    </step>
    <step>
     <para>
      If you are recovering after a faulty kernel update, skip this step. If
      you need to use a driver update disk (DUD), press <keycap>F6</keycap>
      to load the driver update after the boot menu appears, and choose the
      path or URL to the driver update and confirm with
      <guimenu>Yes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Choose <guimenu>Rescue System</guimenu> from the boot menu and press
      <keycap>Enter</keycap>. If you chose to use DUD, you will be asked to
      specify where the driver update is stored.
     </para>
    </step>
    <step>
     <para>
      Enter <literal>root</literal> at the <literal>Rescue:</literal>
      prompt. A password is not required.
     </para>
    </step>
    <step>
     <para>
      Manually mount the target system and <quote>change root</quote> into
      the new environment. For more information, see
      <xref
     linkend="sec.trouble.data.recover.rescue.access"/>.
     </para>
    </step>
    <step>
     <para>
      If using DUD, install/reinstall/update the faulty device driver
      package. Always make sure the installed kernel version exactly matches
      the version of the driver you are installing.
     </para>
     <para>
      If fixing faulty kernel update installation, you can install the
      original kernel from the installation media with the following
      procedure.
     </para>
     <substeps>
      <step>
       <para>
        Identify your DVD device with <command>hwinfo --cdrom</command> and
        mount it with <command>mount /dev/sr0 /mnt</command>.
       </para>
      </step>
      <step>
       <para>
        Navigate to the directory where your kernel files are stored on the
        DVD, for example <command>cd /mnt/suse/x86_64/</command>.
       </para>
      </step>
      <step>
       <para>
        Install required <systemitem>kernel-*</systemitem>,
        <systemitem>kernel-*-base</systemitem>, and
        <systemitem>kernel-*-extra</systemitem> packages of your flavor with
        the <command>rpm -i</command> command.
       </para>
      </step>
      <step>
       <para>
        After the installation finishes, check that a new menu entry
        relevant for the newly installed kernel was added to the boot loader
        configuration file (<filename>/boot/grub/menu.lst</filename> for
        <systemitem>grub</systemitem>).
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Update configuration files and reinitialize the boot loader if needed.
      For more information, see
      <xref
     linkend="sec.trouble.data.recover.rescue.grub"/>
     </para>
    </step>
    <step>
     <para>
      Remove any bootable media from the system drive and reboot.
     </para>
    </step>
   </procedure>
  </sect4>
 </sect3>
</sect2>
