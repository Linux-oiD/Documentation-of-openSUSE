<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- 2010-09-13, ke: I'd remove all these comparisons with the old tools (rsh,
                     telnet, etc.  By now, ssh is available since quite some
                     years and most user probably do not know that much about
                     these lecagy tools.  It would probably be enough just to
                     mention these tools at the beginning of this chapter? -->
<!-- 2010-09-13, ke: Do we want to relace "host &exampleserver;" with
                     <literal>&exampleserver;</literal>"? -->
<chapter id="cha.ssh">
 <title>SSH: Безопасная работа в сети</title>
<!-- "endofrange" are also commented ATM
 <indexterm id="idx.SSH" class="startofrange">
  <primary>SSH</primary>
 </indexterm>
 <indexterm id="idx.security_SSH" class="startofrange">
  <primary>security</primary>
  <secondary>SSH</secondary>
 </indexterm>
--><indexterm>
 <primary>configuring</primary>
 <secondary>SSH</secondary></indexterm><indexterm>
 <primary>security</primary>
 <secondary>telnet</secondary></indexterm>
 <abstract>
  <para>
   Часто бывает необходимо получить доступ к компьютеру удаленно.
   Если пользователь отправляет логин и пароль в виде обычного текста,
   они могут быть перехваченны и использованны злоумышеленником для того,
   чтобы получить доступ к удаленной системе от именни этого пользователя.
   Это откроет доступ нападавшему ко всем файлам пользователя, так же
   может быть использован для попытки получения
   <systemitem class="username">root</systemitem> привилегий или попытки
   проникновения на другую систему. В прошлом для удаленных соединений
   использовалась telnet, которая не шифрует передаваемый траффик и не
   предпринимает ничего для предотвращения прослушивания. Есть и другие
   незащищенные каналы связи, создаваемые например при использовании FTP
   или других программ для копирования через сеть.
  </para>
 </abstract>
 <para>
  Комплект программ SSH обеспечивает необходимую защиту, шифруя передаваемый траффик,
  включая логин и пароль. При использовании SSH данные все же могут быть перехвачены,
  но без ключа, использующегося для шифрования, их невозможно будет расшифровать. Таким
  образом SSH обеспечивает безопасное соединение в небезопасной сети, такой как интернет.
  Комплект программ SSH доступен в &productname; в пакете OpenSSH.
 </para>
 <sect1 id="sec.ssh.impl">
  <title>Пакет OpenSSH</title><indexterm>

  <primary>OpenSSH</primary>

  <see>SSH</see></indexterm>

  <para>
    В &productname; пакет OpenSSH установлен по умолчанию. Программы
    <command>ssh</command>, <command>scp</command>, и <command>sftp</command>
    предоставляют альтернативу <command>telnet</command>, <command>rlogin</command>,
    <command>rsh</command>, <command>rcp</command> и <command>ftp</command>.
    В конфигурации по умолчанию доступ к &productname; возможен только с помощью
    служебных программ из комплекта OpenSSH, и только если запущен <systemitem>sshd</systemitem>
    и открыты соответствующие порты в брандмауэре.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.programm">
  <title>ssh</title><indexterm>

  <primary>SSH</primary>

  <secondary>ssh</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh</secondary></indexterm>

  <para>
   Используя ssh, можно подключиться к удаленным системам и работать в
   интерактивном режиме. Это заменяет и telnet и rlogin. Программа slogin является
   всего лишь линком на ssh. Например, для того, чтобы залогиниться в системе 
   <literal>&exampleserver;</literal>, используйте команду
   <command>ssh</command>&nbsp;<option>&exampleserver;</option>, после чего
   надо будет ввести пароль, т.е. пройти аутентификацию в системе
   <literal>&exampleserver;</literal>.
  </para>

  <para>
   После успешной аутентификации можно использовать либо консоль, либо
   интерактивные приложения, такие как &yast;. Если имя пользователся на локальной
   машине отличается от имени на удаленной, используйте команду
   <command>ssh&nbsp;-l augustine &exampleserver;</command> или
   <command>ssh&nbsp;augustine@&exampleserver;</command>.
  </para>

  <para>
   Кроме того, ssh позволяет выполнять команды на удаленных системмах, используя
   rsh. В следующем примере запускается команда <command>uptime</command> на
   машине &exampleserver; и создается директория с именем <filename>tmp</filename>.
   Вывод команды можно видеть на локальном терминале машины системы &wsI;.
  </para>

<screen>ssh otherplanet "uptime; mkdir tmp"
Password:
1:21pm  up  2:17,  9 users,  load average: 0.15, 0.04, 0.02</screen>

  <para>
   Кавычки здесь необходимы, чтобы посылать обе инструкции в одной команде.
   Вторая команда создает директорию <filename>tmp</filename> в системе
   &exampleserver; cразу после окончания работы <command>uptime</command>.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.copy">
  <title>scp&mdash;безопасное копирование</title><indexterm>

  <primary>SSH</primary>

  <secondary>scp</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>scp</secondary></indexterm>

  <para>
   scp копирует файлы на удаленную машину. Это более безопасная
   замена для rcp. Например
   <command>scp&nbsp;MyLetter.tex
   &exampleserver;:</command> скопирует файл <filename>MyLetter.tex</filename>
   из системы &wsI; в &exampleserver;. Если имена пользователей отличаются
   в системах &wsI; и &exampleserver;, укажите его, используя такой формат:
   <option>username@host</option>. Ключ <option>-l</option> имеет другое
   значение для этой команды.
  </para>

  <para>
   После того, как правильный пароль введен, scp начинает передачу данных и
   показывает растущий ряд звездочек, имитируя процентное соотношение выполненного
   процесса. Кроме того, программа показывает предполагаемое время до его завершения.
   Используя ключ <option>-q</option> программа не будет ничего выводить на терминал.
  </para>

  <para>  
   scp также поддерживает рекурсивное копирование. Команда
   <command>scp&nbsp;-r src/ &exampleserver;:backup/</command> скопирует содержимое
   всей директории <filename>src</filename>, включая все поддиректории, в
   <filename>backup</filename> в системе &exampleserver;.
   Если эти поддиректории не существуют, они будут созданны автоматически.
  </para>

  <para>
    При использовании ключа <option>-р</option>, scp сохранит дату последнего
    изменения как у источника. Ключ <option>-C</option> позволит сжать передаваеммые
    данные. Это минимизирует объем данных для передачи, но нагружает процессор.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.sftp">
  <title>sftp&mdash;безопасная передача файлов</title><indexterm>

  <primary>SSH</primary>

  <secondary>sftp</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>sftp</secondary></indexterm>

  <para>   
   sftp программа может использоваться вместо scp для безопасной передачи файлов.
   Во время sftp сессии доступны многие из команд, используемых при работе с ftp.
   Использование sftp может быть более лучшим выбором чем scp,
   особенно если не известны имена копируемых файлов.
  </para>
 </sect1>
 <sect1 id="sec.ssh.sshdserver">
  <title>Демон SSH (sshd)&mdash;серверная часть</title><indexterm>

  <primary>SSH</primary>

  <secondary>daemon</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>sshd</secondary></indexterm>

  <para>    
   Для работы с программами ssh и scp в фоновом режиме должнен быть запущен
   SSH демон, который будет использовать порт <literal>22 TCP/IP</literal>.
   Демон генерирует три пары ключей при запуске в первый раз. Каждая пара
   стоит из секретного и открытого ключа.
   Чтобы гарантировать безопасность соединения через SSH, доступ к файлу с
   секретным ключем должен быть только у системного администратора. Именно
   такие права имеет этот файл по умолчанию. Секретный ключ используется только
   локальным SSH демоном и не должен быть предоставлен кому-то ещё. Открытый
   ключ (узнаваемый по расширению файла <filename>.pub</filename>) отправляется
   клиенту, запросившему соединение. Файл, в котором находится открытый ключ,
   может прочитать любой пользователь в системе.
   <indexterm>
   <primary>SSH</primary>
   <secondary>key pairs</secondary>
   </indexterm>
  </para>

  <para>
   Связь начинает SSH-клиент. SSH-демон ожидает запроса от SSH-клиента
   для создания соединения. Первым шагом они обмениваются информацией
   идентификации, проверяя протокол и версию SSH, а так же уточняя номер
   порта, т.к. дочерние процессы, порожденные SSH демоном, могут
   обслуживать несколько SSH-сессий одновременно.
  </para>

  <para>
   При связи между SSH-сервером и SSH-клиентом OpenSSH поддерживает
   первую и вторую версию протокола SSH. Вторая версия используется по
   умолчанию. Если Вы хотите использовать первую версию, используйте ключ
   <option>-1</option>.
  </para>

  <para>
   При использовании версии&nbsp;1, SSH-сервер посылает свой открытый ключ
   и так называемый "ключ сервера", которые генерируются раз в час. На основании
   этих ключей SSH-клиент генерирует ключ сессии, который в последствии он
   посылает SSH-серверу. SSH-клиент также говорит серверу какой метод шифрования
   использовать. Вторая версия протокола SSH не требуют ключа сервера. Обе
   стороны используют алгоритм Диффи-Хеллмана (Diffie-Hellman) для обмена ключами.
  </para>

  <para>  
   Секретный и серверный ключи необходимы для расшифровки ключа сессии и не
   могут быть получены, при использовании лишь открытых ключей. Только при
   соединении SSH-демон может расшифровать ключ сессии, используя свои секретные
   ключи. Эта начальная фаза установки соедининения более детально будет показана
   (включая отладочную информацию) при использовании ключа <option>-v</option>.
  </para>

  <para>
   Клиент сохраняет открытые host-ключи в фaйле
   <filename>~/.ssh/known_hosts</filename>, после первого соединения с удаленной
   системой. Это предотвращает любые попытки "нападений посредине" внешними SSH
   серверами, использующими поддельные имена или IP-адреса. Такие нападения будут
   сразу же обнаружены по отличному ключу, которого нет в
   <filename>~/.ssh/known_hosts</filename> или неспособностью сервера расшифровать
   ключ сессии из-за отсутсвия соответствующих секретных ключей. 
  </para>

  <para>  
   Рекомендуестся сохранять секретные и открытые ключи, которые находятся в
   <filename>/etc/ssh/</filename>, на каком-нибудь безопасном внешнем носителе.
   В этом случае эти ключи могут быть снова использованны, к примеру, после
   переустановки системы.
  </para>
 </sect1>
 <sect1 id="sec.ssh.authentic">
  <title>Механизм аутентификации SSH</title><indexterm>

  <primary>SSH</primary>

  <secondary>механизм аутентификации</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh-keygen</secondary></indexterm>

  <para>
   Аутентификация в своей простейшей форме, как упоминалось выше, это просто ввод
   пароля. Цель SSH сосоит в том, чтобы предоставить пользователю безопасное программное
   обеспечение, которое так же просто в использовании. Поскольку при создании подразумевалась
   альтернатива rsh и rlogin, SSH так же предоставило очень простые методы аутентификации,
   подходящие для ежедневного использования. Достигается это посредством еще одной пары
   ключей, создаваемых пользователем. В составе openssh-пакета специально для этого есть
   вспомогательная программа ssh-keygen. После команд
   <command>ssh-keygen&nbsp;-t rsa</command> или <command>ssh-keygen&nbsp;-t dsa</command>,
   генерируется эта пара ключей.
  </para><indexterm>

  <primary>SSH</primary>

  <secondary> key pairs</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-keygen</secondary></indexterm>

  <para>
   Подтвердите использование установок по умолчанию и введите пароль. Пароль должен
   содержать (рекомендованное количество для процедуры, описанной тут) от 10 до 30
   символов. Не используйте простые или короткие слова или фразы. Подтвердите пароль
   (введите его еще раз). После этого секретный и открытый ключи, в этом примере,
   будут сохраненны в <filename>id_rsa</filename> и <filename>id_rsa.pub</filename>.
  </para>

  <para>
   Используйте <command>ssh-keygen -p -t rsa</command> или
   <command>ssh-keygen -p -t dsa</command>, чтобы изменить пароль. Скопируйте открытый ключ
   (<filename>id_rsa.pub</filename> в этом примере) на другую машину и сохраните его в
   <filename>~/.ssh/authorized_keys</filename>. При следующем соединении будет предложенно
   идентифицировать cебя, т.е. подтвердить пароль еще раз. Если этого не произойдет,
   проверьте расположение и содержимое этих файлов.
  </para>

  <para>  
   Эта процедура не так удобна, чем ввод пароля при каждом новом соединении. По
   этой причине пакет openssh предоставляет другую программу,
   ssh-agent, который сохраняет секретные ключи на время X-сессии. Все X-сессии
   запускаются как дочерний процесс ssh-agent. Самый простой способ сделать это
   - установить параметр <literal>yes</literal> для переменной <literal>usessh</literal>
   в начале файла <filename>.xsession</filename>, выйти и зайти в систему снова,
   используя, к примеру, KDM или GDM. Можно так же просто сделать
   <command>ssh-agent startx</command>.
  </para><indexterm>

  <primary>configuration files</primary>

  <secondary>.xsession</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-agent</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh-agent</secondary></indexterm>

  <para>
   Now you can use <command>ssh</command> or <command>scp</command> as
   usual. If you have distributed your public key as described above, you
   are no longer prompted for your password. Take care of terminating your X
   session or locking it with a password protection application, such as
   xlock.
  </para>

  <note>
<!--fix for bug #398647-->
   <title>File Permissions for Host-Based Authentication</title>
   <para>
    If the host-based authentication is to be used, the file
    <filename>/usr/lib/ssh/ssh-keysign</filename> or
    <filename>/usr/lib64/ssh/ssh-keysign</filename> should have setuid bit
    set, which is not the default setting in &productname;. In such a case,
    set the file permissions manually. You should use
    <filename>/etc/permissions.local</filename> for this purpose, to make
    sure that the setuid bit is preserved after security updates of openssh.
   </para>
  </note>

<!--bg: you are right, that we are since quite some time running version
2. OTOH often ssh is used to log into/from other unix workstations, that
sometimes only provide version 1. Thats why I would rather like to
keep the information in here. -->

<!--ke, 2010-09-13: by now, we can shorten it.  Those who still depend on
                    version 1, probably figured out which settings are
                    required.
-->
 </sect1>
 <sect1 id="sec.ssh.pipe">
  <title>X, аутентификация и механизмы переадресации</title><indexterm>

  <primary>SSH</primary>

  <secondary>X and</secondary></indexterm><indexterm>

  <primary>X</primary>

  <secondary>SSH and</secondary></indexterm>

  <para>
   Помимо описанных выше возможностей, через SSH также можно работать с
   удаленными X-приложениями. При использовании <command>ssh</command>
   с ключем <option>-X</option>, переменная <envar>DISPLAY</envar>
   автоматически устанавливается на удаленной машине, и весь вывод
   X-приложения экспортируется через SSH-соединение. Другими словами,
   X-приложение запускается на удаленной системе, но работать с ней можно
   локально, при этом передаваемые данные не могут быть перехвачены
   злоумышленником.
  </para>

  <para>
   При использовании ключа <option>-A</option>, для механизма аутентификации ssh-agent
   используется следующая машина. Таким образом, можно подключаться с различных
   машин без необходимости вводить пароль. Этот механизм работает лишь в том
   случае, если на них есть открытый ключ пользователя, от имени которого создается
   соединение.
  </para><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-agent</secondary></indexterm>

  <para>
   Оба механизма не используются по умолчанию, но могут быть в любое время включены.
   Для этого отредактируйте системный конфигурационный файл
   <filename>/etc/ssh/sshd_config</filename> или пользовательский
   <filename>~/.ssh/config</filename>.
  </para><indexterm>

  <primary>configuration files</primary>

  <secondary>sshd_config</secondary></indexterm>

  <para>
   ssh также может быть использован для перенаправления TCP/IP соединения.
   В приведенном ниже примере SSH перенаправляет SMTP и POP3 порт:
  </para>

<screen>ssh -L 25:&exampleserver;:25 &wsI;</screen>

  <para>
   С помощью этой команды, все соединения на 25 порт (SMTP) системы &wsI; будут
   перенаправляться через зашифрованный канал на SMTP порт системы &exampleserver;.
   Это особенно полезно для тех, кто использует SMTP серверы без SMTP-AUTH или 
   POP-before-SMTP. Электронная почта, откуда бы она ни пришла, будет переданна для
   дальнейшей доставки <quote>домашнему</quote> почтовому серверу. Точно так же все
   POP3 запросы (порт&nbsp;110) на &wsI; могут быть перенаправленны на POP3 порт
   &exampleserver;, при помощи следующей команды:
  </para>

<screen>ssh -L 110:&exampleserver;:110 &wsI;</screen>

  <para>
   Обе команды должны быть выполненны с правами
   <systemitem class="username">root</systemitem>,
   так как соединение использует привилегированные порты. При использовании
   электронной почты обычными пользователями будет использоваться SSH соединение.
   Дополнительную информацию можно найти в man-руководствах для каждой из программ,
   описанной выше, а также в документации проекта OpenSSH:
   <filename>/usr/share/doc/packages/openssh</filename>.
  </para>
 </sect1>
 <sect1 id="sec.ssh.yast">
  <title>Настройка SSH-демона с помощью &yast;</title>

  <para os="osuse">
<!-- FIXME: check sled/sles, 2010-09-13, ke -->
   &yast;-модуль, отвечающий за настройку SSHD, не устанавливается
   по умолчанию. Для его установки запустите &yast;, выберете
   <menuchoice><guimenu>Software</guimenu> <guimenu>Software
   Management</guimenu></menuchoice> и найдите и установите
   пакет <systemitem>yast2-sshd</systemitem>.
  </para>

  <para>
   Для настройки sshd-сервера с помошью &yast; запустите &yast; и выберете
   <menuchoice> <guimenu>Сетевые службы</guimenu> <guimenu>Настройка SSHD</guimenu>
   </menuchoice>. Затем сделайте следующее:
  </para>

  <procedure>
   <step>
    <para>
     На вкладке <guimenu>Общие</guimenu>, в таблице <guimenu>SSHD TCP Ports</guimenu>,
     выберите порты, которые должен использовать SSHD. По умолчанию
     используется порт 22. Вы можете выбрать несколько портов. Чтобы добавить
     новый порт, нажмите кнопку <guimenu>Добавить</guimenu>, введите
     номер порта и нажмите кнопку <guimenu>ОК</guimenu>. Для удаления порта,
     найдите его в таблице, нажмите кнопку <guimenu>Удалить</guimenu> и
     подтвердите удаление.
    </para>
   </step>
   <step>
    <para>
     На вкладке "Общие" находятся и другие настройки, поддерживаемые sshd-демоном.
     Для отключения переадресации TCP (TCP Forwarding), снимите флажок
     <guimenu>Разрешить TCP переадресацию</guimenu>. Отключение переадресации TCP
     не улучшает безопасность, если пользователи не имеют доступа к терминалу,
     так как они всегда могут установить свои собственные переадресации. См.
     <xref linkend="sec.ssh.pipe"/> для получения дополнительной информации о
     переадресации TCP.
    </para>
    <para>
     Чтобы отключить переадресацию X, снимите флажок <guimenu>Разрешить X11
     переадресацию</guimenu>. Если эта опция отключена, любые запросы переадресации
     X11 вперед будут приводить к ошибке. Однако пользователи всегда могут установить
     свою собственную переадресацию. См.<xref linkend="sec.ssh.pipe"/> для получения
     дополнительной информации о переадресации X.
    </para>
    <para>
     Опция <guimenu>Разрешить сжатие</guimenu> определяет, должна ли связь между
     сервером и клиентам быть сжата.
    </para>
   </step>
   <step>
    <para>
     Вкладка <guimenu>Настройки входа в систему</guimenu> содержит общие настройки входа
     в систему и аутентификации. В <guimenu>Показывать Сообщение дня после входа в
     систему</guimenu> определяется, должен ли sshd выводить сообщение из
     <filename>/etc/motd</filename> при интерактивном режиме входа в систему.
     Если Вы хотит отключить возможность входить в систему пользователю 
     <systemitem class="username">root</systemitem>, отключите
     <guimenu>Разрешать вход администратора в систему</guimenu>.
    </para>
    <para>
     В <guimenu>Максимальном числе попыток аутентификации</guimenu> устанавливается
     максимальное количество попыток аутентификации за одно соединение.
<!-- "Password Authentication"is gone since 2009-01-29 (bnc #469207):
          2010-09-13, ke -->
<!--
     <guimenu>Password Authentication</guimenu> specifies whether password
     authentication is allowed.
     -->
     <guimenu>Аутентификация RSA</guimenu> определяет, разрешенна ли аутентификация RSA.
     Этот параметр применяется только к первой версии протокола SSH.
     <guimenu>Аутентификация по открытому ключу</guimenu> определяет, разрешеа ли
     аутентификация пользователя с помощью открытого ключа. Этот параметр используется
     только во второй версии протокола SSH.
    </para>
   </step>
   <step>
    <para>
     На вкладке <guimenu>Протокол и шифрования</guimenu> определяются версии протокола
     SSH, которые должны поддерживатся. Вы можете выбрать первую или вторую версию, а
     так же параллельную поддержку обоих SSH-протоколов.
    </para>
    <para>
     В <guimenu>Поддерживаемые методы шифрования</guimenu> перечисленны все поддерживаемые
     алгоритмы шифрования. Вы можете удалить шифр, выбрав его в списке и нажав кнопку
     <guimenu>Удалить</guimenu>. Чтобы добавить шифр, выберите его из выпадающего меню и
     нажмите кнопку <guimenu>Добавить</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Нажмите <guimenu>Finish</guimenu> для сохранения настроек.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.security.ssh.moreinfo">
  <title>Дополнительная информация</title>

  <para/>

  <variablelist>
   <varlistentry>
    <term><ulink url="http://www.openssh.com/ru"/>
    </term>
    <listitem>
     <para>
      Страница проекта OpenSSH
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>ssh_config</option>
    </term>
    <listitem>
     <para>
      man-страница о конфигурационных файлах OpenSSH.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>sshd</option></term>
   <listitem>
     <para>
      man-страница о OpenSSH-демоне
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>scp</option>
    </term>
    <term><command>man</command>&nbsp;<option>sftp</option>
    </term>
    <term><command>man</command>&nbsp;<option>slogin</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-add</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-agent</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-copy-id</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keyconvert</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keygen</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keyscan</option>
    </term>
    <listitem>
     <para>
      man-страницы о программах копирования файлов (<command>scp</command>,
      <command>sftp</command>), login (<command>slogin</command>,
      <command>ssh</command>), и ключах.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
