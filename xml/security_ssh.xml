<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- 2010-09-13, ke: I'd remove all these comparisons with the old tools (rsh,
                     telnet, etc.  By now, ssh is available since quite some
                     years and most user probably do not know that much about
                     these lecagy tools.  It would probably be enough just to
                     mention these tools at the beginning of this chapter? -->
<!-- 2010-09-13, ke: Do we want to relace "host &exampleserver;" with
                     <literal>&exampleserver;</literal>"? -->
<chapter id="cha.ssh">
 <title>SSH: Безопасная работа в сети</title>
<!-- "endofrange" are also commented ATM
 <indexterm id="idx.SSH" class="startofrange">
  <primary>SSH</primary>
 </indexterm>
 <indexterm id="idx.security_SSH" class="startofrange">
  <primary>security</primary>
  <secondary>SSH</secondary>
 </indexterm>
--><indexterm>
 <primary>configuring</primary>
 <secondary>SSH</secondary></indexterm><indexterm>
 <primary>security</primary>
 <secondary>telnet</secondary></indexterm>
 <abstract>
  <para>
   Часто бывает необходимо получить доступ к компьютеру удаленно.
   Если пользователь отправляет логин и пароль в виде обычного текста,
   они могут быть перехваченны и использованны злоумышеленником для того,
   чтобы получить доступ к удаленной системе от именни этого пользователя.
   Это откроет доступ нападавшему ко всем файлам пользователя, так же
   может быть использован для попытки получения
   <systemitem class="username">root</systemitem> привилегий или попытки
   проникновения на другую систему. В прошлом для удаленных соединений
   использовалась telnet, которая не шифрует передаваемый траффик и не
   предпринимает ничего для предотвращения прослушивания. Есть и другие
   незащищенные каналы связи, создаваемые например при использовании FTP
   или других программ для копирования через сеть.
  </para>
 </abstract>
 <para>
  Комплект программ SSH обеспечивает необходимую защиту, шифруя передаваемый траффик,
  включая логин и пароль. При использовании SSH данные все же могут быть перехвачены,
  но без ключа, использующегося для шифрования, их невозможно будет расшифровать. Таким
  образом SSH обеспечивает безопасное соединение в небезопасной сети, такой как интернет.
  Комплект программ SSH доступен в &productname; в пакете OpenSSH.
 </para>
 <sect1 id="sec.ssh.impl">
  <title>Пакет OpenSSH</title><indexterm>

  <primary>OpenSSH</primary>

  <see>SSH</see></indexterm>

  <para>
    В &productname; пакет OpenSSH установлен по умолчанию. Программы
    <command>ssh</command>, <command>scp</command>, и <command>sftp</command>
    предоставляют альтернативу <command>telnet</command>, <command>rlogin</command>,
    <command>rsh</command>, <command>rcp</command> и <command>ftp</command>.
    В конфигурации по умолчанию доступ к &productname; возможен только с помощью
    утилит из комплекта OpenSSH, и только если запущен <systemitem>sshd</systemitem>
    и открыты соответствующие порты в firewall.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.programm">
  <title>ssh</title><indexterm>

  <primary>SSH</primary>

  <secondary>ssh</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh</secondary></indexterm>

  <para>
   Используя ssh, можно подключиться к удаленным системе и работать на ней в
   интерактивном режиме. Это заменяет и telnet и rlogin. Программа slogin является
   всего лишь линком на ssh. Например, для того, чтобы залогиниться в системе 
   <literal>&exampleserver;</literal>, используйте команду
   <command>ssh</command>&nbsp;<option>&exampleserver;</option>, после чего
   надо будет ввести пароль, т.е. пройти аутентификацию в системе
   <literal>&exampleserver;</literal>.
  </para>

  <para>
   После успешной аутентификации Вы можете использовать либо консоль, либо
   интерактивные приложения, такие как &yast;. Если имя пользователся на локальной
   машине отличается от имени на удаленной, используйте команду
   <command>ssh</command>&nbsp;<option>-l augustine
   &exampleserver;</option> или
   <command>ssh</command>&nbsp;<option>augustine@&exampleserver;</option>.
  </para>

  <para>
   Кроме того, ssh позволяет выполнять команды на удаленных системмах, используя
   rsh. В следующем примере запускается команда <command>uptime</command> на
   машине &exampleserver; и создается директория с именем <filename>tmp</filename>.
   Вывод команды можно видеть на локальном терминале машины системы &wsI;.
  </para>

<screen>ssh otherplanet "uptime; mkdir tmp"
Password:
1:21pm  up  2:17,  9 users,  load average: 0.15, 0.04, 0.02</screen>

  <para>
   Кавычки здесь необходимы, чтобы посылать обе инструкции в одной команде.
   Вторая команда создает директорию <filename>tmp</filename> в системе
   &exampleserver; cразу после окончания работы <command>uptime</command>.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.copy">
  <title>scp&mdash;безопасное копирование</title><indexterm>

  <primary>SSH</primary>

  <secondary>scp</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>scp</secondary></indexterm>

  <para>
   scp копирует файлы на удаленную машину. Это более безопасная
   замена для rcp. Например
   <command>scp</command>&nbsp;<option>MyLetter.tex
   &exampleserver;:</option> скопирует файл <filename>MyLetter.tex</filename>
   из системы &wsI; в &exampleserver;. Если имена пользователей отличаются
   в системах &wsI; и &exampleserver;, укажите его, используя такой формат:
   <option>username@host</option>. Опция <option>-l</option> имеет другое
   значение для этой команды.
  </para>

  <para>
   После того, как правильный пароль введен, scp начинает передачу данных и
   показывает растущий ряд звездочек, имитируя процентное соотношение выполненного
   процесса. Кроме того, программа показывает предполагаемое время до его завершения.
   Используя ключ <option>-q</option> программа не будет ничего выводить на терминал.
  </para>

  <para>  
   scp также поддерживает рекурсивное копирование. Команда
   <command>scp</command>&nbsp;<option>-r src/
   &exampleserver;:backup/</option> скопирует содержимое всей директории
   <filename>src</filename>, включая все поддиректории, в
   <filename>backup</filename> в системе &exampleserver;.
   Если эти поддиректории не существуют, они будут созданны автоматически.
  </para>

  <para>
    Используя ключ <option>-р</option>, scp оставит дату последнего изменения
    без изменения. Ключ <option>-C</option> позволит сжать передаваеммые
    данные. Это минимизирует объем данных для передачи, но нагружает процессор.
  </para>
 </sect1>
 <sect1
  id="sec.ssh.sftp">
  <title>sftp&mdash;безопасная передача файлов</title><indexterm>

  <primary>SSH</primary>

  <secondary>sftp</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>sftp</secondary></indexterm>

  <para>   
   sftp программа может использоваться вместо scp для безопасной передачи файлов.
   Во время sftp сессии Вы можете использовать многие из команд, используемых
   при работе с ftp. Использование sftp может быть более лучшим выбором чем scp,
   особенно если Вам не известны имена копируемых файлов.
  </para>
 </sect1>
 <sect1 id="sec.ssh.sshdserver">
  <title>Демон SSH (sshd)&mdash;серверная часть</title><indexterm>

  <primary>SSH</primary>

  <secondary>daemon</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>sshd</secondary></indexterm>

  <para>    
   Для работы с программами ssh и scp в фоновом режиме должнен быть запущен
   SSH демон, который будет использовать <literal>TCP/IP 22</literal> порт.
   Демон генерирует три пары ключей при запуске в первый раз. Каждая пара
   стоит из секретного и открытого ключа.
   Чтобы гарантировать безопасность соединения через SSH, доступ к файлу с
   секретным ключем должен быть только у системного администратора. Именно
   такие права имеет этот файл по умолчанию. Секретный ключ используется только
   локальным SSH демоном и не должен быть предоставлен кому-то ещё. Открытый
   ключ (узнаваемый по расширению файла <filename>.pub</filename>) отправляется
   клиенту, запрашиваемому соединение. Файл, в котором находится открытый ключ,
   может прочитать любой пользователь в системе.
   <indexterm>
   <primary>SSH</primary>
   <secondary>key pairs</secondary>
   </indexterm>
  </para>

  <para>
   Связь начинает SSH-клиент. SSH-демон ожидает запроса от SSH-клиента
   для создания соединения. Первым шагом они обмениваются информацией
   идентификации, проверяя протокол и версию SSH, а так же уточняя номер
   порта, т.к. дочерние процессы, порожденные SSH демоном, могут
   обслуживать несколько SSH-сессий одновременно.
  </para>

  <para>
   При связи между SSH-сервером и SSH-клиентом OpenSSH поддерживает
   первую и вторую версию протокола SSH. Вторая версия используется по
   умолчанию. Если Вы хотите использовать первую версию, используйте ключ
   <option>-1</option>.
  </para>

  <para>
   При использовании версии&nbsp;1, SSH-сервер посылает свой открытый ключ
   и так называемый "ключ сервера", которые генерируются раз в час. На основании
   этих ключей SSH-клиент генерирует ключ сессии, который в последствии он
   посылает SSH-серверу. SSH-клиент также говорит серверу какой метод шифрования
   использовать. Вторая версия протокола SSH не требуют ключа сервера. Обе
   стороны используют алгоритм Диффи-Хеллмана (Diffie-Hellman) для обмена ключами.
  </para>

  <para>  
   Секретный и серверный ключи необходимы для расшифровки ключа сессии и не
   могут быть получены, при использовании лишь открытых ключей. Только при
   соединении SSH-демон может расшифровать ключ сессии, используя свои секретные
   ключи. Эта начальная фаза установки соедининения более детально будет показана
   (включая отладочную информацию) при использовании ключа <option>-v</option>.
  </para>

  <para>
   Клиент хранит открытые host-ключи в фaйле
   <filename>~/.ssh/known_hosts</filename>, после первого соединения с удаленной
   системой. Это предотвращает любые попытки "нападений посредине" внешними SSH
   серверами, использующими поддельные имена или IP-адреса. Такие нападения будут
   сразу же обнаружены по отличному ключу, которого нет в
   <filename>~/.ssh/known_hosts</filename> или неспособностью сервера расшифровать
   ключ сессии из-за отсутсвия соответствующих секретных ключей. 
  </para>

  <para>  
   Рекомендуестся сохранять секретные и открытые ключи, которые находятся в
   <filename>/etc/ssh/</filename>, на каком-нибудь безопасном внешнем носителе.
   В этом случае эти ключи могут быть снова использованны, к примеру, после
   переустановки системы.
  </para>
 </sect1>
 <sect1 id="sec.ssh.authentic">
  <title>Механизм аутентификации SSH</title><indexterm>

  <primary>SSH</primary>

  <secondary>механизм аутентификации</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh-keygen</secondary></indexterm>

  <para>
   Now the actual authentication takes place, which, in its simplest form,
   consists of entering a password as mentioned above. The goal of SSH was
   to introduce secure software that is also easy to use. Because it is
   meant to replace rsh and rlogin, SSH must also be able to provide an
   authentication method appropriate for daily use. SSH accomplishes this by
   way of another key pair, which is generated by the user. The SSH package
   provides a helper program for this: ssh-keygen. After entering
   <command>ssh-keygen</command>&nbsp;<option>-t rsa</option> or
   <command>ssh-keygen</command>&nbsp;<option>-t dsa</option>, the key pair
   is generated and you are prompted for the base filename in which to store
   the keys.
  </para><indexterm>

  <primary>SSH</primary>

  <secondary> key pairs</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-keygen</secondary></indexterm>

  <para>
   Confirm the default setting and answer the request for a passphrase. Even
   if the software suggests an empty passphrase, a text from 10 to 30
   characters is recommended for the procedure described here. Do not use
   short and simple words or phrases. Confirm by repeating the passphrase.
   Subsequently, you will see where the private and public keys are stored,
   in this example, the files <filename>id_rsa</filename> and
   <filename>id_rsa.pub</filename>.
  </para>

  <para>
   Use <command>ssh-keygen</command>&nbsp;<option>-p -t rsa</option> or
   <command>ssh-keygen</command>&nbsp;<option>-p -t dsa</option> to change
   your old passphrase. Copy the public key component
   (<filename>id_rsa.pub</filename> in the example) to the remote machine
   and save it to <filename>~/.ssh/authorized_keys</filename>. You will be
   asked to authenticate yourself with your passphrase the next time you
   establish a connection. If this does not occur, verify the location and
   contents of these files.
  </para>

  <para>
   In the long run, this procedure is more troublesome than giving your
   password each time. Therefore, the SSH package provides another tool,
   ssh-agent, which retains the private keys for the duration of an X
   session. The entire X session is started as a child process of ssh-agent.
   The easiest way to do this is to set the variable
   <literal>usessh</literal> at the beginning of the
   <filename>.xsession</filename> file to <literal>yes</literal> and log in
   via a display manager, such as KDM or GDM. Alternatively, enter
   <command>ssh-agent</command>&nbsp;<option>startx</option>.
  </para><indexterm>

  <primary>configuration files</primary>

  <secondary>.xsession</secondary></indexterm><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-agent</secondary></indexterm><indexterm>

  <primary>commands</primary>

  <secondary>ssh-agent</secondary></indexterm>

  <para>
   Now you can use <command>ssh</command> or <command>scp</command> as
   usual. If you have distributed your public key as described above, you
   are no longer prompted for your password. Take care of terminating your X
   session or locking it with a password protection application, such as
   xlock.
  </para>

  <note>
<!--fix for bug #398647-->
   <title>File Permissions for Host-Based Authentication</title>
   <para>
    If the host-based authentication is to be used, the file
    <filename>/usr/lib/ssh/ssh-keysign</filename> or
    <filename>/usr/lib64/ssh/ssh-keysign</filename> should have setuid bit
    set, which is not the default setting in &productname;. In such a case,
    set the file permissions manually. You should use
    <filename>/etc/permissions.local</filename> for this purpose, to make
    sure that the setuid bit is preserved after security updates of openssh.
   </para>
  </note>

<!--bg: you are right, that we are since quite some time running version
2. OTOH often ssh is used to log into/from other unix workstations, that
sometimes only provide version 1. Thats why I would rather like to
keep the information in here. -->

<!--ke, 2010-09-13: by now, we can shorten it.  Those who still depend on
                    version 1, probably figured out which settings are
                    required.
-->
 </sect1>
 <sect1 id="sec.ssh.pipe">
  <title>X, Authentication, and Forwarding Mechanisms</title><indexterm>

  <primary>SSH</primary>

  <secondary>X and</secondary></indexterm><indexterm>

  <primary>X</primary>

  <secondary>SSH and</secondary></indexterm>

  <para>
   Beyond the previously described security-related improvements, SSH also
   simplifies the use of remote X applications. If you run
   <command>ssh</command> with the <option>-X</option> option, the
   <envar>DISPLAY</envar> variable is automatically set on the remote
   machine and all X output is exported to the remote machine over the
   existing SSH connection. At the same time, X applications started
   remotely and locally viewed with this method cannot be intercepted by
   unauthorized individuals.
  </para>

  <para>
   By adding the <option>-A</option> option, the ssh-agent authentication
   mechanism is carried over to the next machine. This way, you can work
   from different machines without having to enter a password, but only if
   you have distributed your public key to the destination hosts and
   properly saved it there.
  </para><indexterm>

  <primary>SSH</primary>

  <secondary>ssh-agent</secondary></indexterm>

  <para>
   Both mechanisms are deactivated in the default settings, but can be
   permanently activated at any time in the systemwide configuration file
   <filename>/etc/ssh/sshd_config</filename> or the user's
   <filename>~/.ssh/config</filename>.
  </para><indexterm>

  <primary>configuration files</primary>

  <secondary>sshd_config</secondary></indexterm>

  <para>
   ssh can also be used to redirect TCP/IP connections. In the examples
   below, SSH is told to redirect the SMTP and the POP3 port, respectively:
  </para>

<screen>ssh -L 25:&exampleserver;:25 &wsI;</screen>

  <para>
   With this command, any connection directed to &wsI; port 25 (SMTP) is
   redirected to the SMTP port on &exampleserver; via an encrypted channel.
   This is especially useful for those using SMTP servers without SMTP-AUTH
   or POP-before-SMTP features. From any arbitrary location connected to a
   network, e-mail can be transferred to the <quote>home</quote> mail server
   for delivery. Similarly, all POP3 requests (port&nbsp;110) on &wsI; can
   be forwarded to the POP3 port of &exampleserver; with this command:
  </para>

<screen>ssh -L 110:&exampleserver;:110 &wsI;</screen>

  <para>
   Both commands must be executed as
   <systemitem class="username">root</systemitem>, because the connection is
   made to privileged local ports. E-mail is sent and retrieved by normal
   users in an existing SSH connection. The SMTP and POP3 host must be set
   to <literal>localhost</literal> for this to work. Additional information
   can be found in the manual pages for each of the programs described above
   and also in OpenSSH package documentation under
   <filename>/usr/share/doc/packages/openssh</filename>.
  </para>
 </sect1>
 <sect1 id="sec.ssh.yast">
  <title>Настройка SSH-демона с помощью &yast;</title>

  <para os="osuse">
<!-- FIXME: check sled/sles, 2010-09-13, ke -->
   &yast;-модуль, отвечающий за настройку SSHD, не устанавливается
   по умолчанию. Для его установки запустите &yast;, выберете
   <menuchoice><guimenu>Software</guimenu> <guimenu>Software
   Management</guimenu></menuchoice> и найдите и установите
   пакет <systemitem>yast2-sshd</systemitem>.
  </para>

  <para>
   Для настройки sshd-сервера с помошью &yast; запустите &yast; и выберете
   <menuchoice> <guimenu>Сетевые службы</guimenu> <guimenu>Настройка SSHD</guimenu>
   </menuchoice>. Затем сделайте следующее:
  </para>

  <procedure>
   <step>
    <para>
     На вкладке <guimenu>Общие</guimenu>, в таблице <guimenu>SSHD TCP Ports</guimenu>,
     выберите порты, которые должен использовать SSHD. По умолчанию
     используется порт 22. Вы можете выбрать несколько портов. Чтобы добавить
     новый порт, нажмите кнопку <guimenu>Добавить</guimenu>, введите
     номер порта и нажмите кнопку <guimenu>ОК</guimenu>. Для удаления порта,
     найдите его в таблице, нажмите кнопку <guimenu>Удалить</guimenu> и
     подтвердите удаление.
    </para>
   </step>
   <step>
    <para>
     На вкладке "Общие" находятся и другие настройки, поддерживаемые sshd-демоном.
     Для отключения переадресации TCP (TCP Forwarding), снимите флажок
     <guimenu>Разрешить TCP переадресацию</guimenu>. Отключение переадресации TCP
     не улучшает безопасность, если пользователи не имеют доступа к терминалу,
     так как они всегда могут установить свои собственные переадресации. См.
     <xref linkend="sec.ssh.pipe"/> для получения дополнительной информации о
     переадресации TCP.
    </para>
    <para>
     Чтобы отключить переадресацию X, снимите флажок <guimenu>Разрешить X11
     переадресацию</guimenu>. Если эта опция отключена, любые запросы переадресации
     X11 вперед будут приводить к ошибке. Однако пользователи всегда могут установить
     свою собственную переадресацию. См.<xref linkend="sec.ssh.pipe"/> для получения
     дополнительной информации о переадресации X.
    </para>
    <para>
     Опция <guimenu>Разрешить сжатие</guimenu> определить, должна ли связь между
     сервером и клиентам быть сжата.
    </para>
   </step>
   <step>
    <para>
     Вкладка <guimenu>Настройки входа в систему</guimenu> содержит общие настройки входа
     в систему и аутентификации. В <guimenu>Показывать Сообщение дня после входа в
     систему</guimenu> определяется, должен ли sshd выводить сообщение из
     <filename>/etc/motd</filename> при интерактивном режиме входа в систему.
     Если Вы хотит отключить возможность входить в систему пользователю 
     <systemitem class="username">root</systemitem>, отключите
     <guimenu>Разрешать вход администратора в систему</guimenu>.
    </para>
    <para>
     В <guimenu>Максимальном числе попыток аутентификации</guimenu> устанавливается
     максимальное количество попыток аутентификации за одно соединение.
<!-- "Password Authentication"is gone since 2009-01-29 (bnc #469207):
          2010-09-13, ke -->
<!--
     <guimenu>Password Authentication</guimenu> specifies whether password
     authentication is allowed.
     -->
     <guimenu>Аутентификация RSA</guimenu> определяет, разрешенна ли аутентификация RSA.
     Этот параметр применяется только к первой версии протокола SSH.
     <guimenu>Аутентификация по открытому ключу</guimenu> определяет, разрешеа ли
     аутентификация пользователя с помощью открытого ключа. Этот параметр используется
     только во второй версии протокола SSH.
    </para>
   </step>
   <step>
    <para>
     На вкладке <guimenu>Протокол и шифрования</guimenu> определяются версии протокола
     SSH, которые должны поддерживатся. Вы можете выбрать первую или вторую версию, а
     так же параллельную поддержку обоих SSH-протоколов.
    </para>
    <para>
     В <guimenu>Поддерживаемые методы шифрования</guimenu> перечисленны все поддерживаемые
     алгоритмы шифрования. Вы можете удалить шифр, выбрав его в списке и нажав кнопку
     <guimenu>Удалить</guimenu>. Чтобы добавить шифр, выберите его из выпадающего меню и
     нажмите кнопку <guimenu>Добавить</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Нажмите <guimenu>Finish</guimenu> для сохранения настроек.
    </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.security.ssh.moreinfo">
  <title>Дополнительная информация</title>

  <para/>

  <variablelist>
   <varlistentry>
    <term><ulink url="http://www.openssh.com/ru"/>
    </term>
    <listitem>
     <para>
      Страница проекта OpenSSH
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>ssh_config</option>
    </term>
    <listitem>
     <para>
      man-страница о конфигурационных файлах OpenSSH SSH-клиента.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>ssh_config</option>
    </term>
    <listitem>
     <para>
      man-страница о конфигурационных файлах OpenSSH SSH-демона.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>sshd</option>
    </term>
    <listitem>
     <para>
      man-страница по OpenSSH-демону
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>man</command>&nbsp;<option>scp</option>
    </term>
    <term><command>man</command>&nbsp;<option>sftp</option>
    </term>
    <term><command>man</command>&nbsp;<option>slogin</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-add</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-agent</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-copy-id</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keyconvert</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keygen</option>
    </term>
    <term><command>man</command>&nbsp;<option>ssh-keyscan</option>
    </term>
    <listitem>
     <para>
      man-страницы о программах копирования файлов (<command>scp</command>,
      <command>sftp</command>), login (<command>slogin</command>,
      <command>ssh</command>), и ключах.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
