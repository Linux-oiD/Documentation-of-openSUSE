<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!-- fs 2008-02-25: TODO CODE 11: Make the Encrypt SIngle File section more -->
<!-- generic - the vi example only applies to ASCII text files. Point to the -->
<!-- GNOME and KDE GPG chapters for other file types -->
<!-- bg 2009-01-05: TODO CODE 11++: Make the Encrypt SIngle File section more -->
<!-- generic, when Kleopatra and Gnome N.N. descriptions are available. -->
<!-- manual mounting/unmounting crypto partitions: bug 459831 -->
<!--PM's doc requirements:
 Data encryption
 1.Advanced configuration (m)
 2.Troubleshooting (d)
 3.Escrow access configuration (i)
 -> fate entries?
-> contact persons?
Chris Rivera again :-). Fate requests are 304470, 302951, 302191,
301923, 301787, 253 and  301729
-->
<!--
304470 -> rejected for SLED11
302628 : Access to encrypted devices/partitons by dongle (for openSUSE 11.2)
302951 : Add encryption (LUKS) support to mkinitrd -> cannot setup root on crypto with installer
302191 : Support root on encrypted filesystem      -> cannot setup root on crypto with installer
301923 : Public directory support for encrypted home directories -> TODO
301787 : YaST Support for Encrypted Home Partitions -> TODO: CHECK
301729 : Learn yast2-repair handle encrypted partitions -> well... TODO
306326 : mount encrypted /home before user config (for openSUSE 11.2)
253 : Support for encrypted filesystem ->  more common information
-->
<!--
using accelerating encryption using hardware (i)(m for system z)
-->
<!--
https://bugzilla.novell.com/show_bug.cgi?id=459831
User Comment: 9733 jmortenson@novell.com
When using encryption and telling it not to mount on bootup, this is broken.
I have written BUG 459831 for this issue.
You can manually mount it up by doing the following.

se cryptsetup to unlock and setup the /dev/mapper device
jmortenson5:/sbin # ./cryptsetup luksOpen /dev/sdb2 cr_sdb2
  Enter LUKS passphrase:
  key slot 0 unlocked.
  Command successful.

jmortenson5:/sbin # ll /dev/mapper
total 0
lrwxrwxrwx 1 root root     16 2008-12-16 06:52 control - > ../device-mapper
brw- - - - - - - 1 root root 253, 0 2008-12-17 08:35 cr_sdb1
brw- - - - - - - 1 root root 253, 1 2008-12-17 08:48 cr_sdb2

Manually mount the file system
jmortenson5:/sbin # mount /dev/mapper/cr_sdb2 /mnt/encrypt-noauto
jmortenson5:/sbin # ls /mnt/encrypt-noauto
noautomounted

To remove when you are finished.
Dismount the mountpoint for the encrypted partition.
jmortenson5:/sbin # umount /mnt/encrypt-noauto/

jmortenson5:/sbin # ls /dev/mapper
control  cr_sdb1  cr_sdb2

Remove the /dev/mapper device
  jmortenson5:/sbin # ./cryptsetup luksClose /dev/mapper/cr_sdb2
jmortenson5:/sbin # ls /dev/mapper
control  cr_sdb1 
-->
<chapter id="cha.security.cryptofs">
 <title>Encrypting Partitions and Files</title><indexterm id="idx.encrypting" class="startofrange">
 <primary>encrypting</primary></indexterm><indexterm>
 <primary>file systems</primary>
 <secondary>encrypting</secondary></indexterm><indexterm>
 <primary>file systems</primary>
 <secondary>cryptofs</secondary></indexterm>
 <para>
  Most users have some confidential data on their computer that third
  parties should not be able to access. The more you rely on mobile
  computing and on working in different environments and networks, the more
  carefully you should handle your data. The encryption of files or entire
  partitions is recommended if others have network or physical access to
  your system. Laptops or removable media, such as external hard disks or
  USB sticks, are prone to being lost or stolen. Thus, it is recommended to
  encrypt the parts of your filesystem that hold confidential data.
 </para>
 <para>
  There are several ways to protect your data by means of encryption:
 </para>
 <variablelist>
  <varlistentry>
   <term>Encrypting a Hard Disk Partition</term>
   <listitem>
    <para>
     You can create an encrypted partition with &yast; during installation
     or in an already installed system. Refer to
     <xref linkend="sec.security.cryptofs.y2.part_inst"/> and
     <xref linkend="sec.security.cryptofs.y2.part_run"/> for details. This
     option can also be used for removable media, such as external hard
     disks, as described in
     <xref linkend="sec.security.cryptofs.y2.removables"/>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Creating an Encrypted File as Container</term>
   <listitem>
    <para>
     You can create an encrypted file on your hard disk or on a removable
     medium with &yast; at any time. The encrypted file can then be used to
     <emphasis>store</emphasis> other files or folders. For more
     information, refer to
     <xref linkend="sec.security.cryptofs.y2.container"/>.
<?dbfo-need height="15em"?>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Encrypting Home Directories</term>
   <listitem>
    <para>
     With &productname;, you can also create encrypted user home
     directories. When the user logs in to the system, the encrypted home
     directory is mounted and the contents are made available to the user.
     Refer to <xref linkend="sec.security.cryptofs.y2.homes"/> for more
     information.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>Encrypting Single ASCII Text Files</term>
   <listitem>
    <para>
     If you only have a small number of ASCII text files that hold sensitive
     or confidential data, you can encrypt them individually and protect
     them with a password using Kgpg or the vi editor. Refer to
     <phrase os="sled"><xref linkend="sec.crypto.kgpg.edit"/></phrase> and
     <xref linkend="sec.security.cryptofs.vi"/> for more information.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 <warning>
  <title>Encrypted Media Offers Limited Protection</title>
  <para>
   The methods described in this chapter offer only a limited protection.
   You cannot protect your running system from being compromised. After the
   encrypted medium is successfully mounted, everybody with appropriate
   permissions has access to it. However, encrypted media are useful in case
   of loss or theft of your computer, or to prevent unauthorized individuals
   from reading your confidential data.
  </para>
 </warning>
 <sect1 id="sec.security.cryptofs.y2">
  <title>Setting Up an Encrypted File System with &yast;</title><indexterm id="idx.encrypting.partitions" class="startofrange">

  <primary>encrypting</primary>

  <secondary>partitions</secondary></indexterm><indexterm>

  <primary>encrypting</primary>

  <secondary>&yast;, with</secondary></indexterm>

  <para>
   Use &yast; to encrypt partitions or parts of your file system during
   installation or in an already installed system. However, encrypting a
   partition in an already-installed system is more difficult, because you
   have to resize and change existing partitions. In such cases, it may be
   more convenient to create an encrypted file of a defined region, in which
   to <emphasis>store</emphasis> other files or parts of your file system.
   To encrypt an entire partition, dedicate a partition for encryption in
   the partition layout. The standard partitioning proposal as suggested by
   &yast;, does not include an encrypted partition by default. Add it
   manually in the partitioning dialog.
  </para>

  <sect2 id="sec.security.cryptofs.y2.part_inst">
   <title>Creating an Encrypted Partition during Installation</title><indexterm>
   <primary>partitions</primary>
   <secondary>encrypting</secondary></indexterm><indexterm>
   <primary>encrypting</primary>
   <secondary>creating partitions</secondary></indexterm>
   <warning>
    <title>Password Input</title>
    <para>
     Make sure to memorize the password for your encrypted partitions well.
     Without that password, you cannot access or restore the encrypted data.
    </para>
   </warning>
   <para>
    The &yast; expert dialog for partitioning offers the options needed for
    creating an encrypted partition. To create a new encrypted partition
    proceed as follows:
   </para>
   <procedure>
    <step>
     <para>
      Run the &yast; Expert Partitioner with
      <menuchoice><guimenu>Computer</guimenu>
      <guimenu>System</guimenu><guimenu>Partitioner</guimenu></menuchoice>.
     </para>
    </step>
    <step>
     <para>
      Select a harddisk, click <guimenu>Add</guimenu>, and select a primary
      or an extended partition.
     </para>
    </step>
    <step>
     <para>
      Select the partition size or the region to use on the disk.
     </para>
    </step>
    <step>
     <para>
      Select the file system, and mount point of this partition.
     </para>
    </step>
    <step>
     <para>
      Activate the <guimenu>Encrypt device</guimenu> check box.
     </para>
     <note>
      <title>Additional Software Required</title>
      <para>
       After checking <guimenu>Encrypt device</guimenu>, a pop-up window
       asking for installing additional software may appear. Confirm to
       install all the required packages to ensure that the encrypted
       partition works well.
      </para>
     </note>
    </step>
<!-- 2009-10-02 toba: this option is grayed out and not accessible for
    encrypted partitions on opensuse 11.2m8 -->
<!-- FIXME: checkit! 2010-09-17, ke -->
    <step os="sles;sled">
     <para os="osuse">
      If the encrypted file system needs to be mounted only when necessary,
      enable <guimenu>Do Not Mount at System Start-up</guimenu> in the
      <guimenu>Fstab Options</guimenu>.
     </para>
     <para os="sled;sles">
      If the encrypted file system needs to be mounted only when necessary,
      enable <guimenu>Do not mount partition</guimenu> in the <guimenu>Fstab
      Options</guimenu>. otherwise enable <guimenu>Mount partition</guimenu>
      and enter the mount point.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Next</guimenu> and enter a password which is used to
      encrypt this partition. This password is not displayed. To prevent
      typing errors, you need to enter the password twice.
     </para>
    </step>
    <step>
     <para>
      Complete the process by clicking <guimenu>Finish</guimenu>. The
      newly-encrypted partition is now created.
     </para>
     <para>
      When you need to mount an encrypted partition, open your file manager
      and click on the partition entry in the pane listing common places on
      your filesystem. You will be prompted for a password and the partition
      will be mounted.
     </para>
    </step>
   </procedure>
<!-- 2009-10-02 toba: not true anymore, mounting is handled by the used file
   manager (nautilus for example) 
   <para>
    The operating system requests the password while booting before mounting
    the partition. The partition is available to all users once it has been
    mounted.
   </para>
   <para>
    To skip mounting the encrypted partition during start-up, click
    <keycap>Enter</keycap> when prompted for the password. Then decline the
    offer to enter the password again. In this case, the encrypted file
    system is not mounted and the operating system continues booting,
    blocking access to your data.
   </para>
   -->
   <para>
    When you are installing your system on a machine where partitions
    already exist, you can also decide to encrypt an existing partition
    during installation. In this case follow the description in
    <xref linkend="sec.security.cryptofs.y2.part_run"/> and be aware that
    this action destroys all data on the existing partition.
   </para>
  </sect2>

  <sect2 id="sec.security.cryptofs.y2.part_run">
   <title>Creating an Encrypted Partition on a Running System</title><indexterm>
   <primary>encrypting</primary>
   <secondary>partitions</secondary></indexterm>
   <warning>
    <title>Activating Encryption on a Running System</title>
    <para>
     It is also possible to create encrypted partitions on a running system.
     However, encrypting an existing partition destroys all data on it, and
     requires resizing and restructuring of existing partitions.
    </para>
   </warning>
   <para>
    On a running system, select <menuchoice> <guimenu>System</guimenu>
    <guimenu>Partitioner</guimenu> </menuchoice> in the &yast; Control
    Center. Click <guimenu>Yes</guimenu> to proceed. In the <guimenu>Expert
    Partitioner</guimenu>, select the partition to encrypt and click
    <guimenu>Edit</guimenu>. The rest of the procedure is the same as
    described in <xref linkend="sec.security.cryptofs.y2.part_inst"/>.
   </para><indexterm startref="idx.encrypting.partitions" class="endofrange"/>
  </sect2>

  <sect2 id="sec.security.cryptofs.y2.container">
   <title>Creating an Encrypted File as a Container</title><indexterm>
   <primary>files</primary>
   <secondary>encrypting</secondary></indexterm><indexterm id="idx.encrypting.files" class="startofrange">
   <primary>encrypting</primary>
   <secondary>files</secondary></indexterm>
   <para>
    Instead of using a partition, it is possible to create an encrypted
    file, which can hold other files or folders containing confidential
    data. Such container files are created from the &yast; Expert
    Partitioner dialog. Select <menuchoice><guimenu>Crypt Files</guimenu>
    <guimenu>Add Crypt File</guimenu></menuchoice> and enter the full path
    to the file and its size. If &yast; should create the container file,
    activate the checkbox <guimenu>Create Loop File</guimenu>. Accept or
    change the proposed formatting settings and the file system type.
    Specify the mount point and make sure that <guimenu>Encrypt
    Device</guimenu> is checked.
   </para>
   <para>
    Click <guimenu>Next</guimenu>, enter your password for decrypting the
    file, and confirm with <guimenu>Finish</guimenu>.
   </para>
   <para>
    The advantage of encrypted container files over encrypted partitions is
    that they can be added without repartitioning the hard disk. They are
    mounted with the help of a loop device and behave just like normal
    partitions.
   </para>
  </sect2>

  <sect2 id="sec.security.cryptofs.y2.removables">
   <title>Encrypting the Content of Removable Media</title><indexterm id="idx.encrypting.remmedia" class="startofrange">
   <primary>encrypting</primary>
   <secondary>removable media</secondary></indexterm>
   <para>
    &yast; treats removable media (like external hard disks or USB flash
    drives) the same as any other hard disk. Container files or partitions
    on such media can be encrypted as described above. Do not, however,
    enable mounting at boot time, because removable media are usually only
    connected while the system is running.
   </para>
   <para>
    If you encrypted your removable device with &yast;, the KDE and GNOME
    desktops automatically recognize the encrypted partition and prompt for
    the password when the device is detected. If you plug in a FAT formatted
    removable device while running KDE or GNOME, the desktop user entering
    the password automatically becomes the owner of the device and can read
    and write files. For devices with a file system other than FAT, change
    the ownership explicitly for users other than &rootuser; to enable these
    users to read or write files on the device.
   </para><indexterm startref="idx.encrypting.remmedia" class="endofrange"/>
  </sect2>
 </sect1>
 <sect1 id="sec.security.cryptofs.y2.homes">
  <title>Using Encrypted Home Directories</title>

  <para>
   To protect data in home directories from being stolen and consequent
   unauthorized access, use the &yast; user management module to enable
   encryption of home directories. You can create encrypted home directories
   for new or existing users. To encrypt or decrypt home directories of
   already existing users, you need to know their login password. See
   <xref linkend="sec.y2.userman.adv.crypto"/> for instructions.
  </para>

  <para>
   Encrypted home partitions are created within a file container as
   described in <xref linkend="sec.security.cryptofs.y2.container"/>. Two
   files are created under <filename>/home</filename> for each encrypted
   home directory:
  </para>

<!-- bg: 2008-04-22: cannot reproduce, functionality is broken right
  now. However, it looks like the description is correct. -->

<!-- bg: 2008-10-08: comment from april still holds true. -->

  <variablelist>
   <varlistentry>
    <term><filename><replaceable>LOGIN</replaceable>.img</filename>
    </term>
    <listitem>
     <para>
      The image holding the directory
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><replaceable>LOGIN</replaceable>.key</filename>
    </term>
    <listitem>
     <para>
      The image key, protected with the user's login password.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   On login, the home directory automatically gets decrypted. Internally, it
   works through the pam module called <emphasis>pam_mount</emphasis>. If
   you need to add an additional login method that provides encrypted home
   directories, you have to add this module to the respective configuration
   file in <filename>/etc/pam.d/</filename>. For more information see also
   <xref linkend="cha.pam"/> and the man page of <option>pam_mount</option>.
  </para>

  <warning>
   <title>Security Restrictions</title>
   <para>
    Encrypting a user's home directory does not provide strong security from
    other users. If strong security is required, the system should not be
    shared physically.
   </para>
   <para>
    To enhance security, also encrypt the <filename>swap</filename>
    partition and the <filename>/tmp</filename> and
    <filename>/var/tmp</filename> directories, because these may contain
    temporary images of critical data. You can encrypt
    <filename>swap</filename>, <filename>/tmp</filename>, and
    <filename>/var/tmp</filename> with the &yast; partitioner as described
    in <xref linkend="sec.security.cryptofs.y2.part_inst"/> or
    <xref linkend="sec.security.cryptofs.y2.container"/>.
   </para>
  </warning>
 </sect1>
 <sect1 id="sec.security.cryptofs.vi">
  <title>Using vi to Encrypt Single ASCII Text Files</title><indexterm>

  <primary>encrypting</primary>

  <secondary>files with vi</secondary></indexterm>

  <para>
   The disadvantage of using encrypted partitions is obvious: While the
   partition is mounted, at least
   <systemitem class="username">root</systemitem> can access the data. To
   prevent this, vi can be used in encrypted mode.
  </para>

  <para>
   Use <command>vi <option>-x</option>
   <replaceable>filename</replaceable></command> to edit a new file. vi
   prompts you to set a password, after which it encrypts the content of the
   file. Whenever you access this file, vi requests the correct password.
  </para>

  <para>
   For even more security, you can place the encrypted text file in an
   encrypted partition. This is recommended because the encryption used in
   vi is not very strong.
  </para><indexterm startref="idx.encrypting.files" class="endofrange"/><indexterm startref="idx.encrypting" class="endofrange"/>
 </sect1>
</chapter>
