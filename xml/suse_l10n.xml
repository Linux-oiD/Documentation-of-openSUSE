<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<sect1 id="sec.suse.l10n">
 <title>Language and Country-Specific Settings</title><indexterm>

 <primary>system</primary>

 <secondary>localizing</secondary></indexterm><indexterm>

 <primary>I18N</primary></indexterm><indexterm>

 <primary>L10N</primary></indexterm><indexterm>

 <primary>internationalization</primary></indexterm><indexterm>

 <primary>localization</primary></indexterm>

 <para>
  The system is, to a very large extent, internationalized and can be
  flexibly modified for local needs. In other words, internationalization
  (<emphasis>I18N</emphasis>) allows specific localizations
  (<emphasis>L10N</emphasis>). The abbreviations I18N and L10N are derived
  from the first and last letters of the words and, in between, the number
  of letters omitted.
 </para>

 <para>
  Settings are made with <systemitem>LC_</systemitem> variables defined in
  the file <filename>/etc/sysconfig/language</filename>. This refers not
  only to <emphasis>native language support</emphasis>, but also to the
  categories <emphasis>Messages</emphasis> (Language), <emphasis>Character
  Set</emphasis>, <emphasis>Sort Order</emphasis>, <emphasis>Time and
  Date</emphasis>, <emphasis>Numbers</emphasis> and
  <emphasis>Money</emphasis>. Each of these categories can be defined
  directly with its own variable or indirectly with a master variable in the
  file <filename>language</filename> (see the <command>locale</command> man
  page). <indexterm>
  <primary>configuration files</primary>
  <secondary>language</secondary>
  </indexterm>
 </para>

 <variablelist>
  <varlistentry>
   <term><systemitem>RC_LC_MESSAGES</systemitem>,
    <systemitem>RC_LC_CTYPE</systemitem>,
    <systemitem>RC_LC_COLLATE</systemitem>,
    <systemitem>RC_LC_TIME</systemitem>,
    <systemitem>RC_LC_NUMERIC</systemitem>,
    <systemitem>RC_LC_MONETARY</systemitem><indexterm>
    <primary>variables</primary>
    <secondary>environment</secondary></indexterm>
   </term>
   <listitem>
    <para>
     These variables are passed to the shell without the
     <systemitem>RC_</systemitem> prefix and represent the listed
     categories. The shell profiles concerned are listed below. The current
     setting can be shown with the command <command>locale</command>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><systemitem>RC_LC_ALL</systemitem>
   </term>
   <listitem>
    <para>
     This variable, if set, overwrites the values of the variables already
     mentioned.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><systemitem>RC_LANG</systemitem>
   </term>
   <listitem>
    <para>
     If none of the previous variables are set, this is the fallback. By
     default, only <systemitem>RC_LANG</systemitem> is set. This makes it
     easier for users to enter their own values.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term><systemitem>ROOT_USES_LANG</systemitem>
   </term>
   <listitem>
    <para>
     A <literal>yes</literal> or <literal>no</literal> variable. If set to
     <literal>no</literal>, <systemitem class="username">root</systemitem>
     always works in the POSIX environment.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>

 <para>
  The variables can be set with the &yast; sysconfig editor (see
  <xref
  linkend="sec.boot.sysconfig.edit"/>). The value of such a variable
  contains the language code, country code, encoding and modifier. The
  individual components are connected by special characters:
 </para>

<screen>
  LANG=&lt;language&gt;[[_&lt;COUNTRY&gt;].&lt;Encoding&gt;[@&lt;Modifier&gt;]]
</screen>

 <sect2>
  <title>Some Examples</title>
  <para>
   You should always set the language and country codes together. Language
   settings follow the standard ISO&nbsp;639 available at
   <ulink
    url="http://www.evertype.com/standards/iso639/iso639-en.html"/>
   and <ulink url="http://www.loc.gov/standards/iso639-2/"/>. Country codes
   are listed in ISO&nbsp;3166 available at
   <ulink
    url="http://www.din.de/gremien/nas/nabd/iso3166ma/codlstp1/en_listp1.html"/>.
  </para>
  <para>
   It only makes sense to set values for which usable description files can
   be found in <filename>/usr/lib/locale</filename>. Additional description
   files can be created from the files in
   <filename>/usr/share/i18n</filename> using the command
   <command>localedef</command>. The description files are part of the
   <systemitem>glibc-i18ndata</systemitem> package. A description file for
   <literal>en_US.UTF-8</literal> (for English and United States) can be
   created with:
  </para>
<!--
For German use:
localedef -i de_DE@euro -f UTF-8 de_DE@euro.UTF-8
French:
localedef -i fr_FR@euro -f UTF-8 fr_FR@euro.UTF-8
Italian:
localedef -i it_IT@euro -f UTF-8 it_IT@euro.UTF-8
Spanish:
localedef -i es_ES@euro -f UTF-8 es_ES@euro.UTF-8
-->
  <remark role="trans">Change the description file in the previous para and the
   following screen to something appropriate for your language.</remark>
<screen>
localedef -i en_US -f UTF-8 en_US.UTF-8
</screen>
  <variablelist>
   <varlistentry>
    <term>
<!--
Use for:
German:   <systemitem>LANG=de_DE.UTF-8</systemitem>
French:   <systemitem>LANG=fr_FR.UTF-8</systemitem>
Italian:  <systemitem>LANG=it_IT.UTF-8</systemitem>
Spanish:  <systemitem>LANG=es_ES.UTF-8</systemitem>
--><systemitem>LANG=en_US.UTF-8</systemitem>
    </term>
    <listitem>
     <para>
      This is the default setting if American English is selected during
      installation. If you selected another language, that language is
      enabled but still with UTF-8 as the character encoding.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
<!--
For German use:     <systemitem>LANG=de_DE.ISO-8859-1</systemitem>
French:   <systemitem>LANG=fr_FR.ISO-8859-1</systemitem>
Italian:  <systemitem>LANG=it_IT.ISO-8859-1</systemitem>
Spanish:  <systemitem>LANG=es_ES.ISO-8859-1</systemitem>
--><systemitem>LANG=en_US.ISO-8859-1</systemitem><indexterm>
     <primary>encoding</primary>
     <secondary>ISO-8859-1</secondary></indexterm>
    </term>
    <listitem>
     <para>
      This sets the language to English, country to United States and the
      character set to <literal>ISO-8859-1</literal>. This character set
      does not support the Euro sign, but it can be useful sometimes for
      programs that have not been updated to support
      <literal>UTF-8</literal>. The string defining the charset
      (<literal>ISO-8859-1</literal> in this case) is then evaluated by
      programs like Emacs.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
<!--
For German use:     <systemitem>LANG=de_DE@euro</systemitem>
French:   <systemitem>LANG=fr_FR@euro</systemitem>
Italian:  <systemitem>LANG=it_IT@euro</systemitem>
Spanish:  <systemitem>LANG=es_ES@euro</systemitem>
-->
    <term><systemitem>LANG=en_IE@euro</systemitem>
    </term>
    <listitem>
     <para>
      The above example explicitly includes the Euro sign in a language
      setting. This setting is basically obsolete now, as UTF-8 also covers
      the Euro symbol. It is only useful if an application supports
      ISO-8859-15 and not UTF-8.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   SuSEconfig reads the variables in
   <filename>/etc/sysconfig/language</filename> and writes the necessary
   changes to <filename>/etc/SuSEconfig/profile</filename> and
   <filename>/etc/SuSEconfig/csh.cshrc</filename>.
   <filename>/etc/SuSEconfig/profile</filename> is read or
   <emphasis>sourced</emphasis> by <filename>/etc/profile</filename>.
   <filename>/etc/SuSEconfig/csh.cshrc</filename> is sourced by
   <filename>/etc/csh.cshrc</filename>. This makes the settings available
   systemwide. <indexterm>
   <primary>configuration files</primary>
   <secondary>language</secondary>
   </indexterm> <indexterm>
   <primary>configuration files</primary>
   <secondary>profile</secondary>
   </indexterm> <indexterm>
   <primary>configuration files</primary>
   <secondary>csh.cshrc</secondary>
   </indexterm>
  </para>
  <para>
   Users can override the system defaults by editing their
   <filename>~/.bashrc</filename> accordingly. For instance, if you do not
   want to use the systemwide <literal>en_US</literal> for program messages,
   include <systemitem>LC_MESSAGES=es_ES</systemitem> so that messages are
   displayed in Spanish instead.
  </para>
 </sect2>

 <sect2 id="sec.suse.l10n.dot.i18n">
  <title>Locale Settings in <filename>~/.i18n</filename></title>
  <para>
   If you are not satisfied with locale system defaults, change the settings
   in <filename>~/.i18n</filename> according to the Bash scripting syntax.
   Entries in <filename>~/.i18n</filename> override system defaults from
   <filename>/etc/sysconfig/language</filename>. Use the same variable names
   but without the <literal>RC_</literal> namespace prefixes. For example,
   use <literal>LANG</literal> instead of <literal>RC_LANG</literal>:
  </para>
<screen>LANG=cs_CZ.UTF-8
LC_COLLATE=C
</screen>
 </sect2>

 <sect2 id="sec.suse.l10n.fallback">
  <title>Settings for Language Support</title>
  <para>
   Files in the category <emphasis>Messages</emphasis> are, as a rule, only
   stored in the corresponding language directory (like
   <filename>en</filename>) to have a fallback. If you set
   <systemitem>LANG</systemitem> to <literal>en_US</literal> and the message
   file in <filename>/usr/share/locale/en_US/LC_MESSAGES</filename> does not
   exist, it falls back to
   <filename>/usr/share/locale/en/LC_MESSAGES</filename>.
  </para>
  <para>
   A fallback chain can also be defined, for example, for Breton to French
   or for Galician to Spanish to Portuguese:
  </para>
  <para>
   <systemitem>LANGUAGE="br_FR:fr_FR"</systemitem>
  </para>
  <para>
   <systemitem>LANGUAGE="gl_ES:es_ES:pt_PT"</systemitem>
  </para>
  <para>
   If desired, use the Norwegian variants Nynorsk and Bokmål instead (with
   additional fallback to <literal>no</literal>):
  </para>
  <para>
   <systemitem>LANG="nn_NO"</systemitem>
  </para>
  <para>
   <systemitem>LANGUAGE="nn_NO:nb_NO:no"</systemitem>
  </para>
  <para>
   or
  </para>
  <para>
   <systemitem>LANG="nb_NO"</systemitem>
  </para>
  <para>
   <systemitem>LANGUAGE="nb_NO:nn_NO:no"</systemitem>
  </para>
  <para>
   Note that in Norwegian, <systemitem>LC_TIME</systemitem> is also treated
   differently.
  </para>
  <remark>The following example does not make sense  for 'en'; that's why I
   use 'de' as an example here. -ke- </remark>
<!-- Translators: Please, use this 'de' example as-is -->
  <para>
   One problem that can arise is a separator used to delimit groups of
   digits not being recognized properly. This occurs if
   <systemitem>LANG</systemitem> is set to only a two-letter language code
   like <literal>de</literal>, but the definition file glibc uses is located
   in <filename>/usr/share/lib/de_DE/LC_NUMERIC</filename>. Thus
   <systemitem>LC_NUMERIC</systemitem> must be set to
   <literal>de_DE</literal> to make the separator definition visible to the
   system.
  </para>
 </sect2>

 <sect2 id="sec.suse.l10n.info">
  <title>For More Information</title>
  <itemizedlist>
   <listitem>
    <para>
     <emphasis>The GNU C Library Reference Manual</emphasis>, Chapter
     <quote>Locales and Internationalization</quote>. It is included in
     <systemitem>glibc-info</systemitem>.
    </para>
   </listitem>
   <listitem>
    <para>
     Markus Kuhn, <emphasis>UTF-8 and Unicode FAQ for Unix/Linux</emphasis>,
     currently at
     <ulink url="http://www.cl.cam.ac.uk/~mgk25/unicode.html"/>.
    </para>
   </listitem>
   <listitem>
    <para>
     <emphasis>Unicode-Howto</emphasis>, by Bruno Haible:
     <filename>/usr/share/doc/howto/en/txt/Unicode-HOWTO.gz</filename>
     (package <systemitem>howto</systemitem>).
    </para>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>
