<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.slp">
 <title>SLP Services in the Network</title><indexterm>
 <primary>networks</primary>
 <secondary>SLP</secondary></indexterm><indexterm>
 <primary>Service Location Protocol</primary>
 <see>SLP</see></indexterm><indexterm>
 <primary>SLP</primary></indexterm><indexterm>
 <primary>protocols</primary>
 <secondary>SLP</secondary></indexterm>
 <abstract>
  <para>
   The <emphasis>service location protocol</emphasis> (SLP) was developed to
   simplify the configuration of networked clients within a local network.
   To configure a network client, including all required services, the
   administrator traditionally needs detailed knowledge of the servers
   available in the network. SLP makes the availability of selected services
   known to all clients in the local network. Applications that support SLP
   can use the information distributed and be configured automatically.
  </para>
 </abstract>
 <para>
  &productnamereg; supports installation using installation sources provided
  with SLP and contains many system services with integrated support for
  SLP. &yast; and Konqueror both have appropriate front-ends for SLP. You
  can use SLP to provide networked clients with central functions, such as
  an installation server, file server, or print server on your system.
 </para>
<!-- bg: 30-04-2008: did not check the services, TODO for 11.1 -->
<!-- bg: 25-09-2008: did only rudimentary check the services, TODO for SLES11 -->
 <important>
  <title>SLP Support in &productname;</title>
  <para>
   Services that offer SLP support include cupsd, rsyncd, ypserv, openldap2,
   ksysguardd, saned, kdm, vnc, login, smpppd, rpasswd
<!--
   (pwdutils-rpasswd)-->
   , postfix, and sshd (via fish).
  </para>
 </important>
 <sect1 id="sec.slp.openslpinst">
  <title>Installation</title>

  <para os="osuse">
   All packages necessary to use SLP services are installed by default.
   However, if you want to provide services via SLP, check that the
   <systemitem>openslp-server</systemitem> package is installed. For SLP
   daemon server configuration install the
   <systemitem>yast2-slp-server</systemitem> package.
  </para>

  <para os="sled;sles">
<!-- FIXME: also on sled? 2010-02-23, ke -->
   All packages necessary are installed by default. However, if you want to
   provide services via SLP, check that the package
   <systemitem>openslp-server</systemitem> is installed.
  </para>
 </sect1>
 <sect1 id="sec.slp.sl.act">
  <title>Activating SLP</title>

  <para>
   slpd must run on your system to offer services with SLP. If the machine
   should only operate as client, and does not offer services, it is not
   necessary to run slpd. Like most system services in &productname;, the
   slpd daemon is controlled by means of a separate <command>init</command>
   script. After the installation, the daemon is inactive by default. To
   activate it temporarily, run
   <command>rcslpd&nbsp;<option>start</option></command> as
   <systemitem class="username">root</systemitem> or
   <command>rcslpd&nbsp;<option>stop</option></command> to stop it. Perform
   a restart or status check with <option>restart</option> or
   <option>status</option>. If slpd should be always active after booting,
   enable slpd in &yast; <menuchoice> <guimenu>System</guimenu>
   <guimenu>System Services (Runlevel)</guimenu> </menuchoice> or run the
   <command>insserv</command>&nbsp;<option>slpd</option> command as
   <systemitem class="username">root</systemitem>.
  </para>
 </sect1>
 <sect1 id="sec.slp.sl.fend">
  <title>SLP Front-Ends in &productname;</title>

  <para>
   To find services provided via SLP in your network, use an SLP front-end
   such as <command>slptool</command> (<systemitem>openslp</systemitem>
   package) or &yast;:
  </para>

  <variablelist>
   <varlistentry>
    <term>slptool</term>
    <listitem>
     <para>
      <indexterm>
      <primary>SLP</primary>
      <secondary>slptool</secondary>
      </indexterm> <indexterm>
      <primary>commands</primary>
      <secondary>slptool</secondary>
      </indexterm> slptool is a command line program that can be used to
      announce SLP inquiries in the network or announce proprietary
      services. <command>slptool</command>&nbsp;<option>--help</option>
      lists all available options and functions. For example, to find all
      time servers that announce themselves in the current network, run the
      command:
     </para>
<screen>slptool findsrvs service:ntp</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&yast;</term>
    <listitem>
     <para>
      <indexterm>
      <primary>SLP</primary>
      <secondary>yast</secondary>
      </indexterm> &yast; also provides an SLP browser. However, this
      browser is not available from the &yast; Control Center. To start it,
      run <command>yast2 slp</command> as
      <systemitem class="username">root</systemitem> user. Click on a
      <guimenu>Service Type</guimenu> on the lefthand side to get more
      information about a service.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.slp.sl.inst" os="osuse;sles">
  <title>Installation over SLP</title>

  <para>
<!-- FIXME: setting up SLP is not described thus far in 
        sec.deployment.remoteinst.instserver. 2010-07-06, ke -->
   If you have an installation server with &productname; installation media
   within your network, this can be registered and offered with SLP. For
   details, see <xref linkend="sec.deployment.remoteinst.instserver"/>. If
   SLP installation is selected, linuxrc starts an SLP inquiry after the
   system has booted from the selected boot medium and displays the sources
   found.
  </para>
 </sect1>
 <sect1 id="sec.slp.sl.reg">
  <title>Providing Services via SLP</title><indexterm>

  <primary>SLP</primary>

  <secondary>registering services</secondary></indexterm><indexterm>

  <primary>SLP</primary>

  <secondary>providing services</secondary></indexterm>

  <para>
   Many applications in &productname; have integrated SLP support through
   the use of the <literal>libslp</literal> library. If a service has not
   been compiled with SLP support, use one of the following methods to make
   it available via SLP:
  </para>

  <variablelist>
   <varlistentry>
    <term>Static Registration with <filename>/etc/slp.reg.d</filename>
    </term>
    <listitem>
     <para>
      Create a separate registration file for each new service. This is an
      example for registering a scanner service:
     </para>
<screen>## Register a saned service on this system
## en means english language
## 65535 disables the timeout, so the service registration does
## not need refreshes
service:scanner.sane://$HOSTNAME:6566,en,65535
watch-port-tcp=6566
description=SANE scanner daemon</screen>
     <para>
      The most important line in this file is the <emphasis>service
      URL</emphasis>, which begins with <literal>service:</literal>. This
      contains the service type (<literal>scanner.sane</literal>) and the
      address under which the service is available on the server.
      <replaceable>$HOSTNAME</replaceable> is automatically replaced with
      the full hostname. The name of the TCP port on which the relevant
      service can be found follows, separated by a colon. Then enter the
      language in which the service should appear and the duration of
      registration in seconds. These should be separated from the service
      URL by commas. Set the value for the duration of registration between
      <literal>0</literal> and <literal>65535</literal>.
      <literal>0</literal> prevents registration. <literal>65535</literal>
      removes all restrictions.
     </para>
     <para>
      The registration file also contains the two variables
      <systemitem>watch-port-tcp</systemitem> and
      <systemitem>description</systemitem>.
      <systemitem>watch-port-tcp</systemitem> links the SLP service
      announcement to whether the relevant service is active by having slpd
      check the status of the service. The second variable contains a more
      precise description of the service that is displayed in suitable
      browsers.
     </para>
     <tip os="sles">
      <title>&yast; and SLP</title>
      <para>
       Some services brokered by &yast;, such as an installation server or
       YOU server, perform this registration automatically when you activate
       SLP in the module dialogs. &yast; then creates registration files for
       these services.
      </para>
     </tip>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Static Registration with <filename>/etc/slp.reg</filename>
    </term>
    <listitem>
     <para>
      The only difference between this method and the procedure with
      <filename>/etc/slp.reg.d</filename> is that all services are grouped
      within a central file.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Dynamic Registration with <command>slptool</command>
    </term>
    <listitem>
     <para>
      If a service needs to be registered dynamically without the need of
      configuration files, use the slptool command line utility. The same
      utility can also be used to deregister an existing service offering
      without restarting slpd.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.slp.info">
  <title>For More Information</title>

  <variablelist>
   <varlistentry>
    <term>RFC 2608, 2609, 2610</term>
    <listitem>
     <para>
      RFC 2608 generally deals with the definition of SLP. RFC 2609 deals
      with the syntax of the service URLs used in greater detail and RFC
      2610 deals with DHCP via SLP.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><ulink url="http://www.openslp.org"/>
    </term>
    <listitem>
     <para>
      The home page of the OpenSLP project.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename>/usr/share/doc/packages/openslp</filename>
    </term>
    <listitem>
     <para>
      This directory contains the documentation for SLP coming with the
      <systemitem>openslp-server</systemitem> package, including a
      <filename>README.SuSE</filename> containing the &productname; details,
      the RFCs, and two introductory HTML documents. Programmers who want to
      use the SLP functions find more information in the
      <emphasis>Programmers Guide</emphasis> that is included in the
      <systemitem class="resource">openslp-devel</systemitem> package.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
