<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.yast.text">
 <title>&yast; in Text Mode</title><indexterm id="idx.YaST_text_mode"
  class="startofrange">
 <primary>&yast;</primary>
 <secondary>text mode</secondary></indexterm>
 <para>
  This section is intended for system administrators and experts who do not
  run an X server on their systems and depend on the text-based installation
  tool. It provides basic information about starting and operating &yast; in
  text mode.
 </para><indexterm>
 <primary>&yast;</primary>
 <secondary>ncurses</secondary></indexterm>
 <para>
  &yast; in text mode uses the ncurses library to provide an easy
  pseudo-graphical user interface. The ncurses library is installed by
  default. The minimum supported size of the terminal emulator in which to
  run &yast; is 80x25 characters.
 </para>
 <figure id="fig.yast2.ncurses">
  <title>Main Window of &yast; in Text Mode</title>
  <mediaobject>
   <imageobject role="fo">
    <imagedata fileref="yast2_ncurses_main.png" width="70%" format="PNG"/>
   </imageobject>
   <imageobject role="html">
    <imagedata fileref="yast2_ncurses_main.png" width="75%" format="PNG"/>
   </imageobject>
  </mediaobject>
 </figure>
 <para>
  When you start &yast; in text mode, the &yast; Control Center appears (see
  <xref
   linkend="fig.yast2.ncurses" xrefstyle="select:label nopage"/>).
  The main window consists of three areas. The left frame features the
  categories to which the various modules belong. This frame is active when
  &yast; is started and therefore it is marked by a bold white border. The
  active category is highlighted. The right frame provides an overview of
  the modules available in the active category. The bottom frame contains
  the buttons for <guimenu>Help</guimenu> and <guimenu>Quit</guimenu>.
 </para>
 <para>
  When you start the &yast; Control Center, the category
  <guimenu>Software</guimenu> is selected automatically. Use
  <keycap>&darr;</keycap> and <keycap>&uarr;</keycap> to change the
  category. To select a module from the category, activate the right frame
  with <keycap>&rarr;</keycap> and then use <keycap>&darr;</keycap> and
  <keycap>&uarr;</keycap> to select the module. Keep the arrow keys pressed
  to scroll through the list of available modules. The selected module is
  highlighted. Press <keycap function="enter"/> to start the active module.
 </para>
 <para>
  Various buttons or selection fields in the module contain a highlighted
  letter (yellow by default). Use
  <keycombo action="press"><keycap function="alt"
    /><keycap>highlighted_letter</keycap></keycombo>
  to select a button directly instead of navigating there with
  <keycap>Tab</keycap>. Exit the &yast; Control Center by pressing
  <keycombo
   action="press"><keycap function="alt"/><keycap>Q</keycap></keycombo>
  or by selecting <guimenu>Quit</guimenu> and pressing
  <keycap function="enter"/>.
 </para>
 <sect1
  id="sec.yast.navi.ncurses_modul">
  <title>Navigation in Modules</title>

  <para>
   The following description of the control elements in the &yast; modules
   assumes that all function keys and <keycap function="alt"/> key
   combinations work and are not assigned to different global functions.
   Read <xref linkend="sec.yast.ncurses_tasten"/> for information about
   possible exceptions.
  </para>

  <variablelist>
   <varlistentry>
    <term>Navigation among Buttons and Selection Lists</term>
    <listitem>
     <para>
      Use <keycap>Tab</keycap> to navigate among the buttons and frames
      containing selection lists. To navigate in reverse order, use
      <keycombo action="press"> <keycap function="alt"/>
      <keycap>Tab</keycap> </keycombo> or <keycombo action="press">
      <keycap function="shift"/> <keycap>Tab</keycap> </keycombo>
      combinations.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Navigation in Selection Lists</term>
    <listitem>
     <para>
      Use the arrow keys (<keycap>&uarr;</keycap> and
      <keycap>&darr;</keycap>) to navigate among the individual elements in
      an active frame containing a selection list. If individual entries
      within a frame exceed its width, use
      <keycombo action="press"><keycap function="shift"
       />
      <keycap>&rarr;</keycap></keycombo> or <keycombo action="press">
      <keycap function="shift"/> <keycap>&larr;</keycap></keycombo> to
      scroll horizontally to the right and left. Alternatively, use
      <keycombo action="press"> <keycap function="control"/>
      <keycap>E</keycap> </keycombo> or <keycombo action="press">
      <keycap function="control"/> <keycap>A</keycap> </keycombo>. This
      combination can also be used if using <keycap>&rarr;</keycap> or
      <keycap>&larr;</keycap> results in changing the active frame or the
      current selection list, as in the Control Center.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Buttons, Radio Buttons, and Check Boxes</term>
    <listitem>
     <para>
      To select buttons with empty square brackets (check boxes) or empty
      parentheses (radio buttons), press <keycap>Space</keycap> or
      <keycap function="enter"/>. Alternatively, radio buttons and check
      boxes can be selected directly with <keycombo action="press">
      <keycap function="alt"/>
      <keycap>highlighted_letter</keycap></keycombo>. In this case, you do
      not need to confirm with <keycap function="enter"/>. If you navigate
      to an item with <keycap>Tab</keycap>, press <keycap function="enter"/>
      to execute the selected action or activate the respective menu item.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Function Keys</term>
    <listitem>
     <para>
      The F keys (<keycap>F1</keycap> through <keycap>F12</keycap>) enable
      quick access to the various buttons. Available F key shortcuts are
      shown in the bottom line of the &yast; screen. Which function keys are
      actually mapped to which buttons depend on the active &yast; module,
      because the different modules offer different buttons (Details, Info,
      Add, Delete, etc.). Use <keycap>F10</keycap> for
      <guimenu>Accept</guimenu>, <guimenu>OK</guimenu>,
      <guimenu>Next</guimenu>, and <guimenu>Finish</guimenu>. Press
      <keycap>F1</keycap> to access the &yast; help.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Using Navigation Tree in ncurses Mode</term>
    <listitem>
     <para>
      Some &yast; modules use a navigation tree in the left part of the
      window to select configuration dialogs. Use the arrow keys
      (<keycap>&uarr;</keycap> and <keycap>&darr;</keycap>) to navigate in
      the tree. Use <keycap>Space</keycap> to open or close tree items. In
      ncurses mode, <keycap function="enter"/> must be pressed after a
      selection in the navigation tree in order to show the selected dialog.
      This is an intentional behavior to save time consuming redraws when
      browsing through the navigation tree.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <figure id="fig.yast2.ncurses_inst">
   <title>The Software Installation Module</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_ncurses_inst.png" width="70%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_ncurses_inst.png" width="75%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
 </sect1>
 <sect1 id="sec.yast.ncurses_tasten">
  <title>Restriction of Key Combinations</title>

  <para>
   If your window manager uses global <keycap function="alt"/> combinations,
   the <keycap
    function="alt"/> combinations in &yast; might not work.
   Keys like <keycap function="alt"/> or <keycap function="shift"/> can also
   be occupied by the settings of the terminal.
  </para>

  <variablelist>
   <varlistentry>
    <term>Replacing <keycap function="alt"/> with <keycap>Esc</keycap>
    </term>
    <listitem>
     <para>
      <keycap function="alt"/> shortcuts can be executed with
      <keycap function="escape"/> instead of <keycap function="alt"/>. For
      example, <keycombo action="seq">
      <keycap function="escape"/><keycap>H</keycap></keycombo> replaces
      <keycombo action="press">
      <keycap function="alt"/><keycap>H</keycap></keycombo>. (First press
      <keycap function="escape"
      />, <emphasis>then</emphasis> press
      <keycap>H</keycap>.)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term> Backward and Forward Navigation with <keycombo action="press"><keycap function="control"
       /><keycap>F</keycap></keycombo> and <keycombo action="press"><keycap function="control"
       /><keycap>B</keycap></keycombo>
    </term>
    <listitem>
     <para>
      If the <keycap function="alt"/> and <keycap function="shift"/>
      combinations are occupied by the window manager or the terminal, use
      the combinations <keycombo action="press">
      <keycap function="control"/> <keycap>F</keycap></keycombo> (forward)
      and <keycombo action="press">
      <keycap function="control"/><keycap>B</keycap></keycombo> (backward)
      instead.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Restriction of Function Keys</term>
    <listitem>
     <para>
      The F keys are also used for functions. Certain function keys might be
      occupied by the terminal and may not be available for &yast;. However,
      the <keycap function="alt"/> key combinations and function keys should
      always be fully available on a pure text console.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.yast.ncurses_commands">
  <title>&yast; Command Line Options</title><indexterm>

  <primary>&yast;</primary>

  <secondary>command line</secondary></indexterm>

  <para>
   Besides the text mode interface, &yast; provides a pure command line
   interface. To get a list of &yast; command line options, enter:
  </para>

<screen>yast -h</screen>

  <sect2
   id="sec.yast.ncurses_modulaufruf">
   <title>Starting the Individual Modules</title><indexterm>
   <primary>&yast;</primary>
   <secondary>text mode</secondary>
   <tertiary>modules</tertiary></indexterm>
   <para>
    To save time, the individual &yast; modules can be started directly. To
    start a module, enter:
   </para>
<screen>yast &lt;module_name&gt;</screen>
   <para>
    View a list of all module names available on your system with
    <command>yast -l</command> or <command>yast --list</command>. Start the
    network module, for example, with <command>yast lan</command>.
   </para>
  </sect2>

  <sect2>
   <title>Installing Packages from the Command Line</title>
   <para>
    If you know a package name and the package is provided by any of your
    active installation repositories, you can use the command line option
    <option>-i</option> to install the package:
   </para>
<screen>yast -i &lt;package_name&gt;</screen>
   <para>
    or
   </para>
<screen>yast --install &lt;package_name&gt;</screen>
   <para>
    <replaceable>package_name</replaceable> can be a single short package
    name, for example <systemitem class="resource">gvim</systemitem>, which
    is installed with dependency checking, or the full path to an rpm
    package, which is installed without dependency checking.
   </para>
   <para>
    If you need a command-line based software management utility with
    functionality beyond what &yast; provides, consider using zypper. This
    new utility uses the same software management library that is also the
    foundation for the &yast; package manager. The basic usage of zypper is
    covered in <xref linkend="sec.zypper"/>.
   </para>
  </sect2>

  <sect2>
   <title>Command Line Parameters of the &yast; Modules</title>
   <para>
    To use &yast; functionality in scripts, &yast; provides command line
    support for individual modules. Not all modules have command line
    support. To display the available options of a module, enter:
   </para>
<screen>yast &lt;module_name&gt; help</screen>
   <para>
    If a module does not provide command line support, the module is started
    in text mode and the following message appears:
   </para>
<screen>This &yast; module does not support the command line interface.</screen><indexterm
    class="endofrange" startref="idx.YaST_text_mode"/>
  </sect2>
 </sect1>
</chapter>
<!-- moved comandline update to yast2.xml -->
