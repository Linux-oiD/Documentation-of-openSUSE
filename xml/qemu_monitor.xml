<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<chapter id="cha.qemu.monitor">
<!-- toba, 2010-12-09:
  i am mentioning the following QEMU monitor features in the previous chapter:
   * savevm
   * info snapshots
   * c
   * change vnc password 
   -->
 <title>Administrating Virtual Machines with &qemu; Monitor</title>
 <para>
  When &qemu; is running, a monitor console is provided for performing
  interaction with the user. Using the commands available in the monitor
  console, it is possible to inspect the running operating system, change
  removable media, take screenshots or audio grabs and control several other
  aspects of the virtual machine.
 </para>
 <sect1>
  <title>Accessing Monitor Console</title>

  <para>
   To access the monitor console from &qemu;, press
   <keycombo><keycap>Ctrl</keycap>
   <keycap>Alt</keycap><keycap>2</keycap></keycombo>. To return back to
   &qemu; from the monitor console, press <keycombo><keycap>Ctrl</keycap>
   <keycap>Alt</keycap><keycap>1</keycap></keycombo>.
  </para>

  <para>
   To get help while using the console, use <command>help</command> or
   <command>?</command>. To get help for a specific command, use
   <command>help <replaceable>command</replaceable></command>.
  </para>
 </sect1>
 <sect1>
  <title>Getting Information about the Guest System</title>

  <para>
   To get information about the guest system, use the <command>info
   <option>option</option></command> command. If used without any option,
   the list of possible options is printed. Options determine which of the
   system will be analyzed:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>info version</command>
    </term>
    <listitem>
     <para>
      Shows the version of &qemu;
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info commands</command>
    </term>
    <listitem>
     <para>
      Lists available QMP commands
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info network</command>
    </term>
    <listitem>
     <para>
      Shows the network state
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info chardev</command>
    </term>
    <listitem>
     <para>
      Shows the character devices
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info block</command>
    </term>
    <listitem>
     <para>
      Information about block devices, such as hard drives, floppy drives,
      or CD-ROMs
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info blockstats</command>
    </term>
    <listitem>
     <para>
      Read and write statistics on block devices
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info registers</command>
    </term>
    <listitem>
     <para>
      Shows the CPU registers
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info cpus</command>
    </term>
    <listitem>
     <para>
      Shows information about available CPUs
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info history</command>
    </term>
    <listitem>
     <para>
      Shows the command line history
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info irq</command>
    </term>
    <listitem>
     <para>
      Shows the interrupts statistics
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info pic</command>
    </term>
    <listitem>
     <para>
      Shows the i8259 (PIC) state
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info pci</command>
    </term>
    <listitem>
     <para>
      Shows the PCI information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info tlb</command>
    </term>
    <listitem>
     <para>
      Shows virtual to physical memory mappings
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info mem</command>
    </term>
    <listitem>
     <para>
      Shows the active virtual memory mappings
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info hpet</command>
    </term>
    <listitem>
     <para>
      Shows state of HPET
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info jit</command>
    </term>
    <listitem>
     <para>
      Shows dynamic compiler information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info kvm</command>
    </term>
    <listitem>
     <para>
      Shows the KVM information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info numa</command>
    </term>
    <listitem>
     <para>
      Shows the NUMA information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info usb</command>
    </term>
    <listitem>
     <para>
      Shows the guest USB devices
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info usbhost</command>
    </term>
    <listitem>
     <para>
      Shows the host USB devices
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info profile</command>
    </term>
    <listitem>
     <para>
      Shows the profiling information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info capture</command>
    </term>
    <listitem>
     <para>
      Shows the capture (audio grab) information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info snapshots</command>
    </term>
    <listitem>
     <para>
      Shows the currently saved virtual machine snapshots
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info status</command>
    </term>
    <listitem>
     <para>
      Shows the current virtual machine status
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info pcmcia</command>
    </term>
    <listitem>
     <para>
      Shows the guest PCMCIA status
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info mice</command>
    </term>
    <listitem>
     <para>
      Shows which guest mice is receiving events
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info vnc</command>
    </term>
    <listitem>
     <para>
      Shows the VNC server status
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info name</command>
    </term>
    <listitem>
     <para>
      Shows the current virtual machine name
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info uuid</command>
    </term>
    <listitem>
     <para>
      Shows the current virtual machine UUID
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info usernet</command>
    </term>
    <listitem>
     <para>
      Shows the user network stack connection states
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info migrate</command>
    </term>
    <listitem>
     <para>
      Shows the migration status
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info balloon</command>
    </term>
    <listitem>
     <para>
      Shows the balloon device information
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info qtree</command>
    </term>
    <listitem>
     <para>
      Shows the device tree
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info qdm</command>
    </term>
    <listitem>
     <para>
      Shows the qdev device model list
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info roms</command>
    </term>
    <listitem>
     <para>
      Shows the ROMs
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Changing VNC Password</title>

  <para>
   To change the VNC password, use the <command>change vnc
   password</command> command and enter the new password:
  </para>

<screen>
(qemu) change vnc password
Password: ********
(qemu)
    </screen>
 </sect1>
 <sect1>
  <title>Managing Devices</title>

  <para>
   To release the device or file connected to the removable media device,
   use the <command>eject <replaceable>device</replaceable></command>
   command. Use the optional <option>-f</option> to force ejection.
  </para>

  <para>
   To change removable media (like CD-ROMs), use the <command>change
   <replaceable>device</replaceable></command> command. The name of the
   removable media can be determined using the <command>info block</command>
   command:
  </para>

<screen>
(qemu) info block
ide1-cd0: type=cdrom removable=1 locked=0 file=/dev/sr0 ro=1 drv=host_device
(qemu) change ide1-cd0 /path/to/image
     </screen>
 </sect1>
 <sect1>
  <title>Controlling Keyboard and Mouse</title>

  <para>
   It is possible to use the monitor console to emulate keyboard and mouse
   input if necessary. For example, if your graphical user interface
   intercepts some key combinations at low level (such as
   <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap><keycap>F1</keycap></keycombo>
   in X Window), you can still enter them using the <command>sendkey
   <replaceable>keys</replaceable></command>:
  </para>

<screen>sendkey ctrl-alt-f1</screen>

  <para>
   To list the key names used in the <replaceable>keys</replaceable> option,
   enter <command>sendkey</command> and press <keycap>Tab</keycap>.
  </para>

  <para>
   To control the mouse, the following commands can be used:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>mouse_move <replaceable>dx</replaceable><replaceable>dy</replaceable> [<replaceable>dz</replaceable>]</command>
    </term>
    <listitem>
     <para>
      Move the active mouse pointer to the specified coordinates dx, dy with
      the optional scroll axis dz.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>mouse_button <replaceable>val</replaceable></command>
    </term>
    <listitem>
     <para>
      Change the state of the mouse buttons (1=left, 2=middle, 4=right).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>mouse_set <replaceable>index</replaceable></command>
    </term>
    <listitem>
     <para>
      Set which mouse device receives events. Device index numbers can be
      obtained with the <command>info mice</command> command.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Changing Available Memory</title>

  <para>
   If the virtual machine was started with the <option>-balloon
   virtio</option> option and the paravirtualized balloon device that allows
   to dynamically change the amount of memory available is therefore
   enabled, it is possible to change the available memory dynamically. For
   more information about enabling the baloon device, see
   <xref linkend="cha.qemu.guest_inst.qemu-kvm" />.
  </para>

  <para>
   To get information about the balloon device in the monitor console and to
   determine whether the device is enabled, use the <command>info
   balloon</command> command:
  </para>

<screen>(qemu) info balloon</screen>

  <para>
   If the balloon device is enabled, use the <command>balloon
   <replaceable>memory_in_MB</replaceable></command> command to set the
   requested amount of memory:
  </para>

<screen>(qemu) balloon 400</screen>
 </sect1>
 <sect1>
  <title>Dumping Virtual Machine Memory</title>

  <para>
   To save the content of the virtual machine memory to a disk or console
   output, use the following commands:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>memsave <replaceable>addr</replaceable><replaceable>size</replaceable><replaceable>filename</replaceable></command>
    </term>
    <listitem>
     <para>
      Saves virtual memory dump starting at <replaceable>addr</replaceable>
      of size <replaceable>size</replaceable> to file
      <replaceable>filename</replaceable>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>pmemsave <replaceable>addr</replaceable><replaceable>size</replaceable><replaceable>filename</replaceable></command>
    </term>
    <listitem>
     <para>
      Saves physical memory dump starting at <replaceable>addr</replaceable>
      of size <replaceable>size</replaceable> to file
      <replaceable>filename</replaceable>-
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>x /<replaceable>fmt</replaceable><replaceable>addr</replaceable>
    </term>
    <listitem>
     <para>
      Makes a virtual memory dump starting at address
      <replaceable>addr</replaceable> and formatted according to the
      <replaceable>fmt</replaceable> string. The
      <replaceable>fmt</replaceable> string consists of three parameters
      <literal><replaceable>count</replaceable><replaceable>format</replaceable><replaceable>size</replaceable></literal>:
     </para>
     <para>
      The <replaceable>count</replaceable> parameter is the number of the
      items to be dumped.
     </para>
     <para>
      The <replaceable>format</replaceable> can be <literal>x</literal>
      (hex), <literal>d</literal> (signed decimal), <literal>u</literal>
      (unsigned decimal), <literal>o</literal> (octal), <literal>c</literal>
      (char) or <literal>i</literal> (assembly instruction).
     </para>
     <para>
      The <replaceable>size</replaceable> parameter can be
      <literal>b</literal> (8 bits), <literal>h</literal> (16 bits),
      <literal>w</literal> (32 bits) or <literal>g</literal> (64 bits). On
      x86, <literal>h</literal> or <literal>w</literal> can be specified
      with the <literal>i</literal> format to respectively select 16 or
      32-bit code instruction size. is the number of the items to be dumped.
      <remark>mdejmek: I guess this is a copy and paste error or what is missing here?</remark>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>xp /<replaceable>fmt</replaceable><replaceable>addr</replaceable>
    </term>
    <listitem>
     <para>
      Makes a physical memory dump starting at address
      <replaceable>addr</replaceable> and formatted according to the
      <replaceable>fmt</replaceable> string. The
      <replaceable>fmt</replaceable> string consists of three parameters
      <literal><replaceable>count</replaceable><replaceable>format</replaceable><replaceable>size</replaceable></literal>:
     </para>
     <para>
      The <replaceable>count</replaceable> parameter is the number of the
      items to be dumped.
     </para>
     <para>
      The <replaceable>format</replaceable> can be <literal>x</literal>
      (hex), <literal>d</literal> (signed decimal), <literal>u</literal>
      (unsigned decimal), <literal>o</literal> (octal), <literal>c</literal>
      (char) or <literal>i</literal> (asm instruction).
     </para>
     <para>
      The <replaceable>size</replaceable> parameter can be
      <literal>b</literal> (8 bits), <literal>h</literal> (16 bits),
      <literal>w</literal> (32 bits) or <literal>g</literal> (64 bits). On
      x86, <literal>h</literal> or <literal>w</literal> can be specified
      with the<literal>i</literal> format to respectively select 16 or
      32-bit code instruction size. is the number of the items to be dumped.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Managing Virtual Machine Snapshots</title>

  <para>
   Virtual machine snapshots are snapshots of the complete virtual machine
   including the state of CPU, RAM, and the content of all writable disks.
   To use virtual machine snapshots, you must have at least one
   non-removable and writable block device using the
   <literal>qcow2</literal> disk image format.
  </para>

  <note>
   <para>
    Currently, only the <literal>raw</literal> disk image format is
    supported by Novell.
   </para>
  </note>

  <para>
   Snapshots are helpful when you need to save your virtual machine in a
   particular state. For example, after you configured network services on a
   virtualized server and want to quickly start the virtual machine in the
   same state that has been saved last. You can also create a snapshot after
   the virtual machine has been powered off to create a backup state before
   you try something experimental and possibly make &vmguest; unstable. This
   section introduces the former case, while the latter is described in
   <xref linkend="cha.qemu.guest_inst.qemu-img.snapshots"/>.
  </para>

  <para>
   The following commands are available for managing snapshosts in &qemu;
   monitor:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>savevm <replaceable>name</replaceable></command>
    </term>
    <listitem>
     <para>
      Creates a new virtual machine snapshot under the tag
      <replaceable>name</replaceable> or replaces an existing snapshot.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>loadvm <replaceable>name</replaceable></command>
    </term>
    <listitem>
     <para>
      Loads a virtual machine snapshot tagged
      <replaceable>name</replaceable>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>delvm</command>
    </term>
    <listitem>
     <para>
      Deletes a virtual machine snapshot.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>info snapshots</command>
    </term>
    <listitem>
     <para>
      Prints information about available snapshots.
     </para>
<screen>(qemu) info snapshots 
Snapshot list:
ID<co id="co.qemu_monitor.snapshot.l.id"/>       TAG<co id="co.qemu_monitor.snapshot.l.tag"/>               VM SIZE<co id="co.qemu_monitor.snapshot.l.size"/>        DATE<co id="co.qemu_monitor.snapshot.l.date"/>          VM CLOCK<co id="co.qemu_monitor.snapshot.l.clock"/>
1         booting                4.4M 2010-11-22 10:51:10   00:00:20.476
2         booted                 184M 2010-11-22 10:53:03   00:02:05.394
3         logged_in              273M 2010-11-22 11:00:25   00:04:34.843
4         ff_and_term_running    372M 2010-11-22 11:12:27   00:08:44.965</screen>
     <calloutlist>
      <callout arearefs="co.qemu_monitor.snapshot.l.id">
       <para>
        Unique identification number of the snapshot. Usually
        auto-incremented.
       </para>
      </callout>
      <callout arearefs="co.qemu_monitor.snapshot.l.tag">
       <para>
        Unique description string of the snapshot. It is meant as a human
        readable version of the ID.
       </para>
      </callout>
      <callout arearefs="co.qemu_monitor.snapshot.l.size">
       <para>
        The disk space occupied by the snapshot. Note that the more memory
        is consumed by running applications, the bigger the snapshot is.
       </para>
      </callout>
      <callout arearefs="co.qemu_monitor.snapshot.l.date">
       <para>
        Time and date the snapshot was created.
       </para>
      </callout>
      <callout arearefs="co.qemu_monitor.snapshot.l.clock">
       <para>
        The current state of the virtual machine's clock.
       </para>
      </callout>
     </calloutlist>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Suspending and Resuming Virtual Machine Execution</title>

  <para>
   The following commands are available for suspending and resuming virtual
   machines:
  </para>

  <variablelist>
   <varlistentry>
    <term><command>stop</command>
    </term>
    <listitem>
     <para>
      Suspends the execution of the virtual machine.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>cont</command>
    </term>
    <listitem>
     <para>
      Resumes the execution of the virtual machine.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>system_reset</command>
    </term>
    <listitem>
     <para>
      Resets the virtual machine. The effect is similar to the reset button
      on a physical machine. This may leave the filesystem in an unclean
      state.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>system_powedown</command>
    </term>
    <listitem>
     <para>
      Sends an ACPI shutdown request to the machine. The efect is similar to
      the power button on a physical machine.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><command>q</command> or <command>quit</command>
    </term>
    <listitem>
     <para>
      Terminates &qemu; immediately.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1>
  <title>Live Migration</title>

  <para>
   The live migration process allows to transmite any virtual machine from
   one host system to another host system without any interruption in
   availability. It is possible to change hosts permanently or just during a
   maintenance. It is recommended that the source and destination systems
   have the same architecture, however it is possible to migrate between
   hosts with AMD and Intel architecture or even between Linux and Windows
   hosts.
  </para>

  <para>
   The requirements for the live migration:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     The virtual machine image must be accessible on both source and
     destination hosts. For example, it can be located on a shared NFS disk.
      
    </para>
   </listitem>
   <listitem>
    <para>
     The image directory should be located in the same path on both hosts.
      
    </para>
   </listitem>
   <listitem>
    <para>
     Both hosts must be located in the same subnet.  
    </para>
   </listitem>
   <listitem>
    <para>
     The guest on the source and destination hosts must be started in the
     same way.  
    </para>
   </listitem>
  </itemizedlist>

  <para>
   The live migration process has the following steps:
  </para>

  <procedure>
   <step>
    <para>
     The virtual machine instance is running on the source host.
    </para>
   </step>
   <step>
    <para>
     The virtual machine is started on the destination host in the frozen
     listening mode. The parameters used are the same as on the source host
     plus the <option>-incoming
     tcp:<replaceable>ip</replaceable>:<replaceable>port</replaceable></option>
     parameter, where <replaceable>ip</replaceable> specifies the IP address
     and <replaceable>port</replaceable> specifies the port for listening to
     the incoming migration. If 0 is set as IP address, the virtual machine
     listens on all interfaces.
    </para>
   </step>
   <step>
    <para>
     On the source host, switch to the monitor console and use the
     <command>migrate -d
     tcp:<replaceable>destination_ip</replaceable>:<replaceable>port</replaceable></command>
     command to initiate the migration.
    </para>
   </step>
   <step>
    <para>
     To determine the state of the migration, use the <command>info
     migrate</command> command in the monitor console on the source host.
    </para>
   </step>
   <step>
    <para>
     To cancel the migration, use the <command>migrate_cancel</command>
     command in the monitor console on the source host.
    </para>
   </step>
   <step>
    <para>
     To set the maximum tolerable downtime for migration in seconds, use the
     <command>migrate_set_downtime
     <replaceable>number_of_seconds</replaceable></command> command.
    </para>
   </step>
   <step>
    <para>
     To set the maximum speed for migration in bytes per second, use the
     <command>migrate_set_speed
     <replaceable>bytes_per_second</replaceable></command> command.
    </para>
   </step>
  </procedure>
 </sect1>
</chapter>
