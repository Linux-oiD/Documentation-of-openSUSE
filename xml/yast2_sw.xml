<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>
<!--taroth 2010-07-23: qt and gtk+ version have become much more similar than 
 they used to be some releases ago (ricardo cruz driving this now) >
 for next revision, hunt ofr similarities and remove text duplication 
  where possible-->
<chapter id="cha.y2.sw">
 <title>Installing or Removing Software</title><indexterm>
 <primary>YaST</primary>
 <secondary>software</secondary></indexterm><indexterm>
 <primary>configuring</primary>
 <secondary>software</secondary></indexterm>
 <abstract>
  <para>
   Use &yast;'s software management tool to search for software components
   you want to add or remove. &yast; resolves all dependencies for you. To
   install packages not shipped with the installation media, add additional
   software repositories to your setup and let &yast; manage them. Keep your
   system up-to-date by managing software updates with the update applet.
  </para>
 </abstract>
 <para os="sles">
  Change the software collection of your system with the &yast; Software
  Manager. This &yast; module is available in two toolkit flavors: Qt and
  ncurses; the Qt flavor is described here.
 </para>
 <para os="sled;osuse">
  Change the software collection of your system with &yast; Software
  Manager. This &yast; module is available in three toolkit flavors: Qt (for
  KDE desktops), GTK+ (for GNOME desktops), and ncurses (providing a
  pseudo-graphical user interface in text mode). This chapter describes Qt
  and GTK+ flavors&mdash;for details on the ncurses &yast;, see
  <xref linkend="cha.yast.text"/>.
 </para>
 <tip os="sled;osuse">
  <title>Changing the Toolkit Flavor</title>
  <para>
   By default, &yast; is started with the toolkit matching your desktop
   (GTK+ under GNOME, Qt under KDE). To alter this default setting
   system-wide, change the variable <literal>WANTED_GUI</literal> in
   <filename>/etc/sysconfig/yast2</filename> to either <literal>qt</literal>
   or <literal>gtk</literal>.
  </para>
  <para>
   If you do not want to change the system-wide settings, you can
   nevertheless start &yast; in the desired flavor from command line by
   using the <option>--gtk</option> or <option>--qt</option>. For example:
   <command>yast2 --gtk</command>.
  </para>
 </tip>
 <note>
  <title>Confirmation and Review of Changes</title>
  <para>
   When installing, updating or removing packages, any changes in the
   Software Manager are not applied immediately but only after confirming
   them with <guimenu>Accept</guimenu> or <guimenu>Apply</guimenu>
   respectively. &yast; maintains a list with all actions, allowing you to
   review and modify your changes before applying them to the system.
  </para>
 </note>
 <sect1 id="sec.onlineupdate.terms">
  <title>Definition of Terms</title>

  <variablelist>
   <varlistentry>
    <term>Repository</term>
    <listitem>
     <para>
      A local or remote directory containing packages, plus additional
      information about these packages (package meta-data).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>(Repository) Alias</term>
    <listitem>
     <para>
      A short name for a repository used by various zypper commands. The
      alias can be chosen by the user when adding a repository and must be
      unique.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Product</term>
    <listitem>
     <para>
      Represents a whole product, for example &productnamereg;.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Pattern</term>
    <listitem>
     <para>
      A pattern is an installable group of packages dedicated to a certain
      purpose. For example, the <systemitem>Laptop</systemitem> pattern
      contains all packages that are needed in a mobile computing
      environment. Patterns define package dependencies (such as required or
      recommended packages) and come with a preselection of packages marked
      for installation. This ensures that the most important packages needed
      for a certain purpose are available on your system after installation
      of the pattern. However, not necessarily all packages in a pattern are
      preselected for installation and you can manually select or deselect
      packages within a pattern according to your needs and wishes.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Package</term>
    <listitem>
     <para>
      A package is a compressed file in <literal>rpm</literal> format that
      contains the files for a particular program.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Patch</term>
    <listitem>
     <para>
      A patch consists of one or more packages and may be applied by means
      of deltarpms. It may also introduce dependencies to packages that are
      not installed yet.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Resolvable</term>
    <listitem>
     <para>
      An generic term for product, pattern, package or patch. The most
      commonly used type of resolvable is a package or a patch.
     </para>
    </listitem>
   </varlistentry>
<!--taroth 2010-07-22: according to michael andres, patchrpms are deprecated
    since 11.2, thus removing from the list-->
   <varlistentry>
    <term>deltarpm</term>
    <listitem>
     <para>
      A deltarpm consists only of the binary diff between two defined
      versions of a package, and therefore has the smallest download size.
      Before being installed, the full RPM package is rebuilt on the local
      machine.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Package Dependencies</term>
    <listitem>
     <para>
      Certain packages are dependent on other packages, such as shared
      libraries. In other terms, a package may <literal>require</literal>
      other packages&mdash;if the required packages are not available, the
      package cannot be installed. In addition to dependencies (package
      requirements) that must be fulfilled, some packages
      <literal>recommend</literal> other packages. These recommended
      packages are only installed if they are actually available, otherwise
      they are just ignored and the package recommending them is installed
      nevertheless.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 <sect1 id="sec.y2.sw.qt">
  <title>Using the KDE Interface (Qt)</title>

  <remark role="proofing">taroth 2010-07-14: CAVE while proofing - keep in sync
   with yast2_sw_gtk.xml!</remark>

  <para>
   The &yast; Qt interface is started by default when using the desktops
   KDE, icewm, and others. It is also used when invoking &yast; from a
   remote terminal. Start the software manager from the &yast; Control
   Center by choosing <menuchoice> <guimenu>Software</guimenu>
   <guimenu>Software Management</guimenu> </menuchoice>.
  </para>

  <informalfigure>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="yast2_sw_manager.png" width="70%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="yast2_sw_manager.png" width="65%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </informalfigure>

  <sect2 id="sec.y2.sw.search">
   <title>Views for Searching Packages or Patterns</title>
   <para>
    The &yast; software manager can install packages or patterns from all
    currently enabled repositories. It offers different views and filters to
    make it easier to find the software you are searching for. The
    <guimenu>Search </guimenu> view is the default view of the window. To
    change view, click <guimenu>View</guimenu> and select one of the
    following entries from the drop-down list. The selected view opens in a
    new tab.
   </para>
   <variablelist>
    <varlistentry>
     <term>Patterns</term>
     <listitem>
      <para>
       Lists all patterns available for installation on your system.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Package Groups</term>
     <listitem>
      <para>
       Lists all packages sorted by groups such as
       <guimenu>Graphics</guimenu>, <guimenu>Programming</guimenu>, or
       <guimenu>Security</guimenu>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>RPM Groups</term>
     <listitem>
      <para>
       Lists all packages sorted by functionality with groups and subgroups.
       For example <menuchoice> <guimenu>Networking</guimenu>
       <guimenu>Email</guimenu> <guimenu>Clients</guimenu> </menuchoice>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Languages</term>
     <listitem>
      <para>
       Filter to list all packages needed to add a new system language.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Repositories</term>
     <listitem>
      <para>
       Filter to list packages by repository. In order to select more than
       one repository, hold the <keycap function="control"/> key while
       clicking on repository names. The <quote>pseudo repository</quote>
       <guimenu>@System</guimenu> lists all packages currently installed.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Search</term>
     <listitem>
      <para>
       Lets you search for a package according to certain criteria. Enter a
       search term and press <keycap function="enter"/>. Refine your search
       by specifying where to <guimenu>Search In</guimenu> and by changing
       the <guimenu>Search Mode</guimenu>. For example, if you do not know
       the package name but only the name of the application that you are
       searching for, try including the package
       <guimenu>Description</guimenu> in the search process.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Installation Summary</term>
     <listitem>
      <para>
       If you have already selected packages for installation, update or
       removal, this view shows the changes that will be applied to your
       system as soon as you click <guimenu>Accept</guimenu>. To filter for
       packages with a certain status in this view, activate or deactivate
       the respective check boxes. Hit <keycombo> <keycap function="shift"/>
       <keycap>F1</keycap> </keycombo> for details on the status flags.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <tip>
    <title>Finding Packages not Belonging to an Active Repository</title>
    <para>
     To list all packages that do not belong to an active repository, choose
     <menuchoice> <guimenu>View</guimenu> <guimenu>Repositories</guimenu>
     <guimenu>@System</guimenu> </menuchoice> and then choose <menuchoice>
     <guimenu>Secondary Filter</guimenu> <guimenu>Unmaintained
     Packages</guimenu></menuchoice>. This is useful, for example, if you
     have deleted a repository and would like to make sure no packages from
     that repository remain installed.
    </para>
   </tip>
  </sect2>

  <sect2 id="sec.y2.sw.install">
   <title>Installing and Removing Packages or Patterns</title>
<!-- fs 2009-10-07: Everything in one procedure, since this topic is already
covered in the Start-Up cha.software (software.xml) -->
   <para>
    Certain packages are dependent on other packages, such as shared
    libraries. On the other hand, some packages cannot coexist with others
    on the system. If possible, &yast; automatically resolves these
    dependencies or conflicts. If your choice results in a dependency
    conflict that cannot be automatically solved, you need to solve it
    manually as described in <xref linkend="sec.y2.sw.deps"/>.
   </para>
   <note>
    <title>Removal of Packages</title>
    <para>
     When removing any packages, by default &yast; only removes the selected
     packages. If you want &yast; to also remove any other packages that
     become unneeded after removal of the specified package, select
     <menuchoice> <guimenu>Options</guimenu> <guimenu>Cleanup when deleting
     packages</guimenu> </menuchoice>.
    </para>
   </note>
   <procedure>
    <step>
     <para>
      Search for packages as described in
      <xref linkend="sec.y2.sw.search"
      />.
     </para>
    </step>
    <step>
     <para>
      The packages found are listed in the right pane. To install a package
      or remove it, right-click it and choose <guimenu>Install</guimenu> or
      <guimenu>Delete</guimenu>. If the relevant option is not available,
      check the package status indicated by the symbol in front of the
      package name&mdash;hit <keycombo> <keycap function="shift"/>
      <keycap>F1</keycap> </keycombo> for help.
     </para>
     <tip>
      <title>Applying an Action to All Packages Listed</title>
      <para>
       To apply an action to all packages listed in the right pane, choose
       an action from <menuchoice> <guimenu>Package</guimenu> <guimenu>All
       in This List</guimenu> </menuchoice>.
      </para>
     </tip>
    </step>
    <step>
     <para>
      To install a pattern, right-click the pattern name and choose
      <guimenu>Install</guimenu>.
     </para>
    </step>
    <step>
     <para>
      It is not possible to remove a pattern per se. Instead, select the
      packages of a pattern you want to remove and mark them for removal.
     </para>
    </step>
    <step>
     <para>
      In order to select more packages, repeat the steps mentioned above.
     </para>
    </step>
    <step>
     <para>
      Before applying your changes, you can review or modify them by
      clicking <menuchoice> <guimenu>View</guimenu> <guimenu>Installation
      Summary</guimenu> </menuchoice>. By default, all packages that will
      change status, are listed.
     </para>
    </step>
    <step>
     <para>
      In order to revert the status for a package, right-click the package
      and select one of the following entries: <guimenu>Keep</guimenu> if
      the package was scheduled to be deleted or updated, or <guimenu>Do Not
      Install</guimenu> if it was scheduled for installation. To abandon all
      changes and close the Software Manager, click
      <guimenu>Cancel</guimenu> and <guimenu>Abandon</guimenu>
     </para>
    </step>
    <step>
     <para>
      When you are finished, click <guimenu>Accept</guimenu> to apply your
      changes.
     </para>
    </step>
    <step>
     <para>
      In case &yast; found dependencies on other packages, a list of
      packages that have additionally been chosen for installation, update
      or removal is presented. Click <guimenu>Continue</guimenu> to accept
      them.
     </para>
     <para>
      After all selected packages are installed, updated or removed, the
      &yast; Software Manager automatically terminates.
     </para>
    </step>
   </procedure>
   <note>
    <title>Installing Source Packages</title>
    <para>
     Installing source packages with &yast; Software Manager is not possible
     at the moment. Use the command line tool <command>zypper</command> for
     this purpose. For more information, see
     <xref linkend="sec.zypper.softman.sources"/>.
    </para>
   </note>
  </sect2>

  <sect2 id="sec.y2.sw.update">
   <title>Updating Packages</title>
   <para>
    Instead of updating individual packages, you can also update all
    installed packages or all packages from a certain repository. When mass
    updating packages, the following aspects are generally considered:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      priorities of the repositories that provide the package,
     </para>
    </listitem>
    <listitem>
     <para>
      architecture of the package (for example, x86_64, i686, i586),
     </para>
    </listitem>
    <listitem>
     <para>
      version number of the package,
     </para>
    </listitem>
    <listitem>
     <para>
      package vendor.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Which of the aspects has the highest importance for choosing the update
    candidates depends on the respective update option you choose.
   </para>
   <procedure>
    <step>
     <para>
      To update all installed packages to the latest version, choose
      <menuchoice> <guimenu>Package</guimenu> <guimenu>All
      Packages</guimenu> <guimenu>Update if Newer Version
      Available</guimenu> </menuchoice> from the main menu.
     </para>
     <para>
      All repositories are checked for possible update candidates, using the
      following policy: &yast; first tries to restrict the search to
      packages with the same architecture and vendor like the installed one.
      If the search is positive, the <quote>best</quote> update candidate
      from those is selected according to the process below. However, if no
      comparable package of the same vendor can be found, the search is
      expanded to all packages with the same architecture. If still no
      comparable package can be found, all packages are considered and the
      <quote>best</quote> update candidate is selected according to the
      following criteria:
     </para>
     <orderedlist>
      <listitem>
       <para>
        Repository priority: Prefer the package from the repository with the
        highest priority.
       </para>
      </listitem>
      <listitem>
       <para>
        If more than one package results from this selection, choose the one
        with the <quote>best</quote> architecture (best choice: matching the
        architecture of the installed one; otherwise: x86_64 &gt; i686 &gt;
        i586).
       </para>
      </listitem>
     </orderedlist>
     <para>
      If the resulting package has a higher version number than the
      installed one, the installed package will be updated and replaced with
      the selected update candidate.
     </para>
     <para>
      This option tries to avoid changes in architecture and vendor for the
      installed packages, but under certain circumstances, they are
      tolerated.
     </para>
     <note>
      <title>Update Unconditionally</title>
      <para>
       If you choose <menuchoice> <guimenu>Package</guimenu> <guimenu>All
       Packages</guimenu> <guimenu>Update Unconditionally</guimenu>
       </menuchoice> instead, basically the same criteria apply but
       candidate package found is installed unconditionally. Thus, choosing
       this option might actually lead to downgrading some packages.
      </para>
     </note>
    </step>
    <step>
     <para>
      To make sure that the packages for a mass update derive from a certain
      repository:
     </para>
     <substeps>
      <step>
       <para>
        Choose the repository from which to update as described in
        <xref linkend="sec.y2.sw.search"/> .
       </para>
      </step>
      <step>
       <para>
        On the right hand side of the window, click <guimenu>Switch system
        packages to the versions in this repository</guimenu>. This
        explicitly allows &yast; to change the package vendor when replacing
        the packages.
       </para>
       <para>
        As soon as you proceed with <guimenu>Accept</guimenu>, all installed
        packages will be replaced by packages deriving from this repository,
        if available. This may lead to changes in vendor and architecture
        and even to downgrading some packages.
       </para>
      </step>
      <step>
       <para>
        To refrain from this, click <guimenu>Cancel switching system
        packages to the versions in this repository</guimenu>. Note that you
        can only cancel this until you press the <guimenu>Accept</guimenu>
        button.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Before applying your changes, you can review or modify them by
      clicking <menuchoice> <guimenu>View</guimenu> <guimenu>Installation
      Summary</guimenu> </menuchoice>. By default, all packages that will
      change status, are listed.
     </para>
    </step>
    <step>
     <para>
      If all options are set according to your wishes, confirm your changes
      with <guimenu>Accept</guimenu> to start the mass update.
     </para>
    </step>
   </procedure>
  </sect2>

<!-- fs 2009-10-07:
     Does not work with 11.2 - perhaps this will re-implemented again -->

<!--
   <tip>
    <title>Quick Search</title>
    <para>
     In addition to the <guimenu>Search</guimenu> filter, all lists of the
     package manager feature a quick search. Click the respective list to
     gain focus (for example, the <guimenu>Package</guimenu> list) and enter
     a letter to move the cursor to the first package in the list whose name
     begins with this letter.
    </para>
   </tip>
-->

  <sect2 id="sec.y2.sw.deps">
   <title>Checking Software Dependencies</title>
   <para>
    Most packages are dependent on other packages. If a package, for
    example, uses a shared library, it is dependent on the package providing
    this library. On the other hand some packages cannot coexist with each
    other, causing a conflict (for example, you can only install one mail
    transfer agent: sendmail or postfix). When installing or removing
    software, the Software Manager makes sure no dependencies or conflicts
    remain unsolved to ensure system integrity.
   </para>
   <para>
    In case there exists only one solution to resolve a dependency or a
    conflict, it is resolved automatically. Multiple solutions always cause
    a conflict which needs to be resolved manually. If solving a conflict
    involves a vendor or architecture change, it also needs to be solved
    manually. When clicking <guimenu>Accept</guimenu> to apply any changes
    in the Software Manager, you get an overview of all actions triggered by
    the automatic resolver which you need to confirm.
   </para>
   <para>
    By default, dependencies are automatically checked. A check is performed
    every time you change a package status (for example, by marking a
    package for installation or removal). This is generally useful, but can
    become exhausting when manually resolving a dependency conflict. To
    disable this function, uncheck <menuchoice>
    <guimenu>Dependencies</guimenu> <guimenu>Autocheck</guimenu>
    </menuchoice>. Manually perform a dependency check with <menuchoice>
    <guimenu>Dependencies</guimenu> <guimenu>Check
    Now</guimenu></menuchoice>. A consistency check is always performed when
    you confirm your selection with <guimenu>Accept</guimenu>.
   </para>
   <para>
    To review a package's dependencies, right-click it and choose
    <guimenu>Show Solver Information</guimenu>. A map showing the
    dependencies opens. Packages that are already installed are displayed in
    a green frame.
   </para>
   <note>
    <title>Manually Solving Package Conflicts</title>
    <para>
     Unless you are very experienced, follow the suggestions &yast; makes
     when handling package conflicts, otherwise you may not be able to
     resolve them. Keep in mind that every change you make, potentially
     triggers other conflicts, so you can easily end up with a steadily
     increasing number of conflicts. In case this happens,
     <guimenu>Cancel</guimenu> the Software Manager,
     <guimenu>Abandon</guimenu> all your changes and start again.
    </para>
   </note>
   <figure id="fig.y2.sw.packconfl">
    <title>Conflict Management of the Software Manager</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="yast2_package_conflict.png" width="70%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="yast2_package_conflict.png" width="65%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
 </sect1>
 <xi:include href="yast2_sw_gtk.xml" xmlns:xi="http://www.w3.org/2001/XInclude"
  os="sled;osuse"/>
 <xi:include href="yast2_sw_repo.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
 <xi:include href="opensuseupdater.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
</chapter>
